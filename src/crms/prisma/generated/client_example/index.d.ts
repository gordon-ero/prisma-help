
/**
 * Client
**/

import * as runtime from './runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model audit_log_entries
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type audit_log_entries = $Result.DefaultSelection<Prisma.$audit_log_entriesPayload>
/**
 * Model flow_state
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type flow_state = $Result.DefaultSelection<Prisma.$flow_statePayload>
/**
 * Model identities
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type identities = $Result.DefaultSelection<Prisma.$identitiesPayload>
/**
 * Model instances
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type instances = $Result.DefaultSelection<Prisma.$instancesPayload>
/**
 * Model mfa_amr_claims
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type mfa_amr_claims = $Result.DefaultSelection<Prisma.$mfa_amr_claimsPayload>
/**
 * Model mfa_challenges
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type mfa_challenges = $Result.DefaultSelection<Prisma.$mfa_challengesPayload>
/**
 * Model mfa_factors
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type mfa_factors = $Result.DefaultSelection<Prisma.$mfa_factorsPayload>
/**
 * Model refresh_tokens
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type refresh_tokens = $Result.DefaultSelection<Prisma.$refresh_tokensPayload>
/**
 * Model saml_providers
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type saml_providers = $Result.DefaultSelection<Prisma.$saml_providersPayload>
/**
 * Model saml_relay_states
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type saml_relay_states = $Result.DefaultSelection<Prisma.$saml_relay_statesPayload>
/**
 * Model schema_migrations
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type schema_migrations = $Result.DefaultSelection<Prisma.$schema_migrationsPayload>
/**
 * Model sessions
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sessions = $Result.DefaultSelection<Prisma.$sessionsPayload>
/**
 * Model sso_domains
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
 */
export type sso_domains = $Result.DefaultSelection<Prisma.$sso_domainsPayload>
/**
 * Model sso_providers
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
 */
export type sso_providers = $Result.DefaultSelection<Prisma.$sso_providersPayload>
/**
 * Model users
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model account_ai_chat
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type account_ai_chat = $Result.DefaultSelection<Prisma.$account_ai_chatPayload>
/**
 * Model account_blog_post_instances
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type account_blog_post_instances = $Result.DefaultSelection<Prisma.$account_blog_post_instancesPayload>
/**
 * Model account_blog_posts
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type account_blog_posts = $Result.DefaultSelection<Prisma.$account_blog_postsPayload>
/**
 * Model account_plans
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type account_plans = $Result.DefaultSelection<Prisma.$account_plansPayload>
/**
 * Model account_review_generator
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type account_review_generator = $Result.DefaultSelection<Prisma.$account_review_generatorPayload>
/**
 * Model account_social_media
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type account_social_media = $Result.DefaultSelection<Prisma.$account_social_mediaPayload>
/**
 * Model accounts
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type accounts = $Result.DefaultSelection<Prisma.$accountsPayload>
/**
 * Model communications
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type communications = $Result.DefaultSelection<Prisma.$communicationsPayload>
/**
 * Model communications_emails
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type communications_emails = $Result.DefaultSelection<Prisma.$communications_emailsPayload>
/**
 * Model communications_emails_status_updates
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type communications_emails_status_updates = $Result.DefaultSelection<Prisma.$communications_emails_status_updatesPayload>
/**
 * Model communications_texts
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type communications_texts = $Result.DefaultSelection<Prisma.$communications_textsPayload>
/**
 * Model contact_info_emails
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type contact_info_emails = $Result.DefaultSelection<Prisma.$contact_info_emailsPayload>
/**
 * Model contact_info_phones
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type contact_info_phones = $Result.DefaultSelection<Prisma.$contact_info_phonesPayload>
/**
 * Model contacts
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type contacts = $Result.DefaultSelection<Prisma.$contactsPayload>
/**
 * Model customer_records
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type customer_records = $Result.DefaultSelection<Prisma.$customer_recordsPayload>
/**
 * Model email_templates
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type email_templates = $Result.DefaultSelection<Prisma.$email_templatesPayload>
/**
 * Model leads
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type leads = $Result.DefaultSelection<Prisma.$leadsPayload>
/**
 * Model marketing_campaigns
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type marketing_campaigns = $Result.DefaultSelection<Prisma.$marketing_campaignsPayload>
/**
 * Model notes
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type notes = $Result.DefaultSelection<Prisma.$notesPayload>
/**
 * Model opportunities
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type opportunities = $Result.DefaultSelection<Prisma.$opportunitiesPayload>
/**
 * Model plans
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type plans = $Result.DefaultSelection<Prisma.$plansPayload>
/**
 * Model reps
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type reps = $Result.DefaultSelection<Prisma.$repsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const code_challenge_method: {
  s256: 's256',
  plain: 'plain'
};

export type code_challenge_method = (typeof code_challenge_method)[keyof typeof code_challenge_method]


export const factor_type: {
  totp: 'totp',
  webauthn: 'webauthn'
};

export type factor_type = (typeof factor_type)[keyof typeof factor_type]


export const factor_status: {
  unverified: 'unverified',
  verified: 'verified'
};

export type factor_status = (typeof factor_status)[keyof typeof factor_status]


export const aal_level: {
  aal1: 'aal1',
  aal2: 'aal2',
  aal3: 'aal3'
};

export type aal_level = (typeof aal_level)[keyof typeof aal_level]

}

export type code_challenge_method = $Enums.code_challenge_method

export const code_challenge_method: typeof $Enums.code_challenge_method

export type factor_type = $Enums.factor_type

export const factor_type: typeof $Enums.factor_type

export type factor_status = $Enums.factor_status

export const factor_status: typeof $Enums.factor_status

export type aal_level = $Enums.aal_level

export const aal_level: typeof $Enums.aal_level

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Audit_log_entries
 * const audit_log_entries = await prisma.audit_log_entries.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Audit_log_entries
   * const audit_log_entries = await prisma.audit_log_entries.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.audit_log_entries`: Exposes CRUD operations for the **audit_log_entries** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Audit_log_entries
    * const audit_log_entries = await prisma.audit_log_entries.findMany()
    * ```
    */
  get audit_log_entries(): Prisma.audit_log_entriesDelegate<ExtArgs>;

  /**
   * `prisma.flow_state`: Exposes CRUD operations for the **flow_state** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Flow_states
    * const flow_states = await prisma.flow_state.findMany()
    * ```
    */
  get flow_state(): Prisma.flow_stateDelegate<ExtArgs>;

  /**
   * `prisma.identities`: Exposes CRUD operations for the **identities** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Identities
    * const identities = await prisma.identities.findMany()
    * ```
    */
  get identities(): Prisma.identitiesDelegate<ExtArgs>;

  /**
   * `prisma.instances`: Exposes CRUD operations for the **instances** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Instances
    * const instances = await prisma.instances.findMany()
    * ```
    */
  get instances(): Prisma.instancesDelegate<ExtArgs>;

  /**
   * `prisma.mfa_amr_claims`: Exposes CRUD operations for the **mfa_amr_claims** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mfa_amr_claims
    * const mfa_amr_claims = await prisma.mfa_amr_claims.findMany()
    * ```
    */
  get mfa_amr_claims(): Prisma.mfa_amr_claimsDelegate<ExtArgs>;

  /**
   * `prisma.mfa_challenges`: Exposes CRUD operations for the **mfa_challenges** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mfa_challenges
    * const mfa_challenges = await prisma.mfa_challenges.findMany()
    * ```
    */
  get mfa_challenges(): Prisma.mfa_challengesDelegate<ExtArgs>;

  /**
   * `prisma.mfa_factors`: Exposes CRUD operations for the **mfa_factors** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mfa_factors
    * const mfa_factors = await prisma.mfa_factors.findMany()
    * ```
    */
  get mfa_factors(): Prisma.mfa_factorsDelegate<ExtArgs>;

  /**
   * `prisma.refresh_tokens`: Exposes CRUD operations for the **refresh_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Refresh_tokens
    * const refresh_tokens = await prisma.refresh_tokens.findMany()
    * ```
    */
  get refresh_tokens(): Prisma.refresh_tokensDelegate<ExtArgs>;

  /**
   * `prisma.saml_providers`: Exposes CRUD operations for the **saml_providers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Saml_providers
    * const saml_providers = await prisma.saml_providers.findMany()
    * ```
    */
  get saml_providers(): Prisma.saml_providersDelegate<ExtArgs>;

  /**
   * `prisma.saml_relay_states`: Exposes CRUD operations for the **saml_relay_states** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Saml_relay_states
    * const saml_relay_states = await prisma.saml_relay_states.findMany()
    * ```
    */
  get saml_relay_states(): Prisma.saml_relay_statesDelegate<ExtArgs>;

  /**
   * `prisma.schema_migrations`: Exposes CRUD operations for the **schema_migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Schema_migrations
    * const schema_migrations = await prisma.schema_migrations.findMany()
    * ```
    */
  get schema_migrations(): Prisma.schema_migrationsDelegate<ExtArgs>;

  /**
   * `prisma.sessions`: Exposes CRUD operations for the **sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.sessions.findMany()
    * ```
    */
  get sessions(): Prisma.sessionsDelegate<ExtArgs>;

  /**
   * `prisma.sso_domains`: Exposes CRUD operations for the **sso_domains** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sso_domains
    * const sso_domains = await prisma.sso_domains.findMany()
    * ```
    */
  get sso_domains(): Prisma.sso_domainsDelegate<ExtArgs>;

  /**
   * `prisma.sso_providers`: Exposes CRUD operations for the **sso_providers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sso_providers
    * const sso_providers = await prisma.sso_providers.findMany()
    * ```
    */
  get sso_providers(): Prisma.sso_providersDelegate<ExtArgs>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs>;

  /**
   * `prisma.account_ai_chat`: Exposes CRUD operations for the **account_ai_chat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Account_ai_chats
    * const account_ai_chats = await prisma.account_ai_chat.findMany()
    * ```
    */
  get account_ai_chat(): Prisma.account_ai_chatDelegate<ExtArgs>;

  /**
   * `prisma.account_blog_post_instances`: Exposes CRUD operations for the **account_blog_post_instances** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Account_blog_post_instances
    * const account_blog_post_instances = await prisma.account_blog_post_instances.findMany()
    * ```
    */
  get account_blog_post_instances(): Prisma.account_blog_post_instancesDelegate<ExtArgs>;

  /**
   * `prisma.account_blog_posts`: Exposes CRUD operations for the **account_blog_posts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Account_blog_posts
    * const account_blog_posts = await prisma.account_blog_posts.findMany()
    * ```
    */
  get account_blog_posts(): Prisma.account_blog_postsDelegate<ExtArgs>;

  /**
   * `prisma.account_plans`: Exposes CRUD operations for the **account_plans** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Account_plans
    * const account_plans = await prisma.account_plans.findMany()
    * ```
    */
  get account_plans(): Prisma.account_plansDelegate<ExtArgs>;

  /**
   * `prisma.account_review_generator`: Exposes CRUD operations for the **account_review_generator** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Account_review_generators
    * const account_review_generators = await prisma.account_review_generator.findMany()
    * ```
    */
  get account_review_generator(): Prisma.account_review_generatorDelegate<ExtArgs>;

  /**
   * `prisma.account_social_media`: Exposes CRUD operations for the **account_social_media** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Account_social_medias
    * const account_social_medias = await prisma.account_social_media.findMany()
    * ```
    */
  get account_social_media(): Prisma.account_social_mediaDelegate<ExtArgs>;

  /**
   * `prisma.accounts`: Exposes CRUD operations for the **accounts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.accounts.findMany()
    * ```
    */
  get accounts(): Prisma.accountsDelegate<ExtArgs>;

  /**
   * `prisma.communications`: Exposes CRUD operations for the **communications** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Communications
    * const communications = await prisma.communications.findMany()
    * ```
    */
  get communications(): Prisma.communicationsDelegate<ExtArgs>;

  /**
   * `prisma.communications_emails`: Exposes CRUD operations for the **communications_emails** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Communications_emails
    * const communications_emails = await prisma.communications_emails.findMany()
    * ```
    */
  get communications_emails(): Prisma.communications_emailsDelegate<ExtArgs>;

  /**
   * `prisma.communications_emails_status_updates`: Exposes CRUD operations for the **communications_emails_status_updates** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Communications_emails_status_updates
    * const communications_emails_status_updates = await prisma.communications_emails_status_updates.findMany()
    * ```
    */
  get communications_emails_status_updates(): Prisma.communications_emails_status_updatesDelegate<ExtArgs>;

  /**
   * `prisma.communications_texts`: Exposes CRUD operations for the **communications_texts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Communications_texts
    * const communications_texts = await prisma.communications_texts.findMany()
    * ```
    */
  get communications_texts(): Prisma.communications_textsDelegate<ExtArgs>;

  /**
   * `prisma.contact_info_emails`: Exposes CRUD operations for the **contact_info_emails** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contact_info_emails
    * const contact_info_emails = await prisma.contact_info_emails.findMany()
    * ```
    */
  get contact_info_emails(): Prisma.contact_info_emailsDelegate<ExtArgs>;

  /**
   * `prisma.contact_info_phones`: Exposes CRUD operations for the **contact_info_phones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contact_info_phones
    * const contact_info_phones = await prisma.contact_info_phones.findMany()
    * ```
    */
  get contact_info_phones(): Prisma.contact_info_phonesDelegate<ExtArgs>;

  /**
   * `prisma.contacts`: Exposes CRUD operations for the **contacts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contacts
    * const contacts = await prisma.contacts.findMany()
    * ```
    */
  get contacts(): Prisma.contactsDelegate<ExtArgs>;

  /**
   * `prisma.customer_records`: Exposes CRUD operations for the **customer_records** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customer_records
    * const customer_records = await prisma.customer_records.findMany()
    * ```
    */
  get customer_records(): Prisma.customer_recordsDelegate<ExtArgs>;

  /**
   * `prisma.email_templates`: Exposes CRUD operations for the **email_templates** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Email_templates
    * const email_templates = await prisma.email_templates.findMany()
    * ```
    */
  get email_templates(): Prisma.email_templatesDelegate<ExtArgs>;

  /**
   * `prisma.leads`: Exposes CRUD operations for the **leads** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leads
    * const leads = await prisma.leads.findMany()
    * ```
    */
  get leads(): Prisma.leadsDelegate<ExtArgs>;

  /**
   * `prisma.marketing_campaigns`: Exposes CRUD operations for the **marketing_campaigns** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Marketing_campaigns
    * const marketing_campaigns = await prisma.marketing_campaigns.findMany()
    * ```
    */
  get marketing_campaigns(): Prisma.marketing_campaignsDelegate<ExtArgs>;

  /**
   * `prisma.notes`: Exposes CRUD operations for the **notes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notes
    * const notes = await prisma.notes.findMany()
    * ```
    */
  get notes(): Prisma.notesDelegate<ExtArgs>;

  /**
   * `prisma.opportunities`: Exposes CRUD operations for the **opportunities** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Opportunities
    * const opportunities = await prisma.opportunities.findMany()
    * ```
    */
  get opportunities(): Prisma.opportunitiesDelegate<ExtArgs>;

  /**
   * `prisma.plans`: Exposes CRUD operations for the **plans** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Plans
    * const plans = await prisma.plans.findMany()
    * ```
    */
  get plans(): Prisma.plansDelegate<ExtArgs>;

  /**
   * `prisma.reps`: Exposes CRUD operations for the **reps** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reps
    * const reps = await prisma.reps.findMany()
    * ```
    */
  get reps(): Prisma.repsDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.7.1
   * Query Engine version: 0ca5ccbcfa6bdc81c003cf549abe4269f59c41e5
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    audit_log_entries: 'audit_log_entries',
    flow_state: 'flow_state',
    identities: 'identities',
    instances: 'instances',
    mfa_amr_claims: 'mfa_amr_claims',
    mfa_challenges: 'mfa_challenges',
    mfa_factors: 'mfa_factors',
    refresh_tokens: 'refresh_tokens',
    saml_providers: 'saml_providers',
    saml_relay_states: 'saml_relay_states',
    schema_migrations: 'schema_migrations',
    sessions: 'sessions',
    sso_domains: 'sso_domains',
    sso_providers: 'sso_providers',
    users: 'users',
    account_ai_chat: 'account_ai_chat',
    account_blog_post_instances: 'account_blog_post_instances',
    account_blog_posts: 'account_blog_posts',
    account_plans: 'account_plans',
    account_review_generator: 'account_review_generator',
    account_social_media: 'account_social_media',
    accounts: 'accounts',
    communications: 'communications',
    communications_emails: 'communications_emails',
    communications_emails_status_updates: 'communications_emails_status_updates',
    communications_texts: 'communications_texts',
    contact_info_emails: 'contact_info_emails',
    contact_info_phones: 'contact_info_phones',
    contacts: 'contacts',
    customer_records: 'customer_records',
    email_templates: 'email_templates',
    leads: 'leads',
    marketing_campaigns: 'marketing_campaigns',
    notes: 'notes',
    opportunities: 'opportunities',
    plans: 'plans',
    reps: 'reps'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'audit_log_entries' | 'flow_state' | 'identities' | 'instances' | 'mfa_amr_claims' | 'mfa_challenges' | 'mfa_factors' | 'refresh_tokens' | 'saml_providers' | 'saml_relay_states' | 'schema_migrations' | 'sessions' | 'sso_domains' | 'sso_providers' | 'users' | 'account_ai_chat' | 'account_blog_post_instances' | 'account_blog_posts' | 'account_plans' | 'account_review_generator' | 'account_social_media' | 'accounts' | 'communications' | 'communications_emails' | 'communications_emails_status_updates' | 'communications_texts' | 'contact_info_emails' | 'contact_info_phones' | 'contacts' | 'customer_records' | 'email_templates' | 'leads' | 'marketing_campaigns' | 'notes' | 'opportunities' | 'plans' | 'reps'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      audit_log_entries: {
        payload: Prisma.$audit_log_entriesPayload<ExtArgs>
        fields: Prisma.audit_log_entriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.audit_log_entriesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.audit_log_entriesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          findFirst: {
            args: Prisma.audit_log_entriesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.audit_log_entriesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          findMany: {
            args: Prisma.audit_log_entriesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>[]
          }
          create: {
            args: Prisma.audit_log_entriesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          createMany: {
            args: Prisma.audit_log_entriesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.audit_log_entriesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          update: {
            args: Prisma.audit_log_entriesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          deleteMany: {
            args: Prisma.audit_log_entriesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.audit_log_entriesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.audit_log_entriesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          aggregate: {
            args: Prisma.Audit_log_entriesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAudit_log_entries>
          }
          groupBy: {
            args: Prisma.audit_log_entriesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Audit_log_entriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.audit_log_entriesCountArgs<ExtArgs>,
            result: $Utils.Optional<Audit_log_entriesCountAggregateOutputType> | number
          }
        }
      }
      flow_state: {
        payload: Prisma.$flow_statePayload<ExtArgs>
        fields: Prisma.flow_stateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.flow_stateFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.flow_stateFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          findFirst: {
            args: Prisma.flow_stateFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.flow_stateFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          findMany: {
            args: Prisma.flow_stateFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>[]
          }
          create: {
            args: Prisma.flow_stateCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          createMany: {
            args: Prisma.flow_stateCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.flow_stateDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          update: {
            args: Prisma.flow_stateUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          deleteMany: {
            args: Prisma.flow_stateDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.flow_stateUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.flow_stateUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          aggregate: {
            args: Prisma.Flow_stateAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFlow_state>
          }
          groupBy: {
            args: Prisma.flow_stateGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Flow_stateGroupByOutputType>[]
          }
          count: {
            args: Prisma.flow_stateCountArgs<ExtArgs>,
            result: $Utils.Optional<Flow_stateCountAggregateOutputType> | number
          }
        }
      }
      identities: {
        payload: Prisma.$identitiesPayload<ExtArgs>
        fields: Prisma.identitiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.identitiesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.identitiesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          findFirst: {
            args: Prisma.identitiesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.identitiesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          findMany: {
            args: Prisma.identitiesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>[]
          }
          create: {
            args: Prisma.identitiesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          createMany: {
            args: Prisma.identitiesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.identitiesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          update: {
            args: Prisma.identitiesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          deleteMany: {
            args: Prisma.identitiesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.identitiesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.identitiesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          aggregate: {
            args: Prisma.IdentitiesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateIdentities>
          }
          groupBy: {
            args: Prisma.identitiesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<IdentitiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.identitiesCountArgs<ExtArgs>,
            result: $Utils.Optional<IdentitiesCountAggregateOutputType> | number
          }
        }
      }
      instances: {
        payload: Prisma.$instancesPayload<ExtArgs>
        fields: Prisma.instancesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.instancesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$instancesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.instancesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          findFirst: {
            args: Prisma.instancesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$instancesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.instancesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          findMany: {
            args: Prisma.instancesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>[]
          }
          create: {
            args: Prisma.instancesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          createMany: {
            args: Prisma.instancesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.instancesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          update: {
            args: Prisma.instancesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          deleteMany: {
            args: Prisma.instancesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.instancesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.instancesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          aggregate: {
            args: Prisma.InstancesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateInstances>
          }
          groupBy: {
            args: Prisma.instancesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<InstancesGroupByOutputType>[]
          }
          count: {
            args: Prisma.instancesCountArgs<ExtArgs>,
            result: $Utils.Optional<InstancesCountAggregateOutputType> | number
          }
        }
      }
      mfa_amr_claims: {
        payload: Prisma.$mfa_amr_claimsPayload<ExtArgs>
        fields: Prisma.mfa_amr_claimsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mfa_amr_claimsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mfa_amr_claimsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          findFirst: {
            args: Prisma.mfa_amr_claimsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mfa_amr_claimsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          findMany: {
            args: Prisma.mfa_amr_claimsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>[]
          }
          create: {
            args: Prisma.mfa_amr_claimsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          createMany: {
            args: Prisma.mfa_amr_claimsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.mfa_amr_claimsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          update: {
            args: Prisma.mfa_amr_claimsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          deleteMany: {
            args: Prisma.mfa_amr_claimsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.mfa_amr_claimsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.mfa_amr_claimsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          aggregate: {
            args: Prisma.Mfa_amr_claimsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMfa_amr_claims>
          }
          groupBy: {
            args: Prisma.mfa_amr_claimsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Mfa_amr_claimsGroupByOutputType>[]
          }
          count: {
            args: Prisma.mfa_amr_claimsCountArgs<ExtArgs>,
            result: $Utils.Optional<Mfa_amr_claimsCountAggregateOutputType> | number
          }
        }
      }
      mfa_challenges: {
        payload: Prisma.$mfa_challengesPayload<ExtArgs>
        fields: Prisma.mfa_challengesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mfa_challengesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mfa_challengesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          findFirst: {
            args: Prisma.mfa_challengesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mfa_challengesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          findMany: {
            args: Prisma.mfa_challengesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>[]
          }
          create: {
            args: Prisma.mfa_challengesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          createMany: {
            args: Prisma.mfa_challengesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.mfa_challengesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          update: {
            args: Prisma.mfa_challengesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          deleteMany: {
            args: Prisma.mfa_challengesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.mfa_challengesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.mfa_challengesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          aggregate: {
            args: Prisma.Mfa_challengesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMfa_challenges>
          }
          groupBy: {
            args: Prisma.mfa_challengesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Mfa_challengesGroupByOutputType>[]
          }
          count: {
            args: Prisma.mfa_challengesCountArgs<ExtArgs>,
            result: $Utils.Optional<Mfa_challengesCountAggregateOutputType> | number
          }
        }
      }
      mfa_factors: {
        payload: Prisma.$mfa_factorsPayload<ExtArgs>
        fields: Prisma.mfa_factorsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mfa_factorsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mfa_factorsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          findFirst: {
            args: Prisma.mfa_factorsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mfa_factorsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          findMany: {
            args: Prisma.mfa_factorsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>[]
          }
          create: {
            args: Prisma.mfa_factorsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          createMany: {
            args: Prisma.mfa_factorsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.mfa_factorsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          update: {
            args: Prisma.mfa_factorsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          deleteMany: {
            args: Prisma.mfa_factorsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.mfa_factorsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.mfa_factorsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          aggregate: {
            args: Prisma.Mfa_factorsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMfa_factors>
          }
          groupBy: {
            args: Prisma.mfa_factorsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Mfa_factorsGroupByOutputType>[]
          }
          count: {
            args: Prisma.mfa_factorsCountArgs<ExtArgs>,
            result: $Utils.Optional<Mfa_factorsCountAggregateOutputType> | number
          }
        }
      }
      refresh_tokens: {
        payload: Prisma.$refresh_tokensPayload<ExtArgs>
        fields: Prisma.refresh_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.refresh_tokensFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.refresh_tokensFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          findFirst: {
            args: Prisma.refresh_tokensFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.refresh_tokensFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          findMany: {
            args: Prisma.refresh_tokensFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>[]
          }
          create: {
            args: Prisma.refresh_tokensCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          createMany: {
            args: Prisma.refresh_tokensCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.refresh_tokensDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          update: {
            args: Prisma.refresh_tokensUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          deleteMany: {
            args: Prisma.refresh_tokensDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.refresh_tokensUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.refresh_tokensUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          aggregate: {
            args: Prisma.Refresh_tokensAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateRefresh_tokens>
          }
          groupBy: {
            args: Prisma.refresh_tokensGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Refresh_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.refresh_tokensCountArgs<ExtArgs>,
            result: $Utils.Optional<Refresh_tokensCountAggregateOutputType> | number
          }
        }
      }
      saml_providers: {
        payload: Prisma.$saml_providersPayload<ExtArgs>
        fields: Prisma.saml_providersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.saml_providersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.saml_providersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          findFirst: {
            args: Prisma.saml_providersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.saml_providersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          findMany: {
            args: Prisma.saml_providersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>[]
          }
          create: {
            args: Prisma.saml_providersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          createMany: {
            args: Prisma.saml_providersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.saml_providersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          update: {
            args: Prisma.saml_providersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          deleteMany: {
            args: Prisma.saml_providersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.saml_providersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.saml_providersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          aggregate: {
            args: Prisma.Saml_providersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSaml_providers>
          }
          groupBy: {
            args: Prisma.saml_providersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Saml_providersGroupByOutputType>[]
          }
          count: {
            args: Prisma.saml_providersCountArgs<ExtArgs>,
            result: $Utils.Optional<Saml_providersCountAggregateOutputType> | number
          }
        }
      }
      saml_relay_states: {
        payload: Prisma.$saml_relay_statesPayload<ExtArgs>
        fields: Prisma.saml_relay_statesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.saml_relay_statesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.saml_relay_statesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          findFirst: {
            args: Prisma.saml_relay_statesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.saml_relay_statesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          findMany: {
            args: Prisma.saml_relay_statesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>[]
          }
          create: {
            args: Prisma.saml_relay_statesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          createMany: {
            args: Prisma.saml_relay_statesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.saml_relay_statesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          update: {
            args: Prisma.saml_relay_statesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          deleteMany: {
            args: Prisma.saml_relay_statesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.saml_relay_statesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.saml_relay_statesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          aggregate: {
            args: Prisma.Saml_relay_statesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSaml_relay_states>
          }
          groupBy: {
            args: Prisma.saml_relay_statesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Saml_relay_statesGroupByOutputType>[]
          }
          count: {
            args: Prisma.saml_relay_statesCountArgs<ExtArgs>,
            result: $Utils.Optional<Saml_relay_statesCountAggregateOutputType> | number
          }
        }
      }
      schema_migrations: {
        payload: Prisma.$schema_migrationsPayload<ExtArgs>
        fields: Prisma.schema_migrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.schema_migrationsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.schema_migrationsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          findFirst: {
            args: Prisma.schema_migrationsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.schema_migrationsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          findMany: {
            args: Prisma.schema_migrationsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          create: {
            args: Prisma.schema_migrationsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          createMany: {
            args: Prisma.schema_migrationsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.schema_migrationsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          update: {
            args: Prisma.schema_migrationsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          deleteMany: {
            args: Prisma.schema_migrationsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.schema_migrationsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.schema_migrationsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          aggregate: {
            args: Prisma.Schema_migrationsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSchema_migrations>
          }
          groupBy: {
            args: Prisma.schema_migrationsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Schema_migrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.schema_migrationsCountArgs<ExtArgs>,
            result: $Utils.Optional<Schema_migrationsCountAggregateOutputType> | number
          }
        }
      }
      sessions: {
        payload: Prisma.$sessionsPayload<ExtArgs>
        fields: Prisma.sessionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sessionsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sessionsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          findFirst: {
            args: Prisma.sessionsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sessionsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          findMany: {
            args: Prisma.sessionsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          create: {
            args: Prisma.sessionsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          createMany: {
            args: Prisma.sessionsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.sessionsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          update: {
            args: Prisma.sessionsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          deleteMany: {
            args: Prisma.sessionsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.sessionsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.sessionsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          aggregate: {
            args: Prisma.SessionsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSessions>
          }
          groupBy: {
            args: Prisma.sessionsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SessionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sessionsCountArgs<ExtArgs>,
            result: $Utils.Optional<SessionsCountAggregateOutputType> | number
          }
        }
      }
      sso_domains: {
        payload: Prisma.$sso_domainsPayload<ExtArgs>
        fields: Prisma.sso_domainsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sso_domainsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sso_domainsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          findFirst: {
            args: Prisma.sso_domainsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sso_domainsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          findMany: {
            args: Prisma.sso_domainsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>[]
          }
          create: {
            args: Prisma.sso_domainsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          createMany: {
            args: Prisma.sso_domainsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.sso_domainsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          update: {
            args: Prisma.sso_domainsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          deleteMany: {
            args: Prisma.sso_domainsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.sso_domainsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.sso_domainsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          aggregate: {
            args: Prisma.Sso_domainsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSso_domains>
          }
          groupBy: {
            args: Prisma.sso_domainsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Sso_domainsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sso_domainsCountArgs<ExtArgs>,
            result: $Utils.Optional<Sso_domainsCountAggregateOutputType> | number
          }
        }
      }
      sso_providers: {
        payload: Prisma.$sso_providersPayload<ExtArgs>
        fields: Prisma.sso_providersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sso_providersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sso_providersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          findFirst: {
            args: Prisma.sso_providersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sso_providersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          findMany: {
            args: Prisma.sso_providersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>[]
          }
          create: {
            args: Prisma.sso_providersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          createMany: {
            args: Prisma.sso_providersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.sso_providersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          update: {
            args: Prisma.sso_providersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          deleteMany: {
            args: Prisma.sso_providersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.sso_providersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.sso_providersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          aggregate: {
            args: Prisma.Sso_providersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSso_providers>
          }
          groupBy: {
            args: Prisma.sso_providersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Sso_providersGroupByOutputType>[]
          }
          count: {
            args: Prisma.sso_providersCountArgs<ExtArgs>,
            result: $Utils.Optional<Sso_providersCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>,
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      account_ai_chat: {
        payload: Prisma.$account_ai_chatPayload<ExtArgs>
        fields: Prisma.account_ai_chatFieldRefs
        operations: {
          findUnique: {
            args: Prisma.account_ai_chatFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_ai_chatPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.account_ai_chatFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_ai_chatPayload>
          }
          findFirst: {
            args: Prisma.account_ai_chatFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_ai_chatPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.account_ai_chatFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_ai_chatPayload>
          }
          findMany: {
            args: Prisma.account_ai_chatFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_ai_chatPayload>[]
          }
          create: {
            args: Prisma.account_ai_chatCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_ai_chatPayload>
          }
          createMany: {
            args: Prisma.account_ai_chatCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.account_ai_chatDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_ai_chatPayload>
          }
          update: {
            args: Prisma.account_ai_chatUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_ai_chatPayload>
          }
          deleteMany: {
            args: Prisma.account_ai_chatDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.account_ai_chatUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.account_ai_chatUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_ai_chatPayload>
          }
          aggregate: {
            args: Prisma.Account_ai_chatAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAccount_ai_chat>
          }
          groupBy: {
            args: Prisma.account_ai_chatGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Account_ai_chatGroupByOutputType>[]
          }
          count: {
            args: Prisma.account_ai_chatCountArgs<ExtArgs>,
            result: $Utils.Optional<Account_ai_chatCountAggregateOutputType> | number
          }
        }
      }
      account_blog_post_instances: {
        payload: Prisma.$account_blog_post_instancesPayload<ExtArgs>
        fields: Prisma.account_blog_post_instancesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.account_blog_post_instancesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_post_instancesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.account_blog_post_instancesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_post_instancesPayload>
          }
          findFirst: {
            args: Prisma.account_blog_post_instancesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_post_instancesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.account_blog_post_instancesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_post_instancesPayload>
          }
          findMany: {
            args: Prisma.account_blog_post_instancesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_post_instancesPayload>[]
          }
          create: {
            args: Prisma.account_blog_post_instancesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_post_instancesPayload>
          }
          createMany: {
            args: Prisma.account_blog_post_instancesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.account_blog_post_instancesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_post_instancesPayload>
          }
          update: {
            args: Prisma.account_blog_post_instancesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_post_instancesPayload>
          }
          deleteMany: {
            args: Prisma.account_blog_post_instancesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.account_blog_post_instancesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.account_blog_post_instancesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_post_instancesPayload>
          }
          aggregate: {
            args: Prisma.Account_blog_post_instancesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAccount_blog_post_instances>
          }
          groupBy: {
            args: Prisma.account_blog_post_instancesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Account_blog_post_instancesGroupByOutputType>[]
          }
          count: {
            args: Prisma.account_blog_post_instancesCountArgs<ExtArgs>,
            result: $Utils.Optional<Account_blog_post_instancesCountAggregateOutputType> | number
          }
        }
      }
      account_blog_posts: {
        payload: Prisma.$account_blog_postsPayload<ExtArgs>
        fields: Prisma.account_blog_postsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.account_blog_postsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_postsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.account_blog_postsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_postsPayload>
          }
          findFirst: {
            args: Prisma.account_blog_postsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_postsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.account_blog_postsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_postsPayload>
          }
          findMany: {
            args: Prisma.account_blog_postsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_postsPayload>[]
          }
          create: {
            args: Prisma.account_blog_postsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_postsPayload>
          }
          createMany: {
            args: Prisma.account_blog_postsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.account_blog_postsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_postsPayload>
          }
          update: {
            args: Prisma.account_blog_postsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_postsPayload>
          }
          deleteMany: {
            args: Prisma.account_blog_postsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.account_blog_postsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.account_blog_postsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_blog_postsPayload>
          }
          aggregate: {
            args: Prisma.Account_blog_postsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAccount_blog_posts>
          }
          groupBy: {
            args: Prisma.account_blog_postsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Account_blog_postsGroupByOutputType>[]
          }
          count: {
            args: Prisma.account_blog_postsCountArgs<ExtArgs>,
            result: $Utils.Optional<Account_blog_postsCountAggregateOutputType> | number
          }
        }
      }
      account_plans: {
        payload: Prisma.$account_plansPayload<ExtArgs>
        fields: Prisma.account_plansFieldRefs
        operations: {
          findUnique: {
            args: Prisma.account_plansFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_plansPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.account_plansFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_plansPayload>
          }
          findFirst: {
            args: Prisma.account_plansFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_plansPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.account_plansFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_plansPayload>
          }
          findMany: {
            args: Prisma.account_plansFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_plansPayload>[]
          }
          create: {
            args: Prisma.account_plansCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_plansPayload>
          }
          createMany: {
            args: Prisma.account_plansCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.account_plansDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_plansPayload>
          }
          update: {
            args: Prisma.account_plansUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_plansPayload>
          }
          deleteMany: {
            args: Prisma.account_plansDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.account_plansUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.account_plansUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_plansPayload>
          }
          aggregate: {
            args: Prisma.Account_plansAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAccount_plans>
          }
          groupBy: {
            args: Prisma.account_plansGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Account_plansGroupByOutputType>[]
          }
          count: {
            args: Prisma.account_plansCountArgs<ExtArgs>,
            result: $Utils.Optional<Account_plansCountAggregateOutputType> | number
          }
        }
      }
      account_review_generator: {
        payload: Prisma.$account_review_generatorPayload<ExtArgs>
        fields: Prisma.account_review_generatorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.account_review_generatorFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_review_generatorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.account_review_generatorFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_review_generatorPayload>
          }
          findFirst: {
            args: Prisma.account_review_generatorFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_review_generatorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.account_review_generatorFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_review_generatorPayload>
          }
          findMany: {
            args: Prisma.account_review_generatorFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_review_generatorPayload>[]
          }
          create: {
            args: Prisma.account_review_generatorCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_review_generatorPayload>
          }
          createMany: {
            args: Prisma.account_review_generatorCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.account_review_generatorDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_review_generatorPayload>
          }
          update: {
            args: Prisma.account_review_generatorUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_review_generatorPayload>
          }
          deleteMany: {
            args: Prisma.account_review_generatorDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.account_review_generatorUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.account_review_generatorUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_review_generatorPayload>
          }
          aggregate: {
            args: Prisma.Account_review_generatorAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAccount_review_generator>
          }
          groupBy: {
            args: Prisma.account_review_generatorGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Account_review_generatorGroupByOutputType>[]
          }
          count: {
            args: Prisma.account_review_generatorCountArgs<ExtArgs>,
            result: $Utils.Optional<Account_review_generatorCountAggregateOutputType> | number
          }
        }
      }
      account_social_media: {
        payload: Prisma.$account_social_mediaPayload<ExtArgs>
        fields: Prisma.account_social_mediaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.account_social_mediaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_social_mediaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.account_social_mediaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_social_mediaPayload>
          }
          findFirst: {
            args: Prisma.account_social_mediaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_social_mediaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.account_social_mediaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_social_mediaPayload>
          }
          findMany: {
            args: Prisma.account_social_mediaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_social_mediaPayload>[]
          }
          create: {
            args: Prisma.account_social_mediaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_social_mediaPayload>
          }
          createMany: {
            args: Prisma.account_social_mediaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.account_social_mediaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_social_mediaPayload>
          }
          update: {
            args: Prisma.account_social_mediaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_social_mediaPayload>
          }
          deleteMany: {
            args: Prisma.account_social_mediaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.account_social_mediaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.account_social_mediaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$account_social_mediaPayload>
          }
          aggregate: {
            args: Prisma.Account_social_mediaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAccount_social_media>
          }
          groupBy: {
            args: Prisma.account_social_mediaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Account_social_mediaGroupByOutputType>[]
          }
          count: {
            args: Prisma.account_social_mediaCountArgs<ExtArgs>,
            result: $Utils.Optional<Account_social_mediaCountAggregateOutputType> | number
          }
        }
      }
      accounts: {
        payload: Prisma.$accountsPayload<ExtArgs>
        fields: Prisma.accountsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.accountsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$accountsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.accountsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$accountsPayload>
          }
          findFirst: {
            args: Prisma.accountsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$accountsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.accountsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$accountsPayload>
          }
          findMany: {
            args: Prisma.accountsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$accountsPayload>[]
          }
          create: {
            args: Prisma.accountsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$accountsPayload>
          }
          createMany: {
            args: Prisma.accountsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.accountsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$accountsPayload>
          }
          update: {
            args: Prisma.accountsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$accountsPayload>
          }
          deleteMany: {
            args: Prisma.accountsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.accountsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.accountsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$accountsPayload>
          }
          aggregate: {
            args: Prisma.AccountsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAccounts>
          }
          groupBy: {
            args: Prisma.accountsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AccountsGroupByOutputType>[]
          }
          count: {
            args: Prisma.accountsCountArgs<ExtArgs>,
            result: $Utils.Optional<AccountsCountAggregateOutputType> | number
          }
        }
      }
      communications: {
        payload: Prisma.$communicationsPayload<ExtArgs>
        fields: Prisma.communicationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.communicationsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communicationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.communicationsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communicationsPayload>
          }
          findFirst: {
            args: Prisma.communicationsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communicationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.communicationsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communicationsPayload>
          }
          findMany: {
            args: Prisma.communicationsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communicationsPayload>[]
          }
          create: {
            args: Prisma.communicationsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communicationsPayload>
          }
          createMany: {
            args: Prisma.communicationsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.communicationsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communicationsPayload>
          }
          update: {
            args: Prisma.communicationsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communicationsPayload>
          }
          deleteMany: {
            args: Prisma.communicationsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.communicationsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.communicationsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communicationsPayload>
          }
          aggregate: {
            args: Prisma.CommunicationsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCommunications>
          }
          groupBy: {
            args: Prisma.communicationsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CommunicationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.communicationsCountArgs<ExtArgs>,
            result: $Utils.Optional<CommunicationsCountAggregateOutputType> | number
          }
        }
      }
      communications_emails: {
        payload: Prisma.$communications_emailsPayload<ExtArgs>
        fields: Prisma.communications_emailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.communications_emailsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.communications_emailsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emailsPayload>
          }
          findFirst: {
            args: Prisma.communications_emailsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.communications_emailsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emailsPayload>
          }
          findMany: {
            args: Prisma.communications_emailsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emailsPayload>[]
          }
          create: {
            args: Prisma.communications_emailsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emailsPayload>
          }
          createMany: {
            args: Prisma.communications_emailsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.communications_emailsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emailsPayload>
          }
          update: {
            args: Prisma.communications_emailsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emailsPayload>
          }
          deleteMany: {
            args: Prisma.communications_emailsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.communications_emailsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.communications_emailsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emailsPayload>
          }
          aggregate: {
            args: Prisma.Communications_emailsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCommunications_emails>
          }
          groupBy: {
            args: Prisma.communications_emailsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Communications_emailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.communications_emailsCountArgs<ExtArgs>,
            result: $Utils.Optional<Communications_emailsCountAggregateOutputType> | number
          }
        }
      }
      communications_emails_status_updates: {
        payload: Prisma.$communications_emails_status_updatesPayload<ExtArgs>
        fields: Prisma.communications_emails_status_updatesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.communications_emails_status_updatesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emails_status_updatesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.communications_emails_status_updatesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emails_status_updatesPayload>
          }
          findFirst: {
            args: Prisma.communications_emails_status_updatesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emails_status_updatesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.communications_emails_status_updatesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emails_status_updatesPayload>
          }
          findMany: {
            args: Prisma.communications_emails_status_updatesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emails_status_updatesPayload>[]
          }
          create: {
            args: Prisma.communications_emails_status_updatesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emails_status_updatesPayload>
          }
          createMany: {
            args: Prisma.communications_emails_status_updatesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.communications_emails_status_updatesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emails_status_updatesPayload>
          }
          update: {
            args: Prisma.communications_emails_status_updatesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emails_status_updatesPayload>
          }
          deleteMany: {
            args: Prisma.communications_emails_status_updatesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.communications_emails_status_updatesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.communications_emails_status_updatesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_emails_status_updatesPayload>
          }
          aggregate: {
            args: Prisma.Communications_emails_status_updatesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCommunications_emails_status_updates>
          }
          groupBy: {
            args: Prisma.communications_emails_status_updatesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Communications_emails_status_updatesGroupByOutputType>[]
          }
          count: {
            args: Prisma.communications_emails_status_updatesCountArgs<ExtArgs>,
            result: $Utils.Optional<Communications_emails_status_updatesCountAggregateOutputType> | number
          }
        }
      }
      communications_texts: {
        payload: Prisma.$communications_textsPayload<ExtArgs>
        fields: Prisma.communications_textsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.communications_textsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_textsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.communications_textsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_textsPayload>
          }
          findFirst: {
            args: Prisma.communications_textsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_textsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.communications_textsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_textsPayload>
          }
          findMany: {
            args: Prisma.communications_textsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_textsPayload>[]
          }
          create: {
            args: Prisma.communications_textsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_textsPayload>
          }
          createMany: {
            args: Prisma.communications_textsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.communications_textsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_textsPayload>
          }
          update: {
            args: Prisma.communications_textsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_textsPayload>
          }
          deleteMany: {
            args: Prisma.communications_textsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.communications_textsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.communications_textsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$communications_textsPayload>
          }
          aggregate: {
            args: Prisma.Communications_textsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCommunications_texts>
          }
          groupBy: {
            args: Prisma.communications_textsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Communications_textsGroupByOutputType>[]
          }
          count: {
            args: Prisma.communications_textsCountArgs<ExtArgs>,
            result: $Utils.Optional<Communications_textsCountAggregateOutputType> | number
          }
        }
      }
      contact_info_emails: {
        payload: Prisma.$contact_info_emailsPayload<ExtArgs>
        fields: Prisma.contact_info_emailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.contact_info_emailsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_emailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.contact_info_emailsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_emailsPayload>
          }
          findFirst: {
            args: Prisma.contact_info_emailsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_emailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.contact_info_emailsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_emailsPayload>
          }
          findMany: {
            args: Prisma.contact_info_emailsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_emailsPayload>[]
          }
          create: {
            args: Prisma.contact_info_emailsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_emailsPayload>
          }
          createMany: {
            args: Prisma.contact_info_emailsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.contact_info_emailsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_emailsPayload>
          }
          update: {
            args: Prisma.contact_info_emailsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_emailsPayload>
          }
          deleteMany: {
            args: Prisma.contact_info_emailsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.contact_info_emailsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.contact_info_emailsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_emailsPayload>
          }
          aggregate: {
            args: Prisma.Contact_info_emailsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateContact_info_emails>
          }
          groupBy: {
            args: Prisma.contact_info_emailsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Contact_info_emailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.contact_info_emailsCountArgs<ExtArgs>,
            result: $Utils.Optional<Contact_info_emailsCountAggregateOutputType> | number
          }
        }
      }
      contact_info_phones: {
        payload: Prisma.$contact_info_phonesPayload<ExtArgs>
        fields: Prisma.contact_info_phonesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.contact_info_phonesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_phonesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.contact_info_phonesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_phonesPayload>
          }
          findFirst: {
            args: Prisma.contact_info_phonesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_phonesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.contact_info_phonesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_phonesPayload>
          }
          findMany: {
            args: Prisma.contact_info_phonesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_phonesPayload>[]
          }
          create: {
            args: Prisma.contact_info_phonesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_phonesPayload>
          }
          createMany: {
            args: Prisma.contact_info_phonesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.contact_info_phonesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_phonesPayload>
          }
          update: {
            args: Prisma.contact_info_phonesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_phonesPayload>
          }
          deleteMany: {
            args: Prisma.contact_info_phonesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.contact_info_phonesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.contact_info_phonesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contact_info_phonesPayload>
          }
          aggregate: {
            args: Prisma.Contact_info_phonesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateContact_info_phones>
          }
          groupBy: {
            args: Prisma.contact_info_phonesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Contact_info_phonesGroupByOutputType>[]
          }
          count: {
            args: Prisma.contact_info_phonesCountArgs<ExtArgs>,
            result: $Utils.Optional<Contact_info_phonesCountAggregateOutputType> | number
          }
        }
      }
      contacts: {
        payload: Prisma.$contactsPayload<ExtArgs>
        fields: Prisma.contactsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.contactsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.contactsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactsPayload>
          }
          findFirst: {
            args: Prisma.contactsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.contactsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactsPayload>
          }
          findMany: {
            args: Prisma.contactsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactsPayload>[]
          }
          create: {
            args: Prisma.contactsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactsPayload>
          }
          createMany: {
            args: Prisma.contactsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.contactsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactsPayload>
          }
          update: {
            args: Prisma.contactsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactsPayload>
          }
          deleteMany: {
            args: Prisma.contactsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.contactsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.contactsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$contactsPayload>
          }
          aggregate: {
            args: Prisma.ContactsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateContacts>
          }
          groupBy: {
            args: Prisma.contactsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ContactsGroupByOutputType>[]
          }
          count: {
            args: Prisma.contactsCountArgs<ExtArgs>,
            result: $Utils.Optional<ContactsCountAggregateOutputType> | number
          }
        }
      }
      customer_records: {
        payload: Prisma.$customer_recordsPayload<ExtArgs>
        fields: Prisma.customer_recordsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.customer_recordsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$customer_recordsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.customer_recordsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$customer_recordsPayload>
          }
          findFirst: {
            args: Prisma.customer_recordsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$customer_recordsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.customer_recordsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$customer_recordsPayload>
          }
          findMany: {
            args: Prisma.customer_recordsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$customer_recordsPayload>[]
          }
          create: {
            args: Prisma.customer_recordsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$customer_recordsPayload>
          }
          createMany: {
            args: Prisma.customer_recordsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.customer_recordsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$customer_recordsPayload>
          }
          update: {
            args: Prisma.customer_recordsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$customer_recordsPayload>
          }
          deleteMany: {
            args: Prisma.customer_recordsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.customer_recordsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.customer_recordsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$customer_recordsPayload>
          }
          aggregate: {
            args: Prisma.Customer_recordsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCustomer_records>
          }
          groupBy: {
            args: Prisma.customer_recordsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Customer_recordsGroupByOutputType>[]
          }
          count: {
            args: Prisma.customer_recordsCountArgs<ExtArgs>,
            result: $Utils.Optional<Customer_recordsCountAggregateOutputType> | number
          }
        }
      }
      email_templates: {
        payload: Prisma.$email_templatesPayload<ExtArgs>
        fields: Prisma.email_templatesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.email_templatesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$email_templatesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.email_templatesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$email_templatesPayload>
          }
          findFirst: {
            args: Prisma.email_templatesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$email_templatesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.email_templatesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$email_templatesPayload>
          }
          findMany: {
            args: Prisma.email_templatesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$email_templatesPayload>[]
          }
          create: {
            args: Prisma.email_templatesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$email_templatesPayload>
          }
          createMany: {
            args: Prisma.email_templatesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.email_templatesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$email_templatesPayload>
          }
          update: {
            args: Prisma.email_templatesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$email_templatesPayload>
          }
          deleteMany: {
            args: Prisma.email_templatesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.email_templatesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.email_templatesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$email_templatesPayload>
          }
          aggregate: {
            args: Prisma.Email_templatesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEmail_templates>
          }
          groupBy: {
            args: Prisma.email_templatesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Email_templatesGroupByOutputType>[]
          }
          count: {
            args: Prisma.email_templatesCountArgs<ExtArgs>,
            result: $Utils.Optional<Email_templatesCountAggregateOutputType> | number
          }
        }
      }
      leads: {
        payload: Prisma.$leadsPayload<ExtArgs>
        fields: Prisma.leadsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.leadsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$leadsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.leadsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          findFirst: {
            args: Prisma.leadsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$leadsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.leadsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          findMany: {
            args: Prisma.leadsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>[]
          }
          create: {
            args: Prisma.leadsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          createMany: {
            args: Prisma.leadsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.leadsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          update: {
            args: Prisma.leadsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          deleteMany: {
            args: Prisma.leadsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.leadsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.leadsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          aggregate: {
            args: Prisma.LeadsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateLeads>
          }
          groupBy: {
            args: Prisma.leadsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<LeadsGroupByOutputType>[]
          }
          count: {
            args: Prisma.leadsCountArgs<ExtArgs>,
            result: $Utils.Optional<LeadsCountAggregateOutputType> | number
          }
        }
      }
      marketing_campaigns: {
        payload: Prisma.$marketing_campaignsPayload<ExtArgs>
        fields: Prisma.marketing_campaignsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.marketing_campaignsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$marketing_campaignsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.marketing_campaignsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$marketing_campaignsPayload>
          }
          findFirst: {
            args: Prisma.marketing_campaignsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$marketing_campaignsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.marketing_campaignsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$marketing_campaignsPayload>
          }
          findMany: {
            args: Prisma.marketing_campaignsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$marketing_campaignsPayload>[]
          }
          create: {
            args: Prisma.marketing_campaignsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$marketing_campaignsPayload>
          }
          createMany: {
            args: Prisma.marketing_campaignsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.marketing_campaignsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$marketing_campaignsPayload>
          }
          update: {
            args: Prisma.marketing_campaignsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$marketing_campaignsPayload>
          }
          deleteMany: {
            args: Prisma.marketing_campaignsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.marketing_campaignsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.marketing_campaignsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$marketing_campaignsPayload>
          }
          aggregate: {
            args: Prisma.Marketing_campaignsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMarketing_campaigns>
          }
          groupBy: {
            args: Prisma.marketing_campaignsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Marketing_campaignsGroupByOutputType>[]
          }
          count: {
            args: Prisma.marketing_campaignsCountArgs<ExtArgs>,
            result: $Utils.Optional<Marketing_campaignsCountAggregateOutputType> | number
          }
        }
      }
      notes: {
        payload: Prisma.$notesPayload<ExtArgs>
        fields: Prisma.notesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notesPayload>
          }
          findFirst: {
            args: Prisma.notesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notesPayload>
          }
          findMany: {
            args: Prisma.notesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notesPayload>[]
          }
          create: {
            args: Prisma.notesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notesPayload>
          }
          createMany: {
            args: Prisma.notesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.notesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notesPayload>
          }
          update: {
            args: Prisma.notesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notesPayload>
          }
          deleteMany: {
            args: Prisma.notesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.notesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.notesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$notesPayload>
          }
          aggregate: {
            args: Prisma.NotesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateNotes>
          }
          groupBy: {
            args: Prisma.notesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<NotesGroupByOutputType>[]
          }
          count: {
            args: Prisma.notesCountArgs<ExtArgs>,
            result: $Utils.Optional<NotesCountAggregateOutputType> | number
          }
        }
      }
      opportunities: {
        payload: Prisma.$opportunitiesPayload<ExtArgs>
        fields: Prisma.opportunitiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.opportunitiesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opportunitiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.opportunitiesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opportunitiesPayload>
          }
          findFirst: {
            args: Prisma.opportunitiesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opportunitiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.opportunitiesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opportunitiesPayload>
          }
          findMany: {
            args: Prisma.opportunitiesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opportunitiesPayload>[]
          }
          create: {
            args: Prisma.opportunitiesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opportunitiesPayload>
          }
          createMany: {
            args: Prisma.opportunitiesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.opportunitiesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opportunitiesPayload>
          }
          update: {
            args: Prisma.opportunitiesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opportunitiesPayload>
          }
          deleteMany: {
            args: Prisma.opportunitiesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.opportunitiesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.opportunitiesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opportunitiesPayload>
          }
          aggregate: {
            args: Prisma.OpportunitiesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateOpportunities>
          }
          groupBy: {
            args: Prisma.opportunitiesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<OpportunitiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.opportunitiesCountArgs<ExtArgs>,
            result: $Utils.Optional<OpportunitiesCountAggregateOutputType> | number
          }
        }
      }
      plans: {
        payload: Prisma.$plansPayload<ExtArgs>
        fields: Prisma.plansFieldRefs
        operations: {
          findUnique: {
            args: Prisma.plansFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$plansPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.plansFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$plansPayload>
          }
          findFirst: {
            args: Prisma.plansFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$plansPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.plansFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$plansPayload>
          }
          findMany: {
            args: Prisma.plansFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$plansPayload>[]
          }
          create: {
            args: Prisma.plansCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$plansPayload>
          }
          createMany: {
            args: Prisma.plansCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.plansDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$plansPayload>
          }
          update: {
            args: Prisma.plansUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$plansPayload>
          }
          deleteMany: {
            args: Prisma.plansDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.plansUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.plansUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$plansPayload>
          }
          aggregate: {
            args: Prisma.PlansAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePlans>
          }
          groupBy: {
            args: Prisma.plansGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PlansGroupByOutputType>[]
          }
          count: {
            args: Prisma.plansCountArgs<ExtArgs>,
            result: $Utils.Optional<PlansCountAggregateOutputType> | number
          }
        }
      }
      reps: {
        payload: Prisma.$repsPayload<ExtArgs>
        fields: Prisma.repsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.repsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$repsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.repsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$repsPayload>
          }
          findFirst: {
            args: Prisma.repsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$repsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.repsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$repsPayload>
          }
          findMany: {
            args: Prisma.repsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$repsPayload>[]
          }
          create: {
            args: Prisma.repsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$repsPayload>
          }
          createMany: {
            args: Prisma.repsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.repsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$repsPayload>
          }
          update: {
            args: Prisma.repsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$repsPayload>
          }
          deleteMany: {
            args: Prisma.repsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.repsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.repsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$repsPayload>
          }
          aggregate: {
            args: Prisma.RepsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateReps>
          }
          groupBy: {
            args: Prisma.repsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<RepsGroupByOutputType>[]
          }
          count: {
            args: Prisma.repsCountArgs<ExtArgs>,
            result: $Utils.Optional<RepsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Flow_stateCountOutputType
   */

  export type Flow_stateCountOutputType = {
    saml_relay_states: number
  }

  export type Flow_stateCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_relay_states?: boolean | Flow_stateCountOutputTypeCountSaml_relay_statesArgs
  }

  // Custom InputTypes

  /**
   * Flow_stateCountOutputType without action
   */
  export type Flow_stateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flow_stateCountOutputType
     */
    select?: Flow_stateCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Flow_stateCountOutputType without action
   */
  export type Flow_stateCountOutputTypeCountSaml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_relay_statesWhereInput
  }



  /**
   * Count Type Mfa_factorsCountOutputType
   */

  export type Mfa_factorsCountOutputType = {
    mfa_challenges: number
  }

  export type Mfa_factorsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_challenges?: boolean | Mfa_factorsCountOutputTypeCountMfa_challengesArgs
  }

  // Custom InputTypes

  /**
   * Mfa_factorsCountOutputType without action
   */
  export type Mfa_factorsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mfa_factorsCountOutputType
     */
    select?: Mfa_factorsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Mfa_factorsCountOutputType without action
   */
  export type Mfa_factorsCountOutputTypeCountMfa_challengesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_challengesWhereInput
  }



  /**
   * Count Type SessionsCountOutputType
   */

  export type SessionsCountOutputType = {
    mfa_amr_claims: number
    refresh_tokens: number
  }

  export type SessionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_amr_claims?: boolean | SessionsCountOutputTypeCountMfa_amr_claimsArgs
    refresh_tokens?: boolean | SessionsCountOutputTypeCountRefresh_tokensArgs
  }

  // Custom InputTypes

  /**
   * SessionsCountOutputType without action
   */
  export type SessionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessionsCountOutputType
     */
    select?: SessionsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * SessionsCountOutputType without action
   */
  export type SessionsCountOutputTypeCountMfa_amr_claimsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_amr_claimsWhereInput
  }


  /**
   * SessionsCountOutputType without action
   */
  export type SessionsCountOutputTypeCountRefresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refresh_tokensWhereInput
  }



  /**
   * Count Type Sso_providersCountOutputType
   */

  export type Sso_providersCountOutputType = {
    saml_providers: number
    saml_relay_states: number
    sso_domains: number
  }

  export type Sso_providersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_providers?: boolean | Sso_providersCountOutputTypeCountSaml_providersArgs
    saml_relay_states?: boolean | Sso_providersCountOutputTypeCountSaml_relay_statesArgs
    sso_domains?: boolean | Sso_providersCountOutputTypeCountSso_domainsArgs
  }

  // Custom InputTypes

  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sso_providersCountOutputType
     */
    select?: Sso_providersCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeCountSaml_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_providersWhereInput
  }


  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeCountSaml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_relay_statesWhereInput
  }


  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeCountSso_domainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sso_domainsWhereInput
  }



  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    identities: number
    mfa_factors: number
    sessions: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    identities?: boolean | UsersCountOutputTypeCountIdentitiesArgs
    mfa_factors?: boolean | UsersCountOutputTypeCountMfa_factorsArgs
    sessions?: boolean | UsersCountOutputTypeCountSessionsArgs
  }

  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountIdentitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: identitiesWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountMfa_factorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_factorsWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sessionsWhereInput
  }



  /**
   * Count Type AccountsCountOutputType
   */

  export type AccountsCountOutputType = {
    account_ai_chat: number
    account_blog_post_instances: number
    account_blog_posts: number
    account_plans: number
    account_review_generator: number
    account_social_media: number
  }

  export type AccountsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    account_ai_chat?: boolean | AccountsCountOutputTypeCountAccount_ai_chatArgs
    account_blog_post_instances?: boolean | AccountsCountOutputTypeCountAccount_blog_post_instancesArgs
    account_blog_posts?: boolean | AccountsCountOutputTypeCountAccount_blog_postsArgs
    account_plans?: boolean | AccountsCountOutputTypeCountAccount_plansArgs
    account_review_generator?: boolean | AccountsCountOutputTypeCountAccount_review_generatorArgs
    account_social_media?: boolean | AccountsCountOutputTypeCountAccount_social_mediaArgs
  }

  // Custom InputTypes

  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountsCountOutputType
     */
    select?: AccountsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountAccount_ai_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_ai_chatWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountAccount_blog_post_instancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_blog_post_instancesWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountAccount_blog_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_blog_postsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountAccount_plansArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_plansWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountAccount_review_generatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_review_generatorWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountAccount_social_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_social_mediaWhereInput
  }



  /**
   * Count Type Communications_emailsCountOutputType
   */

  export type Communications_emailsCountOutputType = {
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails: number
  }

  export type Communications_emailsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: boolean | Communications_emailsCountOutputTypeCountCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsArgs
  }

  // Custom InputTypes

  /**
   * Communications_emailsCountOutputType without action
   */
  export type Communications_emailsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communications_emailsCountOutputType
     */
    select?: Communications_emailsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Communications_emailsCountOutputType without action
   */
  export type Communications_emailsCountOutputTypeCountCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communications_emails_status_updatesWhereInput
  }



  /**
   * Count Type ContactsCountOutputType
   */

  export type ContactsCountOutputType = {
    contact_info_emails: number
    contact_info_phones: number
  }

  export type ContactsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact_info_emails?: boolean | ContactsCountOutputTypeCountContact_info_emailsArgs
    contact_info_phones?: boolean | ContactsCountOutputTypeCountContact_info_phonesArgs
  }

  // Custom InputTypes

  /**
   * ContactsCountOutputType without action
   */
  export type ContactsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContactsCountOutputType
     */
    select?: ContactsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * ContactsCountOutputType without action
   */
  export type ContactsCountOutputTypeCountContact_info_emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contact_info_emailsWhereInput
  }


  /**
   * ContactsCountOutputType without action
   */
  export type ContactsCountOutputTypeCountContact_info_phonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contact_info_phonesWhereInput
  }



  /**
   * Count Type Customer_recordsCountOutputType
   */

  export type Customer_recordsCountOutputType = {
    communications: number
    contacts: number
    notes: number
  }

  export type Customer_recordsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    communications?: boolean | Customer_recordsCountOutputTypeCountCommunicationsArgs
    contacts?: boolean | Customer_recordsCountOutputTypeCountContactsArgs
    notes?: boolean | Customer_recordsCountOutputTypeCountNotesArgs
  }

  // Custom InputTypes

  /**
   * Customer_recordsCountOutputType without action
   */
  export type Customer_recordsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer_recordsCountOutputType
     */
    select?: Customer_recordsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Customer_recordsCountOutputType without action
   */
  export type Customer_recordsCountOutputTypeCountCommunicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communicationsWhereInput
  }


  /**
   * Customer_recordsCountOutputType without action
   */
  export type Customer_recordsCountOutputTypeCountContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contactsWhereInput
  }


  /**
   * Customer_recordsCountOutputType without action
   */
  export type Customer_recordsCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notesWhereInput
  }



  /**
   * Count Type Marketing_campaignsCountOutputType
   */

  export type Marketing_campaignsCountOutputType = {
    communications: number
  }

  export type Marketing_campaignsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    communications?: boolean | Marketing_campaignsCountOutputTypeCountCommunicationsArgs
  }

  // Custom InputTypes

  /**
   * Marketing_campaignsCountOutputType without action
   */
  export type Marketing_campaignsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_campaignsCountOutputType
     */
    select?: Marketing_campaignsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Marketing_campaignsCountOutputType without action
   */
  export type Marketing_campaignsCountOutputTypeCountCommunicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communicationsWhereInput
  }



  /**
   * Count Type PlansCountOutputType
   */

  export type PlansCountOutputType = {
    account_ai_chat: number
    account_blog_post_instances: number
    account_blog_posts: number
    account_plans: number
    account_review_generator: number
    account_social_media: number
  }

  export type PlansCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    account_ai_chat?: boolean | PlansCountOutputTypeCountAccount_ai_chatArgs
    account_blog_post_instances?: boolean | PlansCountOutputTypeCountAccount_blog_post_instancesArgs
    account_blog_posts?: boolean | PlansCountOutputTypeCountAccount_blog_postsArgs
    account_plans?: boolean | PlansCountOutputTypeCountAccount_plansArgs
    account_review_generator?: boolean | PlansCountOutputTypeCountAccount_review_generatorArgs
    account_social_media?: boolean | PlansCountOutputTypeCountAccount_social_mediaArgs
  }

  // Custom InputTypes

  /**
   * PlansCountOutputType without action
   */
  export type PlansCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlansCountOutputType
     */
    select?: PlansCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * PlansCountOutputType without action
   */
  export type PlansCountOutputTypeCountAccount_ai_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_ai_chatWhereInput
  }


  /**
   * PlansCountOutputType without action
   */
  export type PlansCountOutputTypeCountAccount_blog_post_instancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_blog_post_instancesWhereInput
  }


  /**
   * PlansCountOutputType without action
   */
  export type PlansCountOutputTypeCountAccount_blog_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_blog_postsWhereInput
  }


  /**
   * PlansCountOutputType without action
   */
  export type PlansCountOutputTypeCountAccount_plansArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_plansWhereInput
  }


  /**
   * PlansCountOutputType without action
   */
  export type PlansCountOutputTypeCountAccount_review_generatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_review_generatorWhereInput
  }


  /**
   * PlansCountOutputType without action
   */
  export type PlansCountOutputTypeCountAccount_social_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_social_mediaWhereInput
  }



  /**
   * Count Type RepsCountOutputType
   */

  export type RepsCountOutputType = {
    notes: number
  }

  export type RepsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notes?: boolean | RepsCountOutputTypeCountNotesArgs
  }

  // Custom InputTypes

  /**
   * RepsCountOutputType without action
   */
  export type RepsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepsCountOutputType
     */
    select?: RepsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * RepsCountOutputType without action
   */
  export type RepsCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notesWhereInput
  }



  /**
   * Models
   */

  /**
   * Model audit_log_entries
   */

  export type AggregateAudit_log_entries = {
    _count: Audit_log_entriesCountAggregateOutputType | null
    _min: Audit_log_entriesMinAggregateOutputType | null
    _max: Audit_log_entriesMaxAggregateOutputType | null
  }

  export type Audit_log_entriesMinAggregateOutputType = {
    instance_id: string | null
    id: string | null
    created_at: Date | null
    ip_address: string | null
  }

  export type Audit_log_entriesMaxAggregateOutputType = {
    instance_id: string | null
    id: string | null
    created_at: Date | null
    ip_address: string | null
  }

  export type Audit_log_entriesCountAggregateOutputType = {
    instance_id: number
    id: number
    payload: number
    created_at: number
    ip_address: number
    _all: number
  }


  export type Audit_log_entriesMinAggregateInputType = {
    instance_id?: true
    id?: true
    created_at?: true
    ip_address?: true
  }

  export type Audit_log_entriesMaxAggregateInputType = {
    instance_id?: true
    id?: true
    created_at?: true
    ip_address?: true
  }

  export type Audit_log_entriesCountAggregateInputType = {
    instance_id?: true
    id?: true
    payload?: true
    created_at?: true
    ip_address?: true
    _all?: true
  }

  export type Audit_log_entriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which audit_log_entries to aggregate.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned audit_log_entries
    **/
    _count?: true | Audit_log_entriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Audit_log_entriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Audit_log_entriesMaxAggregateInputType
  }

  export type GetAudit_log_entriesAggregateType<T extends Audit_log_entriesAggregateArgs> = {
        [P in keyof T & keyof AggregateAudit_log_entries]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAudit_log_entries[P]>
      : GetScalarType<T[P], AggregateAudit_log_entries[P]>
  }




  export type audit_log_entriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: audit_log_entriesWhereInput
    orderBy?: audit_log_entriesOrderByWithAggregationInput | audit_log_entriesOrderByWithAggregationInput[]
    by: Audit_log_entriesScalarFieldEnum[] | Audit_log_entriesScalarFieldEnum
    having?: audit_log_entriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Audit_log_entriesCountAggregateInputType | true
    _min?: Audit_log_entriesMinAggregateInputType
    _max?: Audit_log_entriesMaxAggregateInputType
  }

  export type Audit_log_entriesGroupByOutputType = {
    instance_id: string | null
    id: string
    payload: JsonValue | null
    created_at: Date | null
    ip_address: string
    _count: Audit_log_entriesCountAggregateOutputType | null
    _min: Audit_log_entriesMinAggregateOutputType | null
    _max: Audit_log_entriesMaxAggregateOutputType | null
  }

  type GetAudit_log_entriesGroupByPayload<T extends audit_log_entriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Audit_log_entriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Audit_log_entriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Audit_log_entriesGroupByOutputType[P]>
            : GetScalarType<T[P], Audit_log_entriesGroupByOutputType[P]>
        }
      >
    >


  export type audit_log_entriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    payload?: boolean
    created_at?: boolean
    ip_address?: boolean
  }, ExtArgs["result"]["audit_log_entries"]>

  export type audit_log_entriesSelectScalar = {
    instance_id?: boolean
    id?: boolean
    payload?: boolean
    created_at?: boolean
    ip_address?: boolean
  }


  export type $audit_log_entriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "audit_log_entries"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      instance_id: string | null
      id: string
      payload: Prisma.JsonValue | null
      created_at: Date | null
      ip_address: string
    }, ExtArgs["result"]["audit_log_entries"]>
    composites: {}
  }


  type audit_log_entriesGetPayload<S extends boolean | null | undefined | audit_log_entriesDefaultArgs> = $Result.GetResult<Prisma.$audit_log_entriesPayload, S>

  type audit_log_entriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<audit_log_entriesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Audit_log_entriesCountAggregateInputType | true
    }

  export interface audit_log_entriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['audit_log_entries'], meta: { name: 'audit_log_entries' } }
    /**
     * Find zero or one Audit_log_entries that matches the filter.
     * @param {audit_log_entriesFindUniqueArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends audit_log_entriesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, audit_log_entriesFindUniqueArgs<ExtArgs>>
    ): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Audit_log_entries that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {audit_log_entriesFindUniqueOrThrowArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends audit_log_entriesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, audit_log_entriesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Audit_log_entries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesFindFirstArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends audit_log_entriesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, audit_log_entriesFindFirstArgs<ExtArgs>>
    ): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Audit_log_entries that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesFindFirstOrThrowArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends audit_log_entriesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, audit_log_entriesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Audit_log_entries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findMany()
     * 
     * // Get first 10 Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findMany({ take: 10 })
     * 
     * // Only select the `instance_id`
     * const audit_log_entriesWithInstance_idOnly = await prisma.audit_log_entries.findMany({ select: { instance_id: true } })
     * 
    **/
    findMany<T extends audit_log_entriesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, audit_log_entriesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Audit_log_entries.
     * @param {audit_log_entriesCreateArgs} args - Arguments to create a Audit_log_entries.
     * @example
     * // Create one Audit_log_entries
     * const Audit_log_entries = await prisma.audit_log_entries.create({
     *   data: {
     *     // ... data to create a Audit_log_entries
     *   }
     * })
     * 
    **/
    create<T extends audit_log_entriesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, audit_log_entriesCreateArgs<ExtArgs>>
    ): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Audit_log_entries.
     *     @param {audit_log_entriesCreateManyArgs} args - Arguments to create many Audit_log_entries.
     *     @example
     *     // Create many Audit_log_entries
     *     const audit_log_entries = await prisma.audit_log_entries.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends audit_log_entriesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, audit_log_entriesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Audit_log_entries.
     * @param {audit_log_entriesDeleteArgs} args - Arguments to delete one Audit_log_entries.
     * @example
     * // Delete one Audit_log_entries
     * const Audit_log_entries = await prisma.audit_log_entries.delete({
     *   where: {
     *     // ... filter to delete one Audit_log_entries
     *   }
     * })
     * 
    **/
    delete<T extends audit_log_entriesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, audit_log_entriesDeleteArgs<ExtArgs>>
    ): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Audit_log_entries.
     * @param {audit_log_entriesUpdateArgs} args - Arguments to update one Audit_log_entries.
     * @example
     * // Update one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends audit_log_entriesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, audit_log_entriesUpdateArgs<ExtArgs>>
    ): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Audit_log_entries.
     * @param {audit_log_entriesDeleteManyArgs} args - Arguments to filter Audit_log_entries to delete.
     * @example
     * // Delete a few Audit_log_entries
     * const { count } = await prisma.audit_log_entries.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends audit_log_entriesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, audit_log_entriesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends audit_log_entriesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, audit_log_entriesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Audit_log_entries.
     * @param {audit_log_entriesUpsertArgs} args - Arguments to update or create a Audit_log_entries.
     * @example
     * // Update or create a Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.upsert({
     *   create: {
     *     // ... data to create a Audit_log_entries
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Audit_log_entries we want to update
     *   }
     * })
    **/
    upsert<T extends audit_log_entriesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, audit_log_entriesUpsertArgs<ExtArgs>>
    ): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesCountArgs} args - Arguments to filter Audit_log_entries to count.
     * @example
     * // Count the number of Audit_log_entries
     * const count = await prisma.audit_log_entries.count({
     *   where: {
     *     // ... the filter for the Audit_log_entries we want to count
     *   }
     * })
    **/
    count<T extends audit_log_entriesCountArgs>(
      args?: Subset<T, audit_log_entriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Audit_log_entriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_log_entriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Audit_log_entriesAggregateArgs>(args: Subset<T, Audit_log_entriesAggregateArgs>): Prisma.PrismaPromise<GetAudit_log_entriesAggregateType<T>>

    /**
     * Group by Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends audit_log_entriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: audit_log_entriesGroupByArgs['orderBy'] }
        : { orderBy?: audit_log_entriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, audit_log_entriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAudit_log_entriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the audit_log_entries model
   */
  readonly fields: audit_log_entriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for audit_log_entries.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__audit_log_entriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the audit_log_entries model
   */ 
  interface audit_log_entriesFieldRefs {
    readonly instance_id: FieldRef<"audit_log_entries", 'String'>
    readonly id: FieldRef<"audit_log_entries", 'String'>
    readonly payload: FieldRef<"audit_log_entries", 'Json'>
    readonly created_at: FieldRef<"audit_log_entries", 'DateTime'>
    readonly ip_address: FieldRef<"audit_log_entries", 'String'>
  }
    

  // Custom InputTypes

  /**
   * audit_log_entries findUnique
   */
  export type audit_log_entriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where: audit_log_entriesWhereUniqueInput
  }


  /**
   * audit_log_entries findUniqueOrThrow
   */
  export type audit_log_entriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where: audit_log_entriesWhereUniqueInput
  }


  /**
   * audit_log_entries findFirst
   */
  export type audit_log_entriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for audit_log_entries.
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of audit_log_entries.
     */
    distinct?: Audit_log_entriesScalarFieldEnum | Audit_log_entriesScalarFieldEnum[]
  }


  /**
   * audit_log_entries findFirstOrThrow
   */
  export type audit_log_entriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for audit_log_entries.
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of audit_log_entries.
     */
    distinct?: Audit_log_entriesScalarFieldEnum | Audit_log_entriesScalarFieldEnum[]
  }


  /**
   * audit_log_entries findMany
   */
  export type audit_log_entriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing audit_log_entries.
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    distinct?: Audit_log_entriesScalarFieldEnum | Audit_log_entriesScalarFieldEnum[]
  }


  /**
   * audit_log_entries create
   */
  export type audit_log_entriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * The data needed to create a audit_log_entries.
     */
    data: XOR<audit_log_entriesCreateInput, audit_log_entriesUncheckedCreateInput>
  }


  /**
   * audit_log_entries createMany
   */
  export type audit_log_entriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many audit_log_entries.
     */
    data: audit_log_entriesCreateManyInput | audit_log_entriesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * audit_log_entries update
   */
  export type audit_log_entriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * The data needed to update a audit_log_entries.
     */
    data: XOR<audit_log_entriesUpdateInput, audit_log_entriesUncheckedUpdateInput>
    /**
     * Choose, which audit_log_entries to update.
     */
    where: audit_log_entriesWhereUniqueInput
  }


  /**
   * audit_log_entries updateMany
   */
  export type audit_log_entriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update audit_log_entries.
     */
    data: XOR<audit_log_entriesUpdateManyMutationInput, audit_log_entriesUncheckedUpdateManyInput>
    /**
     * Filter which audit_log_entries to update
     */
    where?: audit_log_entriesWhereInput
  }


  /**
   * audit_log_entries upsert
   */
  export type audit_log_entriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * The filter to search for the audit_log_entries to update in case it exists.
     */
    where: audit_log_entriesWhereUniqueInput
    /**
     * In case the audit_log_entries found by the `where` argument doesn't exist, create a new audit_log_entries with this data.
     */
    create: XOR<audit_log_entriesCreateInput, audit_log_entriesUncheckedCreateInput>
    /**
     * In case the audit_log_entries was found with the provided `where` argument, update it with this data.
     */
    update: XOR<audit_log_entriesUpdateInput, audit_log_entriesUncheckedUpdateInput>
  }


  /**
   * audit_log_entries delete
   */
  export type audit_log_entriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Filter which audit_log_entries to delete.
     */
    where: audit_log_entriesWhereUniqueInput
  }


  /**
   * audit_log_entries deleteMany
   */
  export type audit_log_entriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which audit_log_entries to delete
     */
    where?: audit_log_entriesWhereInput
  }


  /**
   * audit_log_entries without action
   */
  export type audit_log_entriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
  }



  /**
   * Model flow_state
   */

  export type AggregateFlow_state = {
    _count: Flow_stateCountAggregateOutputType | null
    _min: Flow_stateMinAggregateOutputType | null
    _max: Flow_stateMaxAggregateOutputType | null
  }

  export type Flow_stateMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    auth_code: string | null
    code_challenge_method: $Enums.code_challenge_method | null
    code_challenge: string | null
    provider_type: string | null
    provider_access_token: string | null
    provider_refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
  }

  export type Flow_stateMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    auth_code: string | null
    code_challenge_method: $Enums.code_challenge_method | null
    code_challenge: string | null
    provider_type: string | null
    provider_access_token: string | null
    provider_refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
  }

  export type Flow_stateCountAggregateOutputType = {
    id: number
    user_id: number
    auth_code: number
    code_challenge_method: number
    code_challenge: number
    provider_type: number
    provider_access_token: number
    provider_refresh_token: number
    created_at: number
    updated_at: number
    authentication_method: number
    _all: number
  }


  export type Flow_stateMinAggregateInputType = {
    id?: true
    user_id?: true
    auth_code?: true
    code_challenge_method?: true
    code_challenge?: true
    provider_type?: true
    provider_access_token?: true
    provider_refresh_token?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
  }

  export type Flow_stateMaxAggregateInputType = {
    id?: true
    user_id?: true
    auth_code?: true
    code_challenge_method?: true
    code_challenge?: true
    provider_type?: true
    provider_access_token?: true
    provider_refresh_token?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
  }

  export type Flow_stateCountAggregateInputType = {
    id?: true
    user_id?: true
    auth_code?: true
    code_challenge_method?: true
    code_challenge?: true
    provider_type?: true
    provider_access_token?: true
    provider_refresh_token?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    _all?: true
  }

  export type Flow_stateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which flow_state to aggregate.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned flow_states
    **/
    _count?: true | Flow_stateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Flow_stateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Flow_stateMaxAggregateInputType
  }

  export type GetFlow_stateAggregateType<T extends Flow_stateAggregateArgs> = {
        [P in keyof T & keyof AggregateFlow_state]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFlow_state[P]>
      : GetScalarType<T[P], AggregateFlow_state[P]>
  }




  export type flow_stateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: flow_stateWhereInput
    orderBy?: flow_stateOrderByWithAggregationInput | flow_stateOrderByWithAggregationInput[]
    by: Flow_stateScalarFieldEnum[] | Flow_stateScalarFieldEnum
    having?: flow_stateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Flow_stateCountAggregateInputType | true
    _min?: Flow_stateMinAggregateInputType
    _max?: Flow_stateMaxAggregateInputType
  }

  export type Flow_stateGroupByOutputType = {
    id: string
    user_id: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token: string | null
    provider_refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string
    _count: Flow_stateCountAggregateOutputType | null
    _min: Flow_stateMinAggregateOutputType | null
    _max: Flow_stateMaxAggregateOutputType | null
  }

  type GetFlow_stateGroupByPayload<T extends flow_stateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Flow_stateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Flow_stateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Flow_stateGroupByOutputType[P]>
            : GetScalarType<T[P], Flow_stateGroupByOutputType[P]>
        }
      >
    >


  export type flow_stateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    auth_code?: boolean
    code_challenge_method?: boolean
    code_challenge?: boolean
    provider_type?: boolean
    provider_access_token?: boolean
    provider_refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    saml_relay_states?: boolean | flow_state$saml_relay_statesArgs<ExtArgs>
    _count?: boolean | Flow_stateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["flow_state"]>

  export type flow_stateSelectScalar = {
    id?: boolean
    user_id?: boolean
    auth_code?: boolean
    code_challenge_method?: boolean
    code_challenge?: boolean
    provider_type?: boolean
    provider_access_token?: boolean
    provider_refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
  }

  export type flow_stateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_relay_states?: boolean | flow_state$saml_relay_statesArgs<ExtArgs>
    _count?: boolean | Flow_stateCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $flow_statePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "flow_state"
    objects: {
      saml_relay_states: Prisma.$saml_relay_statesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      auth_code: string
      code_challenge_method: $Enums.code_challenge_method
      code_challenge: string
      provider_type: string
      provider_access_token: string | null
      provider_refresh_token: string | null
      created_at: Date | null
      updated_at: Date | null
      authentication_method: string
    }, ExtArgs["result"]["flow_state"]>
    composites: {}
  }


  type flow_stateGetPayload<S extends boolean | null | undefined | flow_stateDefaultArgs> = $Result.GetResult<Prisma.$flow_statePayload, S>

  type flow_stateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<flow_stateFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Flow_stateCountAggregateInputType | true
    }

  export interface flow_stateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['flow_state'], meta: { name: 'flow_state' } }
    /**
     * Find zero or one Flow_state that matches the filter.
     * @param {flow_stateFindUniqueArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends flow_stateFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, flow_stateFindUniqueArgs<ExtArgs>>
    ): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Flow_state that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {flow_stateFindUniqueOrThrowArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends flow_stateFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, flow_stateFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Flow_state that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateFindFirstArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends flow_stateFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, flow_stateFindFirstArgs<ExtArgs>>
    ): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Flow_state that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateFindFirstOrThrowArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends flow_stateFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, flow_stateFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Flow_states that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Flow_states
     * const flow_states = await prisma.flow_state.findMany()
     * 
     * // Get first 10 Flow_states
     * const flow_states = await prisma.flow_state.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const flow_stateWithIdOnly = await prisma.flow_state.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends flow_stateFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, flow_stateFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Flow_state.
     * @param {flow_stateCreateArgs} args - Arguments to create a Flow_state.
     * @example
     * // Create one Flow_state
     * const Flow_state = await prisma.flow_state.create({
     *   data: {
     *     // ... data to create a Flow_state
     *   }
     * })
     * 
    **/
    create<T extends flow_stateCreateArgs<ExtArgs>>(
      args: SelectSubset<T, flow_stateCreateArgs<ExtArgs>>
    ): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Flow_states.
     *     @param {flow_stateCreateManyArgs} args - Arguments to create many Flow_states.
     *     @example
     *     // Create many Flow_states
     *     const flow_state = await prisma.flow_state.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends flow_stateCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, flow_stateCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Flow_state.
     * @param {flow_stateDeleteArgs} args - Arguments to delete one Flow_state.
     * @example
     * // Delete one Flow_state
     * const Flow_state = await prisma.flow_state.delete({
     *   where: {
     *     // ... filter to delete one Flow_state
     *   }
     * })
     * 
    **/
    delete<T extends flow_stateDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, flow_stateDeleteArgs<ExtArgs>>
    ): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Flow_state.
     * @param {flow_stateUpdateArgs} args - Arguments to update one Flow_state.
     * @example
     * // Update one Flow_state
     * const flow_state = await prisma.flow_state.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends flow_stateUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, flow_stateUpdateArgs<ExtArgs>>
    ): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Flow_states.
     * @param {flow_stateDeleteManyArgs} args - Arguments to filter Flow_states to delete.
     * @example
     * // Delete a few Flow_states
     * const { count } = await prisma.flow_state.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends flow_stateDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, flow_stateDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Flow_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Flow_states
     * const flow_state = await prisma.flow_state.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends flow_stateUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, flow_stateUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Flow_state.
     * @param {flow_stateUpsertArgs} args - Arguments to update or create a Flow_state.
     * @example
     * // Update or create a Flow_state
     * const flow_state = await prisma.flow_state.upsert({
     *   create: {
     *     // ... data to create a Flow_state
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Flow_state we want to update
     *   }
     * })
    **/
    upsert<T extends flow_stateUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, flow_stateUpsertArgs<ExtArgs>>
    ): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Flow_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateCountArgs} args - Arguments to filter Flow_states to count.
     * @example
     * // Count the number of Flow_states
     * const count = await prisma.flow_state.count({
     *   where: {
     *     // ... the filter for the Flow_states we want to count
     *   }
     * })
    **/
    count<T extends flow_stateCountArgs>(
      args?: Subset<T, flow_stateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Flow_stateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Flow_state.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Flow_stateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Flow_stateAggregateArgs>(args: Subset<T, Flow_stateAggregateArgs>): Prisma.PrismaPromise<GetFlow_stateAggregateType<T>>

    /**
     * Group by Flow_state.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends flow_stateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: flow_stateGroupByArgs['orderBy'] }
        : { orderBy?: flow_stateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, flow_stateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFlow_stateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the flow_state model
   */
  readonly fields: flow_stateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for flow_state.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__flow_stateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    saml_relay_states<T extends flow_state$saml_relay_statesArgs<ExtArgs> = {}>(args?: Subset<T, flow_state$saml_relay_statesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the flow_state model
   */ 
  interface flow_stateFieldRefs {
    readonly id: FieldRef<"flow_state", 'String'>
    readonly user_id: FieldRef<"flow_state", 'String'>
    readonly auth_code: FieldRef<"flow_state", 'String'>
    readonly code_challenge_method: FieldRef<"flow_state", 'code_challenge_method'>
    readonly code_challenge: FieldRef<"flow_state", 'String'>
    readonly provider_type: FieldRef<"flow_state", 'String'>
    readonly provider_access_token: FieldRef<"flow_state", 'String'>
    readonly provider_refresh_token: FieldRef<"flow_state", 'String'>
    readonly created_at: FieldRef<"flow_state", 'DateTime'>
    readonly updated_at: FieldRef<"flow_state", 'DateTime'>
    readonly authentication_method: FieldRef<"flow_state", 'String'>
  }
    

  // Custom InputTypes

  /**
   * flow_state findUnique
   */
  export type flow_stateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where: flow_stateWhereUniqueInput
  }


  /**
   * flow_state findUniqueOrThrow
   */
  export type flow_stateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where: flow_stateWhereUniqueInput
  }


  /**
   * flow_state findFirst
   */
  export type flow_stateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for flow_states.
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of flow_states.
     */
    distinct?: Flow_stateScalarFieldEnum | Flow_stateScalarFieldEnum[]
  }


  /**
   * flow_state findFirstOrThrow
   */
  export type flow_stateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for flow_states.
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of flow_states.
     */
    distinct?: Flow_stateScalarFieldEnum | Flow_stateScalarFieldEnum[]
  }


  /**
   * flow_state findMany
   */
  export type flow_stateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_states to fetch.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing flow_states.
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    distinct?: Flow_stateScalarFieldEnum | Flow_stateScalarFieldEnum[]
  }


  /**
   * flow_state create
   */
  export type flow_stateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * The data needed to create a flow_state.
     */
    data: XOR<flow_stateCreateInput, flow_stateUncheckedCreateInput>
  }


  /**
   * flow_state createMany
   */
  export type flow_stateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many flow_states.
     */
    data: flow_stateCreateManyInput | flow_stateCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * flow_state update
   */
  export type flow_stateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * The data needed to update a flow_state.
     */
    data: XOR<flow_stateUpdateInput, flow_stateUncheckedUpdateInput>
    /**
     * Choose, which flow_state to update.
     */
    where: flow_stateWhereUniqueInput
  }


  /**
   * flow_state updateMany
   */
  export type flow_stateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update flow_states.
     */
    data: XOR<flow_stateUpdateManyMutationInput, flow_stateUncheckedUpdateManyInput>
    /**
     * Filter which flow_states to update
     */
    where?: flow_stateWhereInput
  }


  /**
   * flow_state upsert
   */
  export type flow_stateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * The filter to search for the flow_state to update in case it exists.
     */
    where: flow_stateWhereUniqueInput
    /**
     * In case the flow_state found by the `where` argument doesn't exist, create a new flow_state with this data.
     */
    create: XOR<flow_stateCreateInput, flow_stateUncheckedCreateInput>
    /**
     * In case the flow_state was found with the provided `where` argument, update it with this data.
     */
    update: XOR<flow_stateUpdateInput, flow_stateUncheckedUpdateInput>
  }


  /**
   * flow_state delete
   */
  export type flow_stateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter which flow_state to delete.
     */
    where: flow_stateWhereUniqueInput
  }


  /**
   * flow_state deleteMany
   */
  export type flow_stateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which flow_states to delete
     */
    where?: flow_stateWhereInput
  }


  /**
   * flow_state.saml_relay_states
   */
  export type flow_state$saml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    where?: saml_relay_statesWhereInput
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    cursor?: saml_relay_statesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }


  /**
   * flow_state without action
   */
  export type flow_stateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
  }



  /**
   * Model identities
   */

  export type AggregateIdentities = {
    _count: IdentitiesCountAggregateOutputType | null
    _min: IdentitiesMinAggregateOutputType | null
    _max: IdentitiesMaxAggregateOutputType | null
  }

  export type IdentitiesMinAggregateOutputType = {
    provider_id: string | null
    user_id: string | null
    provider: string | null
    last_sign_in_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    id: string | null
  }

  export type IdentitiesMaxAggregateOutputType = {
    provider_id: string | null
    user_id: string | null
    provider: string | null
    last_sign_in_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    id: string | null
  }

  export type IdentitiesCountAggregateOutputType = {
    provider_id: number
    user_id: number
    identity_data: number
    provider: number
    last_sign_in_at: number
    created_at: number
    updated_at: number
    email: number
    id: number
    _all: number
  }


  export type IdentitiesMinAggregateInputType = {
    provider_id?: true
    user_id?: true
    provider?: true
    last_sign_in_at?: true
    created_at?: true
    updated_at?: true
    email?: true
    id?: true
  }

  export type IdentitiesMaxAggregateInputType = {
    provider_id?: true
    user_id?: true
    provider?: true
    last_sign_in_at?: true
    created_at?: true
    updated_at?: true
    email?: true
    id?: true
  }

  export type IdentitiesCountAggregateInputType = {
    provider_id?: true
    user_id?: true
    identity_data?: true
    provider?: true
    last_sign_in_at?: true
    created_at?: true
    updated_at?: true
    email?: true
    id?: true
    _all?: true
  }

  export type IdentitiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which identities to aggregate.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned identities
    **/
    _count?: true | IdentitiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IdentitiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IdentitiesMaxAggregateInputType
  }

  export type GetIdentitiesAggregateType<T extends IdentitiesAggregateArgs> = {
        [P in keyof T & keyof AggregateIdentities]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIdentities[P]>
      : GetScalarType<T[P], AggregateIdentities[P]>
  }




  export type identitiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: identitiesWhereInput
    orderBy?: identitiesOrderByWithAggregationInput | identitiesOrderByWithAggregationInput[]
    by: IdentitiesScalarFieldEnum[] | IdentitiesScalarFieldEnum
    having?: identitiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IdentitiesCountAggregateInputType | true
    _min?: IdentitiesMinAggregateInputType
    _max?: IdentitiesMaxAggregateInputType
  }

  export type IdentitiesGroupByOutputType = {
    provider_id: string
    user_id: string
    identity_data: JsonValue
    provider: string
    last_sign_in_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    id: string
    _count: IdentitiesCountAggregateOutputType | null
    _min: IdentitiesMinAggregateOutputType | null
    _max: IdentitiesMaxAggregateOutputType | null
  }

  type GetIdentitiesGroupByPayload<T extends identitiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IdentitiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IdentitiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IdentitiesGroupByOutputType[P]>
            : GetScalarType<T[P], IdentitiesGroupByOutputType[P]>
        }
      >
    >


  export type identitiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provider_id?: boolean
    user_id?: boolean
    identity_data?: boolean
    provider?: boolean
    last_sign_in_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    id?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identities"]>

  export type identitiesSelectScalar = {
    provider_id?: boolean
    user_id?: boolean
    identity_data?: boolean
    provider?: boolean
    last_sign_in_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    id?: boolean
  }

  export type identitiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }


  export type $identitiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "identities"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      provider_id: string
      user_id: string
      identity_data: Prisma.JsonValue
      provider: string
      last_sign_in_at: Date | null
      created_at: Date | null
      updated_at: Date | null
      email: string | null
      id: string
    }, ExtArgs["result"]["identities"]>
    composites: {}
  }


  type identitiesGetPayload<S extends boolean | null | undefined | identitiesDefaultArgs> = $Result.GetResult<Prisma.$identitiesPayload, S>

  type identitiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<identitiesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: IdentitiesCountAggregateInputType | true
    }

  export interface identitiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['identities'], meta: { name: 'identities' } }
    /**
     * Find zero or one Identities that matches the filter.
     * @param {identitiesFindUniqueArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends identitiesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, identitiesFindUniqueArgs<ExtArgs>>
    ): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Identities that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {identitiesFindUniqueOrThrowArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends identitiesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, identitiesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Identities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesFindFirstArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends identitiesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, identitiesFindFirstArgs<ExtArgs>>
    ): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Identities that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesFindFirstOrThrowArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends identitiesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, identitiesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Identities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Identities
     * const identities = await prisma.identities.findMany()
     * 
     * // Get first 10 Identities
     * const identities = await prisma.identities.findMany({ take: 10 })
     * 
     * // Only select the `provider_id`
     * const identitiesWithProvider_idOnly = await prisma.identities.findMany({ select: { provider_id: true } })
     * 
    **/
    findMany<T extends identitiesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, identitiesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Identities.
     * @param {identitiesCreateArgs} args - Arguments to create a Identities.
     * @example
     * // Create one Identities
     * const Identities = await prisma.identities.create({
     *   data: {
     *     // ... data to create a Identities
     *   }
     * })
     * 
    **/
    create<T extends identitiesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, identitiesCreateArgs<ExtArgs>>
    ): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Identities.
     *     @param {identitiesCreateManyArgs} args - Arguments to create many Identities.
     *     @example
     *     // Create many Identities
     *     const identities = await prisma.identities.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends identitiesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, identitiesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Identities.
     * @param {identitiesDeleteArgs} args - Arguments to delete one Identities.
     * @example
     * // Delete one Identities
     * const Identities = await prisma.identities.delete({
     *   where: {
     *     // ... filter to delete one Identities
     *   }
     * })
     * 
    **/
    delete<T extends identitiesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, identitiesDeleteArgs<ExtArgs>>
    ): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Identities.
     * @param {identitiesUpdateArgs} args - Arguments to update one Identities.
     * @example
     * // Update one Identities
     * const identities = await prisma.identities.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends identitiesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, identitiesUpdateArgs<ExtArgs>>
    ): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Identities.
     * @param {identitiesDeleteManyArgs} args - Arguments to filter Identities to delete.
     * @example
     * // Delete a few Identities
     * const { count } = await prisma.identities.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends identitiesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, identitiesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Identities
     * const identities = await prisma.identities.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends identitiesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, identitiesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Identities.
     * @param {identitiesUpsertArgs} args - Arguments to update or create a Identities.
     * @example
     * // Update or create a Identities
     * const identities = await prisma.identities.upsert({
     *   create: {
     *     // ... data to create a Identities
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Identities we want to update
     *   }
     * })
    **/
    upsert<T extends identitiesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, identitiesUpsertArgs<ExtArgs>>
    ): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesCountArgs} args - Arguments to filter Identities to count.
     * @example
     * // Count the number of Identities
     * const count = await prisma.identities.count({
     *   where: {
     *     // ... the filter for the Identities we want to count
     *   }
     * })
    **/
    count<T extends identitiesCountArgs>(
      args?: Subset<T, identitiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IdentitiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentitiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IdentitiesAggregateArgs>(args: Subset<T, IdentitiesAggregateArgs>): Prisma.PrismaPromise<GetIdentitiesAggregateType<T>>

    /**
     * Group by Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends identitiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: identitiesGroupByArgs['orderBy'] }
        : { orderBy?: identitiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, identitiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIdentitiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the identities model
   */
  readonly fields: identitiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for identities.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__identitiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the identities model
   */ 
  interface identitiesFieldRefs {
    readonly provider_id: FieldRef<"identities", 'String'>
    readonly user_id: FieldRef<"identities", 'String'>
    readonly identity_data: FieldRef<"identities", 'Json'>
    readonly provider: FieldRef<"identities", 'String'>
    readonly last_sign_in_at: FieldRef<"identities", 'DateTime'>
    readonly created_at: FieldRef<"identities", 'DateTime'>
    readonly updated_at: FieldRef<"identities", 'DateTime'>
    readonly email: FieldRef<"identities", 'String'>
    readonly id: FieldRef<"identities", 'String'>
  }
    

  // Custom InputTypes

  /**
   * identities findUnique
   */
  export type identitiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where: identitiesWhereUniqueInput
  }


  /**
   * identities findUniqueOrThrow
   */
  export type identitiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where: identitiesWhereUniqueInput
  }


  /**
   * identities findFirst
   */
  export type identitiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for identities.
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of identities.
     */
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }


  /**
   * identities findFirstOrThrow
   */
  export type identitiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for identities.
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of identities.
     */
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }


  /**
   * identities findMany
   */
  export type identitiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing identities.
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }


  /**
   * identities create
   */
  export type identitiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * The data needed to create a identities.
     */
    data: XOR<identitiesCreateInput, identitiesUncheckedCreateInput>
  }


  /**
   * identities createMany
   */
  export type identitiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many identities.
     */
    data: identitiesCreateManyInput | identitiesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * identities update
   */
  export type identitiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * The data needed to update a identities.
     */
    data: XOR<identitiesUpdateInput, identitiesUncheckedUpdateInput>
    /**
     * Choose, which identities to update.
     */
    where: identitiesWhereUniqueInput
  }


  /**
   * identities updateMany
   */
  export type identitiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update identities.
     */
    data: XOR<identitiesUpdateManyMutationInput, identitiesUncheckedUpdateManyInput>
    /**
     * Filter which identities to update
     */
    where?: identitiesWhereInput
  }


  /**
   * identities upsert
   */
  export type identitiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * The filter to search for the identities to update in case it exists.
     */
    where: identitiesWhereUniqueInput
    /**
     * In case the identities found by the `where` argument doesn't exist, create a new identities with this data.
     */
    create: XOR<identitiesCreateInput, identitiesUncheckedCreateInput>
    /**
     * In case the identities was found with the provided `where` argument, update it with this data.
     */
    update: XOR<identitiesUpdateInput, identitiesUncheckedUpdateInput>
  }


  /**
   * identities delete
   */
  export type identitiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter which identities to delete.
     */
    where: identitiesWhereUniqueInput
  }


  /**
   * identities deleteMany
   */
  export type identitiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which identities to delete
     */
    where?: identitiesWhereInput
  }


  /**
   * identities without action
   */
  export type identitiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
  }



  /**
   * Model instances
   */

  export type AggregateInstances = {
    _count: InstancesCountAggregateOutputType | null
    _min: InstancesMinAggregateOutputType | null
    _max: InstancesMaxAggregateOutputType | null
  }

  export type InstancesMinAggregateOutputType = {
    id: string | null
    uuid: string | null
    raw_base_config: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type InstancesMaxAggregateOutputType = {
    id: string | null
    uuid: string | null
    raw_base_config: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type InstancesCountAggregateOutputType = {
    id: number
    uuid: number
    raw_base_config: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type InstancesMinAggregateInputType = {
    id?: true
    uuid?: true
    raw_base_config?: true
    created_at?: true
    updated_at?: true
  }

  export type InstancesMaxAggregateInputType = {
    id?: true
    uuid?: true
    raw_base_config?: true
    created_at?: true
    updated_at?: true
  }

  export type InstancesCountAggregateInputType = {
    id?: true
    uuid?: true
    raw_base_config?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type InstancesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which instances to aggregate.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned instances
    **/
    _count?: true | InstancesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InstancesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InstancesMaxAggregateInputType
  }

  export type GetInstancesAggregateType<T extends InstancesAggregateArgs> = {
        [P in keyof T & keyof AggregateInstances]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInstances[P]>
      : GetScalarType<T[P], AggregateInstances[P]>
  }




  export type instancesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: instancesWhereInput
    orderBy?: instancesOrderByWithAggregationInput | instancesOrderByWithAggregationInput[]
    by: InstancesScalarFieldEnum[] | InstancesScalarFieldEnum
    having?: instancesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InstancesCountAggregateInputType | true
    _min?: InstancesMinAggregateInputType
    _max?: InstancesMaxAggregateInputType
  }

  export type InstancesGroupByOutputType = {
    id: string
    uuid: string | null
    raw_base_config: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: InstancesCountAggregateOutputType | null
    _min: InstancesMinAggregateOutputType | null
    _max: InstancesMaxAggregateOutputType | null
  }

  type GetInstancesGroupByPayload<T extends instancesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InstancesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InstancesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InstancesGroupByOutputType[P]>
            : GetScalarType<T[P], InstancesGroupByOutputType[P]>
        }
      >
    >


  export type instancesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    raw_base_config?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["instances"]>

  export type instancesSelectScalar = {
    id?: boolean
    uuid?: boolean
    raw_base_config?: boolean
    created_at?: boolean
    updated_at?: boolean
  }


  export type $instancesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "instances"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      uuid: string | null
      raw_base_config: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["instances"]>
    composites: {}
  }


  type instancesGetPayload<S extends boolean | null | undefined | instancesDefaultArgs> = $Result.GetResult<Prisma.$instancesPayload, S>

  type instancesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<instancesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: InstancesCountAggregateInputType | true
    }

  export interface instancesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['instances'], meta: { name: 'instances' } }
    /**
     * Find zero or one Instances that matches the filter.
     * @param {instancesFindUniqueArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends instancesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, instancesFindUniqueArgs<ExtArgs>>
    ): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Instances that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {instancesFindUniqueOrThrowArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends instancesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, instancesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Instances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesFindFirstArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends instancesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, instancesFindFirstArgs<ExtArgs>>
    ): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Instances that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesFindFirstOrThrowArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends instancesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, instancesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Instances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Instances
     * const instances = await prisma.instances.findMany()
     * 
     * // Get first 10 Instances
     * const instances = await prisma.instances.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const instancesWithIdOnly = await prisma.instances.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends instancesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, instancesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Instances.
     * @param {instancesCreateArgs} args - Arguments to create a Instances.
     * @example
     * // Create one Instances
     * const Instances = await prisma.instances.create({
     *   data: {
     *     // ... data to create a Instances
     *   }
     * })
     * 
    **/
    create<T extends instancesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, instancesCreateArgs<ExtArgs>>
    ): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Instances.
     *     @param {instancesCreateManyArgs} args - Arguments to create many Instances.
     *     @example
     *     // Create many Instances
     *     const instances = await prisma.instances.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends instancesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, instancesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Instances.
     * @param {instancesDeleteArgs} args - Arguments to delete one Instances.
     * @example
     * // Delete one Instances
     * const Instances = await prisma.instances.delete({
     *   where: {
     *     // ... filter to delete one Instances
     *   }
     * })
     * 
    **/
    delete<T extends instancesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, instancesDeleteArgs<ExtArgs>>
    ): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Instances.
     * @param {instancesUpdateArgs} args - Arguments to update one Instances.
     * @example
     * // Update one Instances
     * const instances = await prisma.instances.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends instancesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, instancesUpdateArgs<ExtArgs>>
    ): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Instances.
     * @param {instancesDeleteManyArgs} args - Arguments to filter Instances to delete.
     * @example
     * // Delete a few Instances
     * const { count } = await prisma.instances.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends instancesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, instancesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Instances
     * const instances = await prisma.instances.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends instancesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, instancesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Instances.
     * @param {instancesUpsertArgs} args - Arguments to update or create a Instances.
     * @example
     * // Update or create a Instances
     * const instances = await prisma.instances.upsert({
     *   create: {
     *     // ... data to create a Instances
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Instances we want to update
     *   }
     * })
    **/
    upsert<T extends instancesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, instancesUpsertArgs<ExtArgs>>
    ): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesCountArgs} args - Arguments to filter Instances to count.
     * @example
     * // Count the number of Instances
     * const count = await prisma.instances.count({
     *   where: {
     *     // ... the filter for the Instances we want to count
     *   }
     * })
    **/
    count<T extends instancesCountArgs>(
      args?: Subset<T, instancesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InstancesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstancesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InstancesAggregateArgs>(args: Subset<T, InstancesAggregateArgs>): Prisma.PrismaPromise<GetInstancesAggregateType<T>>

    /**
     * Group by Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends instancesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: instancesGroupByArgs['orderBy'] }
        : { orderBy?: instancesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, instancesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInstancesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the instances model
   */
  readonly fields: instancesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for instances.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__instancesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the instances model
   */ 
  interface instancesFieldRefs {
    readonly id: FieldRef<"instances", 'String'>
    readonly uuid: FieldRef<"instances", 'String'>
    readonly raw_base_config: FieldRef<"instances", 'String'>
    readonly created_at: FieldRef<"instances", 'DateTime'>
    readonly updated_at: FieldRef<"instances", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * instances findUnique
   */
  export type instancesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where: instancesWhereUniqueInput
  }


  /**
   * instances findUniqueOrThrow
   */
  export type instancesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where: instancesWhereUniqueInput
  }


  /**
   * instances findFirst
   */
  export type instancesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for instances.
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of instances.
     */
    distinct?: InstancesScalarFieldEnum | InstancesScalarFieldEnum[]
  }


  /**
   * instances findFirstOrThrow
   */
  export type instancesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for instances.
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of instances.
     */
    distinct?: InstancesScalarFieldEnum | InstancesScalarFieldEnum[]
  }


  /**
   * instances findMany
   */
  export type instancesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing instances.
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    distinct?: InstancesScalarFieldEnum | InstancesScalarFieldEnum[]
  }


  /**
   * instances create
   */
  export type instancesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * The data needed to create a instances.
     */
    data: XOR<instancesCreateInput, instancesUncheckedCreateInput>
  }


  /**
   * instances createMany
   */
  export type instancesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many instances.
     */
    data: instancesCreateManyInput | instancesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * instances update
   */
  export type instancesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * The data needed to update a instances.
     */
    data: XOR<instancesUpdateInput, instancesUncheckedUpdateInput>
    /**
     * Choose, which instances to update.
     */
    where: instancesWhereUniqueInput
  }


  /**
   * instances updateMany
   */
  export type instancesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update instances.
     */
    data: XOR<instancesUpdateManyMutationInput, instancesUncheckedUpdateManyInput>
    /**
     * Filter which instances to update
     */
    where?: instancesWhereInput
  }


  /**
   * instances upsert
   */
  export type instancesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * The filter to search for the instances to update in case it exists.
     */
    where: instancesWhereUniqueInput
    /**
     * In case the instances found by the `where` argument doesn't exist, create a new instances with this data.
     */
    create: XOR<instancesCreateInput, instancesUncheckedCreateInput>
    /**
     * In case the instances was found with the provided `where` argument, update it with this data.
     */
    update: XOR<instancesUpdateInput, instancesUncheckedUpdateInput>
  }


  /**
   * instances delete
   */
  export type instancesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Filter which instances to delete.
     */
    where: instancesWhereUniqueInput
  }


  /**
   * instances deleteMany
   */
  export type instancesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which instances to delete
     */
    where?: instancesWhereInput
  }


  /**
   * instances without action
   */
  export type instancesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
  }



  /**
   * Model mfa_amr_claims
   */

  export type AggregateMfa_amr_claims = {
    _count: Mfa_amr_claimsCountAggregateOutputType | null
    _min: Mfa_amr_claimsMinAggregateOutputType | null
    _max: Mfa_amr_claimsMaxAggregateOutputType | null
  }

  export type Mfa_amr_claimsMinAggregateOutputType = {
    session_id: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
    id: string | null
  }

  export type Mfa_amr_claimsMaxAggregateOutputType = {
    session_id: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
    id: string | null
  }

  export type Mfa_amr_claimsCountAggregateOutputType = {
    session_id: number
    created_at: number
    updated_at: number
    authentication_method: number
    id: number
    _all: number
  }


  export type Mfa_amr_claimsMinAggregateInputType = {
    session_id?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    id?: true
  }

  export type Mfa_amr_claimsMaxAggregateInputType = {
    session_id?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    id?: true
  }

  export type Mfa_amr_claimsCountAggregateInputType = {
    session_id?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    id?: true
    _all?: true
  }

  export type Mfa_amr_claimsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_amr_claims to aggregate.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mfa_amr_claims
    **/
    _count?: true | Mfa_amr_claimsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mfa_amr_claimsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mfa_amr_claimsMaxAggregateInputType
  }

  export type GetMfa_amr_claimsAggregateType<T extends Mfa_amr_claimsAggregateArgs> = {
        [P in keyof T & keyof AggregateMfa_amr_claims]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMfa_amr_claims[P]>
      : GetScalarType<T[P], AggregateMfa_amr_claims[P]>
  }




  export type mfa_amr_claimsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_amr_claimsWhereInput
    orderBy?: mfa_amr_claimsOrderByWithAggregationInput | mfa_amr_claimsOrderByWithAggregationInput[]
    by: Mfa_amr_claimsScalarFieldEnum[] | Mfa_amr_claimsScalarFieldEnum
    having?: mfa_amr_claimsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mfa_amr_claimsCountAggregateInputType | true
    _min?: Mfa_amr_claimsMinAggregateInputType
    _max?: Mfa_amr_claimsMaxAggregateInputType
  }

  export type Mfa_amr_claimsGroupByOutputType = {
    session_id: string
    created_at: Date
    updated_at: Date
    authentication_method: string
    id: string
    _count: Mfa_amr_claimsCountAggregateOutputType | null
    _min: Mfa_amr_claimsMinAggregateOutputType | null
    _max: Mfa_amr_claimsMaxAggregateOutputType | null
  }

  type GetMfa_amr_claimsGroupByPayload<T extends mfa_amr_claimsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mfa_amr_claimsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mfa_amr_claimsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mfa_amr_claimsGroupByOutputType[P]>
            : GetScalarType<T[P], Mfa_amr_claimsGroupByOutputType[P]>
        }
      >
    >


  export type mfa_amr_claimsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    id?: boolean
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_amr_claims"]>

  export type mfa_amr_claimsSelectScalar = {
    session_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    id?: boolean
  }

  export type mfa_amr_claimsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }


  export type $mfa_amr_claimsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mfa_amr_claims"
    objects: {
      sessions: Prisma.$sessionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      session_id: string
      created_at: Date
      updated_at: Date
      authentication_method: string
      id: string
    }, ExtArgs["result"]["mfa_amr_claims"]>
    composites: {}
  }


  type mfa_amr_claimsGetPayload<S extends boolean | null | undefined | mfa_amr_claimsDefaultArgs> = $Result.GetResult<Prisma.$mfa_amr_claimsPayload, S>

  type mfa_amr_claimsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<mfa_amr_claimsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Mfa_amr_claimsCountAggregateInputType | true
    }

  export interface mfa_amr_claimsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mfa_amr_claims'], meta: { name: 'mfa_amr_claims' } }
    /**
     * Find zero or one Mfa_amr_claims that matches the filter.
     * @param {mfa_amr_claimsFindUniqueArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends mfa_amr_claimsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_amr_claimsFindUniqueArgs<ExtArgs>>
    ): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Mfa_amr_claims that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {mfa_amr_claimsFindUniqueOrThrowArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends mfa_amr_claimsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_amr_claimsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Mfa_amr_claims that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsFindFirstArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends mfa_amr_claimsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_amr_claimsFindFirstArgs<ExtArgs>>
    ): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Mfa_amr_claims that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsFindFirstOrThrowArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends mfa_amr_claimsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_amr_claimsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Mfa_amr_claims that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findMany()
     * 
     * // Get first 10 Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findMany({ take: 10 })
     * 
     * // Only select the `session_id`
     * const mfa_amr_claimsWithSession_idOnly = await prisma.mfa_amr_claims.findMany({ select: { session_id: true } })
     * 
    **/
    findMany<T extends mfa_amr_claimsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_amr_claimsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Mfa_amr_claims.
     * @param {mfa_amr_claimsCreateArgs} args - Arguments to create a Mfa_amr_claims.
     * @example
     * // Create one Mfa_amr_claims
     * const Mfa_amr_claims = await prisma.mfa_amr_claims.create({
     *   data: {
     *     // ... data to create a Mfa_amr_claims
     *   }
     * })
     * 
    **/
    create<T extends mfa_amr_claimsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_amr_claimsCreateArgs<ExtArgs>>
    ): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Mfa_amr_claims.
     *     @param {mfa_amr_claimsCreateManyArgs} args - Arguments to create many Mfa_amr_claims.
     *     @example
     *     // Create many Mfa_amr_claims
     *     const mfa_amr_claims = await prisma.mfa_amr_claims.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends mfa_amr_claimsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_amr_claimsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Mfa_amr_claims.
     * @param {mfa_amr_claimsDeleteArgs} args - Arguments to delete one Mfa_amr_claims.
     * @example
     * // Delete one Mfa_amr_claims
     * const Mfa_amr_claims = await prisma.mfa_amr_claims.delete({
     *   where: {
     *     // ... filter to delete one Mfa_amr_claims
     *   }
     * })
     * 
    **/
    delete<T extends mfa_amr_claimsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_amr_claimsDeleteArgs<ExtArgs>>
    ): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Mfa_amr_claims.
     * @param {mfa_amr_claimsUpdateArgs} args - Arguments to update one Mfa_amr_claims.
     * @example
     * // Update one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends mfa_amr_claimsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_amr_claimsUpdateArgs<ExtArgs>>
    ): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Mfa_amr_claims.
     * @param {mfa_amr_claimsDeleteManyArgs} args - Arguments to filter Mfa_amr_claims to delete.
     * @example
     * // Delete a few Mfa_amr_claims
     * const { count } = await prisma.mfa_amr_claims.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends mfa_amr_claimsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_amr_claimsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends mfa_amr_claimsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_amr_claimsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Mfa_amr_claims.
     * @param {mfa_amr_claimsUpsertArgs} args - Arguments to update or create a Mfa_amr_claims.
     * @example
     * // Update or create a Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.upsert({
     *   create: {
     *     // ... data to create a Mfa_amr_claims
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mfa_amr_claims we want to update
     *   }
     * })
    **/
    upsert<T extends mfa_amr_claimsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_amr_claimsUpsertArgs<ExtArgs>>
    ): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsCountArgs} args - Arguments to filter Mfa_amr_claims to count.
     * @example
     * // Count the number of Mfa_amr_claims
     * const count = await prisma.mfa_amr_claims.count({
     *   where: {
     *     // ... the filter for the Mfa_amr_claims we want to count
     *   }
     * })
    **/
    count<T extends mfa_amr_claimsCountArgs>(
      args?: Subset<T, mfa_amr_claimsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mfa_amr_claimsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mfa_amr_claimsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mfa_amr_claimsAggregateArgs>(args: Subset<T, Mfa_amr_claimsAggregateArgs>): Prisma.PrismaPromise<GetMfa_amr_claimsAggregateType<T>>

    /**
     * Group by Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mfa_amr_claimsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mfa_amr_claimsGroupByArgs['orderBy'] }
        : { orderBy?: mfa_amr_claimsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mfa_amr_claimsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMfa_amr_claimsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mfa_amr_claims model
   */
  readonly fields: mfa_amr_claimsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mfa_amr_claims.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mfa_amr_claimsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    sessions<T extends sessionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sessionsDefaultArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the mfa_amr_claims model
   */ 
  interface mfa_amr_claimsFieldRefs {
    readonly session_id: FieldRef<"mfa_amr_claims", 'String'>
    readonly created_at: FieldRef<"mfa_amr_claims", 'DateTime'>
    readonly updated_at: FieldRef<"mfa_amr_claims", 'DateTime'>
    readonly authentication_method: FieldRef<"mfa_amr_claims", 'String'>
    readonly id: FieldRef<"mfa_amr_claims", 'String'>
  }
    

  // Custom InputTypes

  /**
   * mfa_amr_claims findUnique
   */
  export type mfa_amr_claimsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }


  /**
   * mfa_amr_claims findUniqueOrThrow
   */
  export type mfa_amr_claimsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }


  /**
   * mfa_amr_claims findFirst
   */
  export type mfa_amr_claimsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_amr_claims.
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_amr_claims.
     */
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }


  /**
   * mfa_amr_claims findFirstOrThrow
   */
  export type mfa_amr_claimsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_amr_claims.
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_amr_claims.
     */
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }


  /**
   * mfa_amr_claims findMany
   */
  export type mfa_amr_claimsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mfa_amr_claims.
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }


  /**
   * mfa_amr_claims create
   */
  export type mfa_amr_claimsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * The data needed to create a mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsCreateInput, mfa_amr_claimsUncheckedCreateInput>
  }


  /**
   * mfa_amr_claims createMany
   */
  export type mfa_amr_claimsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mfa_amr_claims.
     */
    data: mfa_amr_claimsCreateManyInput | mfa_amr_claimsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * mfa_amr_claims update
   */
  export type mfa_amr_claimsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * The data needed to update a mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsUpdateInput, mfa_amr_claimsUncheckedUpdateInput>
    /**
     * Choose, which mfa_amr_claims to update.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }


  /**
   * mfa_amr_claims updateMany
   */
  export type mfa_amr_claimsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsUpdateManyMutationInput, mfa_amr_claimsUncheckedUpdateManyInput>
    /**
     * Filter which mfa_amr_claims to update
     */
    where?: mfa_amr_claimsWhereInput
  }


  /**
   * mfa_amr_claims upsert
   */
  export type mfa_amr_claimsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * The filter to search for the mfa_amr_claims to update in case it exists.
     */
    where: mfa_amr_claimsWhereUniqueInput
    /**
     * In case the mfa_amr_claims found by the `where` argument doesn't exist, create a new mfa_amr_claims with this data.
     */
    create: XOR<mfa_amr_claimsCreateInput, mfa_amr_claimsUncheckedCreateInput>
    /**
     * In case the mfa_amr_claims was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mfa_amr_claimsUpdateInput, mfa_amr_claimsUncheckedUpdateInput>
  }


  /**
   * mfa_amr_claims delete
   */
  export type mfa_amr_claimsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter which mfa_amr_claims to delete.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }


  /**
   * mfa_amr_claims deleteMany
   */
  export type mfa_amr_claimsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_amr_claims to delete
     */
    where?: mfa_amr_claimsWhereInput
  }


  /**
   * mfa_amr_claims without action
   */
  export type mfa_amr_claimsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
  }



  /**
   * Model mfa_challenges
   */

  export type AggregateMfa_challenges = {
    _count: Mfa_challengesCountAggregateOutputType | null
    _min: Mfa_challengesMinAggregateOutputType | null
    _max: Mfa_challengesMaxAggregateOutputType | null
  }

  export type Mfa_challengesMinAggregateOutputType = {
    id: string | null
    factor_id: string | null
    created_at: Date | null
    verified_at: Date | null
    ip_address: string | null
  }

  export type Mfa_challengesMaxAggregateOutputType = {
    id: string | null
    factor_id: string | null
    created_at: Date | null
    verified_at: Date | null
    ip_address: string | null
  }

  export type Mfa_challengesCountAggregateOutputType = {
    id: number
    factor_id: number
    created_at: number
    verified_at: number
    ip_address: number
    _all: number
  }


  export type Mfa_challengesMinAggregateInputType = {
    id?: true
    factor_id?: true
    created_at?: true
    verified_at?: true
    ip_address?: true
  }

  export type Mfa_challengesMaxAggregateInputType = {
    id?: true
    factor_id?: true
    created_at?: true
    verified_at?: true
    ip_address?: true
  }

  export type Mfa_challengesCountAggregateInputType = {
    id?: true
    factor_id?: true
    created_at?: true
    verified_at?: true
    ip_address?: true
    _all?: true
  }

  export type Mfa_challengesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_challenges to aggregate.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mfa_challenges
    **/
    _count?: true | Mfa_challengesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mfa_challengesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mfa_challengesMaxAggregateInputType
  }

  export type GetMfa_challengesAggregateType<T extends Mfa_challengesAggregateArgs> = {
        [P in keyof T & keyof AggregateMfa_challenges]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMfa_challenges[P]>
      : GetScalarType<T[P], AggregateMfa_challenges[P]>
  }




  export type mfa_challengesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_challengesWhereInput
    orderBy?: mfa_challengesOrderByWithAggregationInput | mfa_challengesOrderByWithAggregationInput[]
    by: Mfa_challengesScalarFieldEnum[] | Mfa_challengesScalarFieldEnum
    having?: mfa_challengesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mfa_challengesCountAggregateInputType | true
    _min?: Mfa_challengesMinAggregateInputType
    _max?: Mfa_challengesMaxAggregateInputType
  }

  export type Mfa_challengesGroupByOutputType = {
    id: string
    factor_id: string
    created_at: Date
    verified_at: Date | null
    ip_address: string
    _count: Mfa_challengesCountAggregateOutputType | null
    _min: Mfa_challengesMinAggregateOutputType | null
    _max: Mfa_challengesMaxAggregateOutputType | null
  }

  type GetMfa_challengesGroupByPayload<T extends mfa_challengesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mfa_challengesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mfa_challengesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mfa_challengesGroupByOutputType[P]>
            : GetScalarType<T[P], Mfa_challengesGroupByOutputType[P]>
        }
      >
    >


  export type mfa_challengesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    factor_id?: boolean
    created_at?: boolean
    verified_at?: boolean
    ip_address?: boolean
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_challenges"]>

  export type mfa_challengesSelectScalar = {
    id?: boolean
    factor_id?: boolean
    created_at?: boolean
    verified_at?: boolean
    ip_address?: boolean
  }

  export type mfa_challengesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }


  export type $mfa_challengesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mfa_challenges"
    objects: {
      mfa_factors: Prisma.$mfa_factorsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      factor_id: string
      created_at: Date
      verified_at: Date | null
      ip_address: string
    }, ExtArgs["result"]["mfa_challenges"]>
    composites: {}
  }


  type mfa_challengesGetPayload<S extends boolean | null | undefined | mfa_challengesDefaultArgs> = $Result.GetResult<Prisma.$mfa_challengesPayload, S>

  type mfa_challengesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<mfa_challengesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Mfa_challengesCountAggregateInputType | true
    }

  export interface mfa_challengesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mfa_challenges'], meta: { name: 'mfa_challenges' } }
    /**
     * Find zero or one Mfa_challenges that matches the filter.
     * @param {mfa_challengesFindUniqueArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends mfa_challengesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_challengesFindUniqueArgs<ExtArgs>>
    ): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Mfa_challenges that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {mfa_challengesFindUniqueOrThrowArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends mfa_challengesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_challengesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Mfa_challenges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesFindFirstArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends mfa_challengesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_challengesFindFirstArgs<ExtArgs>>
    ): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Mfa_challenges that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesFindFirstOrThrowArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends mfa_challengesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_challengesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Mfa_challenges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findMany()
     * 
     * // Get first 10 Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mfa_challengesWithIdOnly = await prisma.mfa_challenges.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends mfa_challengesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_challengesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Mfa_challenges.
     * @param {mfa_challengesCreateArgs} args - Arguments to create a Mfa_challenges.
     * @example
     * // Create one Mfa_challenges
     * const Mfa_challenges = await prisma.mfa_challenges.create({
     *   data: {
     *     // ... data to create a Mfa_challenges
     *   }
     * })
     * 
    **/
    create<T extends mfa_challengesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_challengesCreateArgs<ExtArgs>>
    ): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Mfa_challenges.
     *     @param {mfa_challengesCreateManyArgs} args - Arguments to create many Mfa_challenges.
     *     @example
     *     // Create many Mfa_challenges
     *     const mfa_challenges = await prisma.mfa_challenges.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends mfa_challengesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_challengesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Mfa_challenges.
     * @param {mfa_challengesDeleteArgs} args - Arguments to delete one Mfa_challenges.
     * @example
     * // Delete one Mfa_challenges
     * const Mfa_challenges = await prisma.mfa_challenges.delete({
     *   where: {
     *     // ... filter to delete one Mfa_challenges
     *   }
     * })
     * 
    **/
    delete<T extends mfa_challengesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_challengesDeleteArgs<ExtArgs>>
    ): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Mfa_challenges.
     * @param {mfa_challengesUpdateArgs} args - Arguments to update one Mfa_challenges.
     * @example
     * // Update one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends mfa_challengesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_challengesUpdateArgs<ExtArgs>>
    ): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Mfa_challenges.
     * @param {mfa_challengesDeleteManyArgs} args - Arguments to filter Mfa_challenges to delete.
     * @example
     * // Delete a few Mfa_challenges
     * const { count } = await prisma.mfa_challenges.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends mfa_challengesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_challengesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends mfa_challengesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_challengesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Mfa_challenges.
     * @param {mfa_challengesUpsertArgs} args - Arguments to update or create a Mfa_challenges.
     * @example
     * // Update or create a Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.upsert({
     *   create: {
     *     // ... data to create a Mfa_challenges
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mfa_challenges we want to update
     *   }
     * })
    **/
    upsert<T extends mfa_challengesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_challengesUpsertArgs<ExtArgs>>
    ): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesCountArgs} args - Arguments to filter Mfa_challenges to count.
     * @example
     * // Count the number of Mfa_challenges
     * const count = await prisma.mfa_challenges.count({
     *   where: {
     *     // ... the filter for the Mfa_challenges we want to count
     *   }
     * })
    **/
    count<T extends mfa_challengesCountArgs>(
      args?: Subset<T, mfa_challengesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mfa_challengesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mfa_challengesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mfa_challengesAggregateArgs>(args: Subset<T, Mfa_challengesAggregateArgs>): Prisma.PrismaPromise<GetMfa_challengesAggregateType<T>>

    /**
     * Group by Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mfa_challengesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mfa_challengesGroupByArgs['orderBy'] }
        : { orderBy?: mfa_challengesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mfa_challengesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMfa_challengesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mfa_challenges model
   */
  readonly fields: mfa_challengesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mfa_challenges.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mfa_challengesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    mfa_factors<T extends mfa_factorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, mfa_factorsDefaultArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the mfa_challenges model
   */ 
  interface mfa_challengesFieldRefs {
    readonly id: FieldRef<"mfa_challenges", 'String'>
    readonly factor_id: FieldRef<"mfa_challenges", 'String'>
    readonly created_at: FieldRef<"mfa_challenges", 'DateTime'>
    readonly verified_at: FieldRef<"mfa_challenges", 'DateTime'>
    readonly ip_address: FieldRef<"mfa_challenges", 'String'>
  }
    

  // Custom InputTypes

  /**
   * mfa_challenges findUnique
   */
  export type mfa_challengesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where: mfa_challengesWhereUniqueInput
  }


  /**
   * mfa_challenges findUniqueOrThrow
   */
  export type mfa_challengesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where: mfa_challengesWhereUniqueInput
  }


  /**
   * mfa_challenges findFirst
   */
  export type mfa_challengesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_challenges.
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_challenges.
     */
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }


  /**
   * mfa_challenges findFirstOrThrow
   */
  export type mfa_challengesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_challenges.
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_challenges.
     */
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }


  /**
   * mfa_challenges findMany
   */
  export type mfa_challengesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mfa_challenges.
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }


  /**
   * mfa_challenges create
   */
  export type mfa_challengesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * The data needed to create a mfa_challenges.
     */
    data: XOR<mfa_challengesCreateInput, mfa_challengesUncheckedCreateInput>
  }


  /**
   * mfa_challenges createMany
   */
  export type mfa_challengesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mfa_challenges.
     */
    data: mfa_challengesCreateManyInput | mfa_challengesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * mfa_challenges update
   */
  export type mfa_challengesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * The data needed to update a mfa_challenges.
     */
    data: XOR<mfa_challengesUpdateInput, mfa_challengesUncheckedUpdateInput>
    /**
     * Choose, which mfa_challenges to update.
     */
    where: mfa_challengesWhereUniqueInput
  }


  /**
   * mfa_challenges updateMany
   */
  export type mfa_challengesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mfa_challenges.
     */
    data: XOR<mfa_challengesUpdateManyMutationInput, mfa_challengesUncheckedUpdateManyInput>
    /**
     * Filter which mfa_challenges to update
     */
    where?: mfa_challengesWhereInput
  }


  /**
   * mfa_challenges upsert
   */
  export type mfa_challengesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * The filter to search for the mfa_challenges to update in case it exists.
     */
    where: mfa_challengesWhereUniqueInput
    /**
     * In case the mfa_challenges found by the `where` argument doesn't exist, create a new mfa_challenges with this data.
     */
    create: XOR<mfa_challengesCreateInput, mfa_challengesUncheckedCreateInput>
    /**
     * In case the mfa_challenges was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mfa_challengesUpdateInput, mfa_challengesUncheckedUpdateInput>
  }


  /**
   * mfa_challenges delete
   */
  export type mfa_challengesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter which mfa_challenges to delete.
     */
    where: mfa_challengesWhereUniqueInput
  }


  /**
   * mfa_challenges deleteMany
   */
  export type mfa_challengesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_challenges to delete
     */
    where?: mfa_challengesWhereInput
  }


  /**
   * mfa_challenges without action
   */
  export type mfa_challengesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
  }



  /**
   * Model mfa_factors
   */

  export type AggregateMfa_factors = {
    _count: Mfa_factorsCountAggregateOutputType | null
    _min: Mfa_factorsMinAggregateOutputType | null
    _max: Mfa_factorsMaxAggregateOutputType | null
  }

  export type Mfa_factorsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    friendly_name: string | null
    factor_type: $Enums.factor_type | null
    status: $Enums.factor_status | null
    created_at: Date | null
    updated_at: Date | null
    secret: string | null
  }

  export type Mfa_factorsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    friendly_name: string | null
    factor_type: $Enums.factor_type | null
    status: $Enums.factor_status | null
    created_at: Date | null
    updated_at: Date | null
    secret: string | null
  }

  export type Mfa_factorsCountAggregateOutputType = {
    id: number
    user_id: number
    friendly_name: number
    factor_type: number
    status: number
    created_at: number
    updated_at: number
    secret: number
    _all: number
  }


  export type Mfa_factorsMinAggregateInputType = {
    id?: true
    user_id?: true
    friendly_name?: true
    factor_type?: true
    status?: true
    created_at?: true
    updated_at?: true
    secret?: true
  }

  export type Mfa_factorsMaxAggregateInputType = {
    id?: true
    user_id?: true
    friendly_name?: true
    factor_type?: true
    status?: true
    created_at?: true
    updated_at?: true
    secret?: true
  }

  export type Mfa_factorsCountAggregateInputType = {
    id?: true
    user_id?: true
    friendly_name?: true
    factor_type?: true
    status?: true
    created_at?: true
    updated_at?: true
    secret?: true
    _all?: true
  }

  export type Mfa_factorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_factors to aggregate.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mfa_factors
    **/
    _count?: true | Mfa_factorsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mfa_factorsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mfa_factorsMaxAggregateInputType
  }

  export type GetMfa_factorsAggregateType<T extends Mfa_factorsAggregateArgs> = {
        [P in keyof T & keyof AggregateMfa_factors]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMfa_factors[P]>
      : GetScalarType<T[P], AggregateMfa_factors[P]>
  }




  export type mfa_factorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_factorsWhereInput
    orderBy?: mfa_factorsOrderByWithAggregationInput | mfa_factorsOrderByWithAggregationInput[]
    by: Mfa_factorsScalarFieldEnum[] | Mfa_factorsScalarFieldEnum
    having?: mfa_factorsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mfa_factorsCountAggregateInputType | true
    _min?: Mfa_factorsMinAggregateInputType
    _max?: Mfa_factorsMaxAggregateInputType
  }

  export type Mfa_factorsGroupByOutputType = {
    id: string
    user_id: string
    friendly_name: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date
    updated_at: Date
    secret: string | null
    _count: Mfa_factorsCountAggregateOutputType | null
    _min: Mfa_factorsMinAggregateOutputType | null
    _max: Mfa_factorsMaxAggregateOutputType | null
  }

  type GetMfa_factorsGroupByPayload<T extends mfa_factorsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mfa_factorsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mfa_factorsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mfa_factorsGroupByOutputType[P]>
            : GetScalarType<T[P], Mfa_factorsGroupByOutputType[P]>
        }
      >
    >


  export type mfa_factorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    friendly_name?: boolean
    factor_type?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    secret?: boolean
    mfa_challenges?: boolean | mfa_factors$mfa_challengesArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | Mfa_factorsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_factors"]>

  export type mfa_factorsSelectScalar = {
    id?: boolean
    user_id?: boolean
    friendly_name?: boolean
    factor_type?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    secret?: boolean
  }

  export type mfa_factorsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_challenges?: boolean | mfa_factors$mfa_challengesArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | Mfa_factorsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $mfa_factorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mfa_factors"
    objects: {
      mfa_challenges: Prisma.$mfa_challengesPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      friendly_name: string | null
      factor_type: $Enums.factor_type
      status: $Enums.factor_status
      created_at: Date
      updated_at: Date
      secret: string | null
    }, ExtArgs["result"]["mfa_factors"]>
    composites: {}
  }


  type mfa_factorsGetPayload<S extends boolean | null | undefined | mfa_factorsDefaultArgs> = $Result.GetResult<Prisma.$mfa_factorsPayload, S>

  type mfa_factorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<mfa_factorsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Mfa_factorsCountAggregateInputType | true
    }

  export interface mfa_factorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mfa_factors'], meta: { name: 'mfa_factors' } }
    /**
     * Find zero or one Mfa_factors that matches the filter.
     * @param {mfa_factorsFindUniqueArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends mfa_factorsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_factorsFindUniqueArgs<ExtArgs>>
    ): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Mfa_factors that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {mfa_factorsFindUniqueOrThrowArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends mfa_factorsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_factorsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Mfa_factors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsFindFirstArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends mfa_factorsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_factorsFindFirstArgs<ExtArgs>>
    ): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Mfa_factors that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsFindFirstOrThrowArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends mfa_factorsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_factorsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Mfa_factors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findMany()
     * 
     * // Get first 10 Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mfa_factorsWithIdOnly = await prisma.mfa_factors.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends mfa_factorsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_factorsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Mfa_factors.
     * @param {mfa_factorsCreateArgs} args - Arguments to create a Mfa_factors.
     * @example
     * // Create one Mfa_factors
     * const Mfa_factors = await prisma.mfa_factors.create({
     *   data: {
     *     // ... data to create a Mfa_factors
     *   }
     * })
     * 
    **/
    create<T extends mfa_factorsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_factorsCreateArgs<ExtArgs>>
    ): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Mfa_factors.
     *     @param {mfa_factorsCreateManyArgs} args - Arguments to create many Mfa_factors.
     *     @example
     *     // Create many Mfa_factors
     *     const mfa_factors = await prisma.mfa_factors.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends mfa_factorsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_factorsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Mfa_factors.
     * @param {mfa_factorsDeleteArgs} args - Arguments to delete one Mfa_factors.
     * @example
     * // Delete one Mfa_factors
     * const Mfa_factors = await prisma.mfa_factors.delete({
     *   where: {
     *     // ... filter to delete one Mfa_factors
     *   }
     * })
     * 
    **/
    delete<T extends mfa_factorsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_factorsDeleteArgs<ExtArgs>>
    ): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Mfa_factors.
     * @param {mfa_factorsUpdateArgs} args - Arguments to update one Mfa_factors.
     * @example
     * // Update one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends mfa_factorsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_factorsUpdateArgs<ExtArgs>>
    ): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Mfa_factors.
     * @param {mfa_factorsDeleteManyArgs} args - Arguments to filter Mfa_factors to delete.
     * @example
     * // Delete a few Mfa_factors
     * const { count } = await prisma.mfa_factors.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends mfa_factorsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, mfa_factorsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends mfa_factorsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_factorsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Mfa_factors.
     * @param {mfa_factorsUpsertArgs} args - Arguments to update or create a Mfa_factors.
     * @example
     * // Update or create a Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.upsert({
     *   create: {
     *     // ... data to create a Mfa_factors
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mfa_factors we want to update
     *   }
     * })
    **/
    upsert<T extends mfa_factorsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, mfa_factorsUpsertArgs<ExtArgs>>
    ): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsCountArgs} args - Arguments to filter Mfa_factors to count.
     * @example
     * // Count the number of Mfa_factors
     * const count = await prisma.mfa_factors.count({
     *   where: {
     *     // ... the filter for the Mfa_factors we want to count
     *   }
     * })
    **/
    count<T extends mfa_factorsCountArgs>(
      args?: Subset<T, mfa_factorsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mfa_factorsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mfa_factorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mfa_factorsAggregateArgs>(args: Subset<T, Mfa_factorsAggregateArgs>): Prisma.PrismaPromise<GetMfa_factorsAggregateType<T>>

    /**
     * Group by Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mfa_factorsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mfa_factorsGroupByArgs['orderBy'] }
        : { orderBy?: mfa_factorsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mfa_factorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMfa_factorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mfa_factors model
   */
  readonly fields: mfa_factorsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mfa_factors.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mfa_factorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    mfa_challenges<T extends mfa_factors$mfa_challengesArgs<ExtArgs> = {}>(args?: Subset<T, mfa_factors$mfa_challengesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, 'findMany'> | Null>;

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the mfa_factors model
   */ 
  interface mfa_factorsFieldRefs {
    readonly id: FieldRef<"mfa_factors", 'String'>
    readonly user_id: FieldRef<"mfa_factors", 'String'>
    readonly friendly_name: FieldRef<"mfa_factors", 'String'>
    readonly factor_type: FieldRef<"mfa_factors", 'factor_type'>
    readonly status: FieldRef<"mfa_factors", 'factor_status'>
    readonly created_at: FieldRef<"mfa_factors", 'DateTime'>
    readonly updated_at: FieldRef<"mfa_factors", 'DateTime'>
    readonly secret: FieldRef<"mfa_factors", 'String'>
  }
    

  // Custom InputTypes

  /**
   * mfa_factors findUnique
   */
  export type mfa_factorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where: mfa_factorsWhereUniqueInput
  }


  /**
   * mfa_factors findUniqueOrThrow
   */
  export type mfa_factorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where: mfa_factorsWhereUniqueInput
  }


  /**
   * mfa_factors findFirst
   */
  export type mfa_factorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_factors.
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_factors.
     */
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }


  /**
   * mfa_factors findFirstOrThrow
   */
  export type mfa_factorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_factors.
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_factors.
     */
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }


  /**
   * mfa_factors findMany
   */
  export type mfa_factorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mfa_factors.
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }


  /**
   * mfa_factors create
   */
  export type mfa_factorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * The data needed to create a mfa_factors.
     */
    data: XOR<mfa_factorsCreateInput, mfa_factorsUncheckedCreateInput>
  }


  /**
   * mfa_factors createMany
   */
  export type mfa_factorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mfa_factors.
     */
    data: mfa_factorsCreateManyInput | mfa_factorsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * mfa_factors update
   */
  export type mfa_factorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * The data needed to update a mfa_factors.
     */
    data: XOR<mfa_factorsUpdateInput, mfa_factorsUncheckedUpdateInput>
    /**
     * Choose, which mfa_factors to update.
     */
    where: mfa_factorsWhereUniqueInput
  }


  /**
   * mfa_factors updateMany
   */
  export type mfa_factorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mfa_factors.
     */
    data: XOR<mfa_factorsUpdateManyMutationInput, mfa_factorsUncheckedUpdateManyInput>
    /**
     * Filter which mfa_factors to update
     */
    where?: mfa_factorsWhereInput
  }


  /**
   * mfa_factors upsert
   */
  export type mfa_factorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * The filter to search for the mfa_factors to update in case it exists.
     */
    where: mfa_factorsWhereUniqueInput
    /**
     * In case the mfa_factors found by the `where` argument doesn't exist, create a new mfa_factors with this data.
     */
    create: XOR<mfa_factorsCreateInput, mfa_factorsUncheckedCreateInput>
    /**
     * In case the mfa_factors was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mfa_factorsUpdateInput, mfa_factorsUncheckedUpdateInput>
  }


  /**
   * mfa_factors delete
   */
  export type mfa_factorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter which mfa_factors to delete.
     */
    where: mfa_factorsWhereUniqueInput
  }


  /**
   * mfa_factors deleteMany
   */
  export type mfa_factorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_factors to delete
     */
    where?: mfa_factorsWhereInput
  }


  /**
   * mfa_factors.mfa_challenges
   */
  export type mfa_factors$mfa_challengesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    where?: mfa_challengesWhereInput
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    cursor?: mfa_challengesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }


  /**
   * mfa_factors without action
   */
  export type mfa_factorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
  }



  /**
   * Model refresh_tokens
   */

  export type AggregateRefresh_tokens = {
    _count: Refresh_tokensCountAggregateOutputType | null
    _avg: Refresh_tokensAvgAggregateOutputType | null
    _sum: Refresh_tokensSumAggregateOutputType | null
    _min: Refresh_tokensMinAggregateOutputType | null
    _max: Refresh_tokensMaxAggregateOutputType | null
  }

  export type Refresh_tokensAvgAggregateOutputType = {
    id: number | null
  }

  export type Refresh_tokensSumAggregateOutputType = {
    id: bigint | null
  }

  export type Refresh_tokensMinAggregateOutputType = {
    instance_id: string | null
    id: bigint | null
    token: string | null
    user_id: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    parent: string | null
    session_id: string | null
  }

  export type Refresh_tokensMaxAggregateOutputType = {
    instance_id: string | null
    id: bigint | null
    token: string | null
    user_id: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    parent: string | null
    session_id: string | null
  }

  export type Refresh_tokensCountAggregateOutputType = {
    instance_id: number
    id: number
    token: number
    user_id: number
    revoked: number
    created_at: number
    updated_at: number
    parent: number
    session_id: number
    _all: number
  }


  export type Refresh_tokensAvgAggregateInputType = {
    id?: true
  }

  export type Refresh_tokensSumAggregateInputType = {
    id?: true
  }

  export type Refresh_tokensMinAggregateInputType = {
    instance_id?: true
    id?: true
    token?: true
    user_id?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    parent?: true
    session_id?: true
  }

  export type Refresh_tokensMaxAggregateInputType = {
    instance_id?: true
    id?: true
    token?: true
    user_id?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    parent?: true
    session_id?: true
  }

  export type Refresh_tokensCountAggregateInputType = {
    instance_id?: true
    id?: true
    token?: true
    user_id?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    parent?: true
    session_id?: true
    _all?: true
  }

  export type Refresh_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refresh_tokens to aggregate.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned refresh_tokens
    **/
    _count?: true | Refresh_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Refresh_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Refresh_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Refresh_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Refresh_tokensMaxAggregateInputType
  }

  export type GetRefresh_tokensAggregateType<T extends Refresh_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateRefresh_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefresh_tokens[P]>
      : GetScalarType<T[P], AggregateRefresh_tokens[P]>
  }




  export type refresh_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refresh_tokensWhereInput
    orderBy?: refresh_tokensOrderByWithAggregationInput | refresh_tokensOrderByWithAggregationInput[]
    by: Refresh_tokensScalarFieldEnum[] | Refresh_tokensScalarFieldEnum
    having?: refresh_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Refresh_tokensCountAggregateInputType | true
    _avg?: Refresh_tokensAvgAggregateInputType
    _sum?: Refresh_tokensSumAggregateInputType
    _min?: Refresh_tokensMinAggregateInputType
    _max?: Refresh_tokensMaxAggregateInputType
  }

  export type Refresh_tokensGroupByOutputType = {
    instance_id: string | null
    id: bigint
    token: string | null
    user_id: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    parent: string | null
    session_id: string | null
    _count: Refresh_tokensCountAggregateOutputType | null
    _avg: Refresh_tokensAvgAggregateOutputType | null
    _sum: Refresh_tokensSumAggregateOutputType | null
    _min: Refresh_tokensMinAggregateOutputType | null
    _max: Refresh_tokensMaxAggregateOutputType | null
  }

  type GetRefresh_tokensGroupByPayload<T extends refresh_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Refresh_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Refresh_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Refresh_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Refresh_tokensGroupByOutputType[P]>
        }
      >
    >


  export type refresh_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    token?: boolean
    user_id?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean
    session_id?: boolean
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }, ExtArgs["result"]["refresh_tokens"]>

  export type refresh_tokensSelectScalar = {
    instance_id?: boolean
    id?: boolean
    token?: boolean
    user_id?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean
    session_id?: boolean
  }

  export type refresh_tokensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }


  export type $refresh_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "refresh_tokens"
    objects: {
      sessions: Prisma.$sessionsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      instance_id: string | null
      id: bigint
      token: string | null
      user_id: string | null
      revoked: boolean | null
      created_at: Date | null
      updated_at: Date | null
      parent: string | null
      session_id: string | null
    }, ExtArgs["result"]["refresh_tokens"]>
    composites: {}
  }


  type refresh_tokensGetPayload<S extends boolean | null | undefined | refresh_tokensDefaultArgs> = $Result.GetResult<Prisma.$refresh_tokensPayload, S>

  type refresh_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<refresh_tokensFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Refresh_tokensCountAggregateInputType | true
    }

  export interface refresh_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['refresh_tokens'], meta: { name: 'refresh_tokens' } }
    /**
     * Find zero or one Refresh_tokens that matches the filter.
     * @param {refresh_tokensFindUniqueArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends refresh_tokensFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, refresh_tokensFindUniqueArgs<ExtArgs>>
    ): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Refresh_tokens that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {refresh_tokensFindUniqueOrThrowArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends refresh_tokensFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, refresh_tokensFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Refresh_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindFirstArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends refresh_tokensFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, refresh_tokensFindFirstArgs<ExtArgs>>
    ): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Refresh_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindFirstOrThrowArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends refresh_tokensFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, refresh_tokensFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Refresh_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findMany()
     * 
     * // Get first 10 Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findMany({ take: 10 })
     * 
     * // Only select the `instance_id`
     * const refresh_tokensWithInstance_idOnly = await prisma.refresh_tokens.findMany({ select: { instance_id: true } })
     * 
    **/
    findMany<T extends refresh_tokensFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, refresh_tokensFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Refresh_tokens.
     * @param {refresh_tokensCreateArgs} args - Arguments to create a Refresh_tokens.
     * @example
     * // Create one Refresh_tokens
     * const Refresh_tokens = await prisma.refresh_tokens.create({
     *   data: {
     *     // ... data to create a Refresh_tokens
     *   }
     * })
     * 
    **/
    create<T extends refresh_tokensCreateArgs<ExtArgs>>(
      args: SelectSubset<T, refresh_tokensCreateArgs<ExtArgs>>
    ): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Refresh_tokens.
     *     @param {refresh_tokensCreateManyArgs} args - Arguments to create many Refresh_tokens.
     *     @example
     *     // Create many Refresh_tokens
     *     const refresh_tokens = await prisma.refresh_tokens.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends refresh_tokensCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, refresh_tokensCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Refresh_tokens.
     * @param {refresh_tokensDeleteArgs} args - Arguments to delete one Refresh_tokens.
     * @example
     * // Delete one Refresh_tokens
     * const Refresh_tokens = await prisma.refresh_tokens.delete({
     *   where: {
     *     // ... filter to delete one Refresh_tokens
     *   }
     * })
     * 
    **/
    delete<T extends refresh_tokensDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, refresh_tokensDeleteArgs<ExtArgs>>
    ): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Refresh_tokens.
     * @param {refresh_tokensUpdateArgs} args - Arguments to update one Refresh_tokens.
     * @example
     * // Update one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends refresh_tokensUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, refresh_tokensUpdateArgs<ExtArgs>>
    ): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Refresh_tokens.
     * @param {refresh_tokensDeleteManyArgs} args - Arguments to filter Refresh_tokens to delete.
     * @example
     * // Delete a few Refresh_tokens
     * const { count } = await prisma.refresh_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends refresh_tokensDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, refresh_tokensDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends refresh_tokensUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, refresh_tokensUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Refresh_tokens.
     * @param {refresh_tokensUpsertArgs} args - Arguments to update or create a Refresh_tokens.
     * @example
     * // Update or create a Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.upsert({
     *   create: {
     *     // ... data to create a Refresh_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Refresh_tokens we want to update
     *   }
     * })
    **/
    upsert<T extends refresh_tokensUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, refresh_tokensUpsertArgs<ExtArgs>>
    ): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensCountArgs} args - Arguments to filter Refresh_tokens to count.
     * @example
     * // Count the number of Refresh_tokens
     * const count = await prisma.refresh_tokens.count({
     *   where: {
     *     // ... the filter for the Refresh_tokens we want to count
     *   }
     * })
    **/
    count<T extends refresh_tokensCountArgs>(
      args?: Subset<T, refresh_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Refresh_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Refresh_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Refresh_tokensAggregateArgs>(args: Subset<T, Refresh_tokensAggregateArgs>): Prisma.PrismaPromise<GetRefresh_tokensAggregateType<T>>

    /**
     * Group by Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends refresh_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: refresh_tokensGroupByArgs['orderBy'] }
        : { orderBy?: refresh_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, refresh_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefresh_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the refresh_tokens model
   */
  readonly fields: refresh_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for refresh_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__refresh_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    sessions<T extends refresh_tokens$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, refresh_tokens$sessionsArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the refresh_tokens model
   */ 
  interface refresh_tokensFieldRefs {
    readonly instance_id: FieldRef<"refresh_tokens", 'String'>
    readonly id: FieldRef<"refresh_tokens", 'BigInt'>
    readonly token: FieldRef<"refresh_tokens", 'String'>
    readonly user_id: FieldRef<"refresh_tokens", 'String'>
    readonly revoked: FieldRef<"refresh_tokens", 'Boolean'>
    readonly created_at: FieldRef<"refresh_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"refresh_tokens", 'DateTime'>
    readonly parent: FieldRef<"refresh_tokens", 'String'>
    readonly session_id: FieldRef<"refresh_tokens", 'String'>
  }
    

  // Custom InputTypes

  /**
   * refresh_tokens findUnique
   */
  export type refresh_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where: refresh_tokensWhereUniqueInput
  }


  /**
   * refresh_tokens findUniqueOrThrow
   */
  export type refresh_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where: refresh_tokensWhereUniqueInput
  }


  /**
   * refresh_tokens findFirst
   */
  export type refresh_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refresh_tokens.
     */
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }


  /**
   * refresh_tokens findFirstOrThrow
   */
  export type refresh_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refresh_tokens.
     */
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }


  /**
   * refresh_tokens findMany
   */
  export type refresh_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }


  /**
   * refresh_tokens create
   */
  export type refresh_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The data needed to create a refresh_tokens.
     */
    data?: XOR<refresh_tokensCreateInput, refresh_tokensUncheckedCreateInput>
  }


  /**
   * refresh_tokens createMany
   */
  export type refresh_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many refresh_tokens.
     */
    data: refresh_tokensCreateManyInput | refresh_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * refresh_tokens update
   */
  export type refresh_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The data needed to update a refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateInput, refresh_tokensUncheckedUpdateInput>
    /**
     * Choose, which refresh_tokens to update.
     */
    where: refresh_tokensWhereUniqueInput
  }


  /**
   * refresh_tokens updateMany
   */
  export type refresh_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyInput>
    /**
     * Filter which refresh_tokens to update
     */
    where?: refresh_tokensWhereInput
  }


  /**
   * refresh_tokens upsert
   */
  export type refresh_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The filter to search for the refresh_tokens to update in case it exists.
     */
    where: refresh_tokensWhereUniqueInput
    /**
     * In case the refresh_tokens found by the `where` argument doesn't exist, create a new refresh_tokens with this data.
     */
    create: XOR<refresh_tokensCreateInput, refresh_tokensUncheckedCreateInput>
    /**
     * In case the refresh_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<refresh_tokensUpdateInput, refresh_tokensUncheckedUpdateInput>
  }


  /**
   * refresh_tokens delete
   */
  export type refresh_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter which refresh_tokens to delete.
     */
    where: refresh_tokensWhereUniqueInput
  }


  /**
   * refresh_tokens deleteMany
   */
  export type refresh_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refresh_tokens to delete
     */
    where?: refresh_tokensWhereInput
  }


  /**
   * refresh_tokens.sessions
   */
  export type refresh_tokens$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    where?: sessionsWhereInput
  }


  /**
   * refresh_tokens without action
   */
  export type refresh_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
  }



  /**
   * Model saml_providers
   */

  export type AggregateSaml_providers = {
    _count: Saml_providersCountAggregateOutputType | null
    _min: Saml_providersMinAggregateOutputType | null
    _max: Saml_providersMaxAggregateOutputType | null
  }

  export type Saml_providersMinAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    entity_id: string | null
    metadata_xml: string | null
    metadata_url: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Saml_providersMaxAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    entity_id: string | null
    metadata_xml: string | null
    metadata_url: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Saml_providersCountAggregateOutputType = {
    id: number
    sso_provider_id: number
    entity_id: number
    metadata_xml: number
    metadata_url: number
    attribute_mapping: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Saml_providersMinAggregateInputType = {
    id?: true
    sso_provider_id?: true
    entity_id?: true
    metadata_xml?: true
    metadata_url?: true
    created_at?: true
    updated_at?: true
  }

  export type Saml_providersMaxAggregateInputType = {
    id?: true
    sso_provider_id?: true
    entity_id?: true
    metadata_xml?: true
    metadata_url?: true
    created_at?: true
    updated_at?: true
  }

  export type Saml_providersCountAggregateInputType = {
    id?: true
    sso_provider_id?: true
    entity_id?: true
    metadata_xml?: true
    metadata_url?: true
    attribute_mapping?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Saml_providersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_providers to aggregate.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned saml_providers
    **/
    _count?: true | Saml_providersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Saml_providersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Saml_providersMaxAggregateInputType
  }

  export type GetSaml_providersAggregateType<T extends Saml_providersAggregateArgs> = {
        [P in keyof T & keyof AggregateSaml_providers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSaml_providers[P]>
      : GetScalarType<T[P], AggregateSaml_providers[P]>
  }




  export type saml_providersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_providersWhereInput
    orderBy?: saml_providersOrderByWithAggregationInput | saml_providersOrderByWithAggregationInput[]
    by: Saml_providersScalarFieldEnum[] | Saml_providersScalarFieldEnum
    having?: saml_providersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Saml_providersCountAggregateInputType | true
    _min?: Saml_providersMinAggregateInputType
    _max?: Saml_providersMaxAggregateInputType
  }

  export type Saml_providersGroupByOutputType = {
    id: string
    sso_provider_id: string
    entity_id: string
    metadata_xml: string
    metadata_url: string | null
    attribute_mapping: JsonValue | null
    created_at: Date | null
    updated_at: Date | null
    _count: Saml_providersCountAggregateOutputType | null
    _min: Saml_providersMinAggregateOutputType | null
    _max: Saml_providersMaxAggregateOutputType | null
  }

  type GetSaml_providersGroupByPayload<T extends saml_providersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Saml_providersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Saml_providersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Saml_providersGroupByOutputType[P]>
            : GetScalarType<T[P], Saml_providersGroupByOutputType[P]>
        }
      >
    >


  export type saml_providersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    entity_id?: boolean
    metadata_xml?: boolean
    metadata_url?: boolean
    attribute_mapping?: boolean
    created_at?: boolean
    updated_at?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_providers"]>

  export type saml_providersSelectScalar = {
    id?: boolean
    sso_provider_id?: boolean
    entity_id?: boolean
    metadata_xml?: boolean
    metadata_url?: boolean
    attribute_mapping?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type saml_providersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }


  export type $saml_providersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "saml_providers"
    objects: {
      sso_providers: Prisma.$sso_providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sso_provider_id: string
      entity_id: string
      metadata_xml: string
      metadata_url: string | null
      attribute_mapping: Prisma.JsonValue | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["saml_providers"]>
    composites: {}
  }


  type saml_providersGetPayload<S extends boolean | null | undefined | saml_providersDefaultArgs> = $Result.GetResult<Prisma.$saml_providersPayload, S>

  type saml_providersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<saml_providersFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Saml_providersCountAggregateInputType | true
    }

  export interface saml_providersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['saml_providers'], meta: { name: 'saml_providers' } }
    /**
     * Find zero or one Saml_providers that matches the filter.
     * @param {saml_providersFindUniqueArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends saml_providersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, saml_providersFindUniqueArgs<ExtArgs>>
    ): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Saml_providers that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {saml_providersFindUniqueOrThrowArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends saml_providersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_providersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Saml_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersFindFirstArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends saml_providersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_providersFindFirstArgs<ExtArgs>>
    ): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Saml_providers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersFindFirstOrThrowArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends saml_providersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_providersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Saml_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Saml_providers
     * const saml_providers = await prisma.saml_providers.findMany()
     * 
     * // Get first 10 Saml_providers
     * const saml_providers = await prisma.saml_providers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const saml_providersWithIdOnly = await prisma.saml_providers.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends saml_providersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_providersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Saml_providers.
     * @param {saml_providersCreateArgs} args - Arguments to create a Saml_providers.
     * @example
     * // Create one Saml_providers
     * const Saml_providers = await prisma.saml_providers.create({
     *   data: {
     *     // ... data to create a Saml_providers
     *   }
     * })
     * 
    **/
    create<T extends saml_providersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, saml_providersCreateArgs<ExtArgs>>
    ): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Saml_providers.
     *     @param {saml_providersCreateManyArgs} args - Arguments to create many Saml_providers.
     *     @example
     *     // Create many Saml_providers
     *     const saml_providers = await prisma.saml_providers.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends saml_providersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_providersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Saml_providers.
     * @param {saml_providersDeleteArgs} args - Arguments to delete one Saml_providers.
     * @example
     * // Delete one Saml_providers
     * const Saml_providers = await prisma.saml_providers.delete({
     *   where: {
     *     // ... filter to delete one Saml_providers
     *   }
     * })
     * 
    **/
    delete<T extends saml_providersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, saml_providersDeleteArgs<ExtArgs>>
    ): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Saml_providers.
     * @param {saml_providersUpdateArgs} args - Arguments to update one Saml_providers.
     * @example
     * // Update one Saml_providers
     * const saml_providers = await prisma.saml_providers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends saml_providersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, saml_providersUpdateArgs<ExtArgs>>
    ): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Saml_providers.
     * @param {saml_providersDeleteManyArgs} args - Arguments to filter Saml_providers to delete.
     * @example
     * // Delete a few Saml_providers
     * const { count } = await prisma.saml_providers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends saml_providersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_providersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Saml_providers
     * const saml_providers = await prisma.saml_providers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends saml_providersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, saml_providersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Saml_providers.
     * @param {saml_providersUpsertArgs} args - Arguments to update or create a Saml_providers.
     * @example
     * // Update or create a Saml_providers
     * const saml_providers = await prisma.saml_providers.upsert({
     *   create: {
     *     // ... data to create a Saml_providers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Saml_providers we want to update
     *   }
     * })
    **/
    upsert<T extends saml_providersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, saml_providersUpsertArgs<ExtArgs>>
    ): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersCountArgs} args - Arguments to filter Saml_providers to count.
     * @example
     * // Count the number of Saml_providers
     * const count = await prisma.saml_providers.count({
     *   where: {
     *     // ... the filter for the Saml_providers we want to count
     *   }
     * })
    **/
    count<T extends saml_providersCountArgs>(
      args?: Subset<T, saml_providersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Saml_providersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Saml_providersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Saml_providersAggregateArgs>(args: Subset<T, Saml_providersAggregateArgs>): Prisma.PrismaPromise<GetSaml_providersAggregateType<T>>

    /**
     * Group by Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends saml_providersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: saml_providersGroupByArgs['orderBy'] }
        : { orderBy?: saml_providersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, saml_providersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSaml_providersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the saml_providers model
   */
  readonly fields: saml_providersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for saml_providers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__saml_providersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    sso_providers<T extends sso_providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sso_providersDefaultArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the saml_providers model
   */ 
  interface saml_providersFieldRefs {
    readonly id: FieldRef<"saml_providers", 'String'>
    readonly sso_provider_id: FieldRef<"saml_providers", 'String'>
    readonly entity_id: FieldRef<"saml_providers", 'String'>
    readonly metadata_xml: FieldRef<"saml_providers", 'String'>
    readonly metadata_url: FieldRef<"saml_providers", 'String'>
    readonly attribute_mapping: FieldRef<"saml_providers", 'Json'>
    readonly created_at: FieldRef<"saml_providers", 'DateTime'>
    readonly updated_at: FieldRef<"saml_providers", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * saml_providers findUnique
   */
  export type saml_providersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where: saml_providersWhereUniqueInput
  }


  /**
   * saml_providers findUniqueOrThrow
   */
  export type saml_providersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where: saml_providersWhereUniqueInput
  }


  /**
   * saml_providers findFirst
   */
  export type saml_providersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_providers.
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_providers.
     */
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }


  /**
   * saml_providers findFirstOrThrow
   */
  export type saml_providersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_providers.
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_providers.
     */
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }


  /**
   * saml_providers findMany
   */
  export type saml_providersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing saml_providers.
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }


  /**
   * saml_providers create
   */
  export type saml_providersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * The data needed to create a saml_providers.
     */
    data: XOR<saml_providersCreateInput, saml_providersUncheckedCreateInput>
  }


  /**
   * saml_providers createMany
   */
  export type saml_providersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many saml_providers.
     */
    data: saml_providersCreateManyInput | saml_providersCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * saml_providers update
   */
  export type saml_providersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * The data needed to update a saml_providers.
     */
    data: XOR<saml_providersUpdateInput, saml_providersUncheckedUpdateInput>
    /**
     * Choose, which saml_providers to update.
     */
    where: saml_providersWhereUniqueInput
  }


  /**
   * saml_providers updateMany
   */
  export type saml_providersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update saml_providers.
     */
    data: XOR<saml_providersUpdateManyMutationInput, saml_providersUncheckedUpdateManyInput>
    /**
     * Filter which saml_providers to update
     */
    where?: saml_providersWhereInput
  }


  /**
   * saml_providers upsert
   */
  export type saml_providersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * The filter to search for the saml_providers to update in case it exists.
     */
    where: saml_providersWhereUniqueInput
    /**
     * In case the saml_providers found by the `where` argument doesn't exist, create a new saml_providers with this data.
     */
    create: XOR<saml_providersCreateInput, saml_providersUncheckedCreateInput>
    /**
     * In case the saml_providers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<saml_providersUpdateInput, saml_providersUncheckedUpdateInput>
  }


  /**
   * saml_providers delete
   */
  export type saml_providersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter which saml_providers to delete.
     */
    where: saml_providersWhereUniqueInput
  }


  /**
   * saml_providers deleteMany
   */
  export type saml_providersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_providers to delete
     */
    where?: saml_providersWhereInput
  }


  /**
   * saml_providers without action
   */
  export type saml_providersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
  }



  /**
   * Model saml_relay_states
   */

  export type AggregateSaml_relay_states = {
    _count: Saml_relay_statesCountAggregateOutputType | null
    _min: Saml_relay_statesMinAggregateOutputType | null
    _max: Saml_relay_statesMaxAggregateOutputType | null
  }

  export type Saml_relay_statesMinAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    request_id: string | null
    for_email: string | null
    redirect_to: string | null
    from_ip_address: string | null
    created_at: Date | null
    updated_at: Date | null
    flow_state_id: string | null
  }

  export type Saml_relay_statesMaxAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    request_id: string | null
    for_email: string | null
    redirect_to: string | null
    from_ip_address: string | null
    created_at: Date | null
    updated_at: Date | null
    flow_state_id: string | null
  }

  export type Saml_relay_statesCountAggregateOutputType = {
    id: number
    sso_provider_id: number
    request_id: number
    for_email: number
    redirect_to: number
    from_ip_address: number
    created_at: number
    updated_at: number
    flow_state_id: number
    _all: number
  }


  export type Saml_relay_statesMinAggregateInputType = {
    id?: true
    sso_provider_id?: true
    request_id?: true
    for_email?: true
    redirect_to?: true
    from_ip_address?: true
    created_at?: true
    updated_at?: true
    flow_state_id?: true
  }

  export type Saml_relay_statesMaxAggregateInputType = {
    id?: true
    sso_provider_id?: true
    request_id?: true
    for_email?: true
    redirect_to?: true
    from_ip_address?: true
    created_at?: true
    updated_at?: true
    flow_state_id?: true
  }

  export type Saml_relay_statesCountAggregateInputType = {
    id?: true
    sso_provider_id?: true
    request_id?: true
    for_email?: true
    redirect_to?: true
    from_ip_address?: true
    created_at?: true
    updated_at?: true
    flow_state_id?: true
    _all?: true
  }

  export type Saml_relay_statesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_relay_states to aggregate.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned saml_relay_states
    **/
    _count?: true | Saml_relay_statesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Saml_relay_statesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Saml_relay_statesMaxAggregateInputType
  }

  export type GetSaml_relay_statesAggregateType<T extends Saml_relay_statesAggregateArgs> = {
        [P in keyof T & keyof AggregateSaml_relay_states]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSaml_relay_states[P]>
      : GetScalarType<T[P], AggregateSaml_relay_states[P]>
  }




  export type saml_relay_statesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_relay_statesWhereInput
    orderBy?: saml_relay_statesOrderByWithAggregationInput | saml_relay_statesOrderByWithAggregationInput[]
    by: Saml_relay_statesScalarFieldEnum[] | Saml_relay_statesScalarFieldEnum
    having?: saml_relay_statesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Saml_relay_statesCountAggregateInputType | true
    _min?: Saml_relay_statesMinAggregateInputType
    _max?: Saml_relay_statesMaxAggregateInputType
  }

  export type Saml_relay_statesGroupByOutputType = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email: string | null
    redirect_to: string | null
    from_ip_address: string | null
    created_at: Date | null
    updated_at: Date | null
    flow_state_id: string | null
    _count: Saml_relay_statesCountAggregateOutputType | null
    _min: Saml_relay_statesMinAggregateOutputType | null
    _max: Saml_relay_statesMaxAggregateOutputType | null
  }

  type GetSaml_relay_statesGroupByPayload<T extends saml_relay_statesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Saml_relay_statesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Saml_relay_statesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Saml_relay_statesGroupByOutputType[P]>
            : GetScalarType<T[P], Saml_relay_statesGroupByOutputType[P]>
        }
      >
    >


  export type saml_relay_statesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    request_id?: boolean
    for_email?: boolean
    redirect_to?: boolean
    from_ip_address?: boolean
    created_at?: boolean
    updated_at?: boolean
    flow_state_id?: boolean
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_relay_states"]>

  export type saml_relay_statesSelectScalar = {
    id?: boolean
    sso_provider_id?: boolean
    request_id?: boolean
    for_email?: boolean
    redirect_to?: boolean
    from_ip_address?: boolean
    created_at?: boolean
    updated_at?: boolean
    flow_state_id?: boolean
  }

  export type saml_relay_statesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }


  export type $saml_relay_statesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "saml_relay_states"
    objects: {
      flow_state: Prisma.$flow_statePayload<ExtArgs> | null
      sso_providers: Prisma.$sso_providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sso_provider_id: string
      request_id: string
      for_email: string | null
      redirect_to: string | null
      from_ip_address: string | null
      created_at: Date | null
      updated_at: Date | null
      flow_state_id: string | null
    }, ExtArgs["result"]["saml_relay_states"]>
    composites: {}
  }


  type saml_relay_statesGetPayload<S extends boolean | null | undefined | saml_relay_statesDefaultArgs> = $Result.GetResult<Prisma.$saml_relay_statesPayload, S>

  type saml_relay_statesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<saml_relay_statesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Saml_relay_statesCountAggregateInputType | true
    }

  export interface saml_relay_statesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['saml_relay_states'], meta: { name: 'saml_relay_states' } }
    /**
     * Find zero or one Saml_relay_states that matches the filter.
     * @param {saml_relay_statesFindUniqueArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends saml_relay_statesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, saml_relay_statesFindUniqueArgs<ExtArgs>>
    ): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Saml_relay_states that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {saml_relay_statesFindUniqueOrThrowArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends saml_relay_statesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_relay_statesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Saml_relay_states that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesFindFirstArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends saml_relay_statesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_relay_statesFindFirstArgs<ExtArgs>>
    ): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Saml_relay_states that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesFindFirstOrThrowArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends saml_relay_statesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_relay_statesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Saml_relay_states that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findMany()
     * 
     * // Get first 10 Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const saml_relay_statesWithIdOnly = await prisma.saml_relay_states.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends saml_relay_statesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_relay_statesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Saml_relay_states.
     * @param {saml_relay_statesCreateArgs} args - Arguments to create a Saml_relay_states.
     * @example
     * // Create one Saml_relay_states
     * const Saml_relay_states = await prisma.saml_relay_states.create({
     *   data: {
     *     // ... data to create a Saml_relay_states
     *   }
     * })
     * 
    **/
    create<T extends saml_relay_statesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, saml_relay_statesCreateArgs<ExtArgs>>
    ): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Saml_relay_states.
     *     @param {saml_relay_statesCreateManyArgs} args - Arguments to create many Saml_relay_states.
     *     @example
     *     // Create many Saml_relay_states
     *     const saml_relay_states = await prisma.saml_relay_states.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends saml_relay_statesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_relay_statesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Saml_relay_states.
     * @param {saml_relay_statesDeleteArgs} args - Arguments to delete one Saml_relay_states.
     * @example
     * // Delete one Saml_relay_states
     * const Saml_relay_states = await prisma.saml_relay_states.delete({
     *   where: {
     *     // ... filter to delete one Saml_relay_states
     *   }
     * })
     * 
    **/
    delete<T extends saml_relay_statesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, saml_relay_statesDeleteArgs<ExtArgs>>
    ): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Saml_relay_states.
     * @param {saml_relay_statesUpdateArgs} args - Arguments to update one Saml_relay_states.
     * @example
     * // Update one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends saml_relay_statesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, saml_relay_statesUpdateArgs<ExtArgs>>
    ): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Saml_relay_states.
     * @param {saml_relay_statesDeleteManyArgs} args - Arguments to filter Saml_relay_states to delete.
     * @example
     * // Delete a few Saml_relay_states
     * const { count } = await prisma.saml_relay_states.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends saml_relay_statesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, saml_relay_statesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends saml_relay_statesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, saml_relay_statesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Saml_relay_states.
     * @param {saml_relay_statesUpsertArgs} args - Arguments to update or create a Saml_relay_states.
     * @example
     * // Update or create a Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.upsert({
     *   create: {
     *     // ... data to create a Saml_relay_states
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Saml_relay_states we want to update
     *   }
     * })
    **/
    upsert<T extends saml_relay_statesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, saml_relay_statesUpsertArgs<ExtArgs>>
    ): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesCountArgs} args - Arguments to filter Saml_relay_states to count.
     * @example
     * // Count the number of Saml_relay_states
     * const count = await prisma.saml_relay_states.count({
     *   where: {
     *     // ... the filter for the Saml_relay_states we want to count
     *   }
     * })
    **/
    count<T extends saml_relay_statesCountArgs>(
      args?: Subset<T, saml_relay_statesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Saml_relay_statesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Saml_relay_statesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Saml_relay_statesAggregateArgs>(args: Subset<T, Saml_relay_statesAggregateArgs>): Prisma.PrismaPromise<GetSaml_relay_statesAggregateType<T>>

    /**
     * Group by Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends saml_relay_statesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: saml_relay_statesGroupByArgs['orderBy'] }
        : { orderBy?: saml_relay_statesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, saml_relay_statesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSaml_relay_statesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the saml_relay_states model
   */
  readonly fields: saml_relay_statesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for saml_relay_states.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__saml_relay_statesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    flow_state<T extends saml_relay_states$flow_stateArgs<ExtArgs> = {}>(args?: Subset<T, saml_relay_states$flow_stateArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    sso_providers<T extends sso_providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sso_providersDefaultArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the saml_relay_states model
   */ 
  interface saml_relay_statesFieldRefs {
    readonly id: FieldRef<"saml_relay_states", 'String'>
    readonly sso_provider_id: FieldRef<"saml_relay_states", 'String'>
    readonly request_id: FieldRef<"saml_relay_states", 'String'>
    readonly for_email: FieldRef<"saml_relay_states", 'String'>
    readonly redirect_to: FieldRef<"saml_relay_states", 'String'>
    readonly from_ip_address: FieldRef<"saml_relay_states", 'String'>
    readonly created_at: FieldRef<"saml_relay_states", 'DateTime'>
    readonly updated_at: FieldRef<"saml_relay_states", 'DateTime'>
    readonly flow_state_id: FieldRef<"saml_relay_states", 'String'>
  }
    

  // Custom InputTypes

  /**
   * saml_relay_states findUnique
   */
  export type saml_relay_statesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where: saml_relay_statesWhereUniqueInput
  }


  /**
   * saml_relay_states findUniqueOrThrow
   */
  export type saml_relay_statesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where: saml_relay_statesWhereUniqueInput
  }


  /**
   * saml_relay_states findFirst
   */
  export type saml_relay_statesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_relay_states.
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_relay_states.
     */
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }


  /**
   * saml_relay_states findFirstOrThrow
   */
  export type saml_relay_statesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_relay_states.
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_relay_states.
     */
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }


  /**
   * saml_relay_states findMany
   */
  export type saml_relay_statesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing saml_relay_states.
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }


  /**
   * saml_relay_states create
   */
  export type saml_relay_statesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * The data needed to create a saml_relay_states.
     */
    data: XOR<saml_relay_statesCreateInput, saml_relay_statesUncheckedCreateInput>
  }


  /**
   * saml_relay_states createMany
   */
  export type saml_relay_statesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many saml_relay_states.
     */
    data: saml_relay_statesCreateManyInput | saml_relay_statesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * saml_relay_states update
   */
  export type saml_relay_statesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * The data needed to update a saml_relay_states.
     */
    data: XOR<saml_relay_statesUpdateInput, saml_relay_statesUncheckedUpdateInput>
    /**
     * Choose, which saml_relay_states to update.
     */
    where: saml_relay_statesWhereUniqueInput
  }


  /**
   * saml_relay_states updateMany
   */
  export type saml_relay_statesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update saml_relay_states.
     */
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyInput>
    /**
     * Filter which saml_relay_states to update
     */
    where?: saml_relay_statesWhereInput
  }


  /**
   * saml_relay_states upsert
   */
  export type saml_relay_statesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * The filter to search for the saml_relay_states to update in case it exists.
     */
    where: saml_relay_statesWhereUniqueInput
    /**
     * In case the saml_relay_states found by the `where` argument doesn't exist, create a new saml_relay_states with this data.
     */
    create: XOR<saml_relay_statesCreateInput, saml_relay_statesUncheckedCreateInput>
    /**
     * In case the saml_relay_states was found with the provided `where` argument, update it with this data.
     */
    update: XOR<saml_relay_statesUpdateInput, saml_relay_statesUncheckedUpdateInput>
  }


  /**
   * saml_relay_states delete
   */
  export type saml_relay_statesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter which saml_relay_states to delete.
     */
    where: saml_relay_statesWhereUniqueInput
  }


  /**
   * saml_relay_states deleteMany
   */
  export type saml_relay_statesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_relay_states to delete
     */
    where?: saml_relay_statesWhereInput
  }


  /**
   * saml_relay_states.flow_state
   */
  export type saml_relay_states$flow_stateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: flow_stateInclude<ExtArgs> | null
    where?: flow_stateWhereInput
  }


  /**
   * saml_relay_states without action
   */
  export type saml_relay_statesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
  }



  /**
   * Model schema_migrations
   */

  export type AggregateSchema_migrations = {
    _count: Schema_migrationsCountAggregateOutputType | null
    _min: Schema_migrationsMinAggregateOutputType | null
    _max: Schema_migrationsMaxAggregateOutputType | null
  }

  export type Schema_migrationsMinAggregateOutputType = {
    version: string | null
  }

  export type Schema_migrationsMaxAggregateOutputType = {
    version: string | null
  }

  export type Schema_migrationsCountAggregateOutputType = {
    version: number
    _all: number
  }


  export type Schema_migrationsMinAggregateInputType = {
    version?: true
  }

  export type Schema_migrationsMaxAggregateInputType = {
    version?: true
  }

  export type Schema_migrationsCountAggregateInputType = {
    version?: true
    _all?: true
  }

  export type Schema_migrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schema_migrations to aggregate.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned schema_migrations
    **/
    _count?: true | Schema_migrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Schema_migrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Schema_migrationsMaxAggregateInputType
  }

  export type GetSchema_migrationsAggregateType<T extends Schema_migrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateSchema_migrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSchema_migrations[P]>
      : GetScalarType<T[P], AggregateSchema_migrations[P]>
  }




  export type schema_migrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: schema_migrationsWhereInput
    orderBy?: schema_migrationsOrderByWithAggregationInput | schema_migrationsOrderByWithAggregationInput[]
    by: Schema_migrationsScalarFieldEnum[] | Schema_migrationsScalarFieldEnum
    having?: schema_migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Schema_migrationsCountAggregateInputType | true
    _min?: Schema_migrationsMinAggregateInputType
    _max?: Schema_migrationsMaxAggregateInputType
  }

  export type Schema_migrationsGroupByOutputType = {
    version: string
    _count: Schema_migrationsCountAggregateOutputType | null
    _min: Schema_migrationsMinAggregateOutputType | null
    _max: Schema_migrationsMaxAggregateOutputType | null
  }

  type GetSchema_migrationsGroupByPayload<T extends schema_migrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Schema_migrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Schema_migrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Schema_migrationsGroupByOutputType[P]>
            : GetScalarType<T[P], Schema_migrationsGroupByOutputType[P]>
        }
      >
    >


  export type schema_migrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectScalar = {
    version?: boolean
  }


  export type $schema_migrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "schema_migrations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      version: string
    }, ExtArgs["result"]["schema_migrations"]>
    composites: {}
  }


  type schema_migrationsGetPayload<S extends boolean | null | undefined | schema_migrationsDefaultArgs> = $Result.GetResult<Prisma.$schema_migrationsPayload, S>

  type schema_migrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<schema_migrationsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Schema_migrationsCountAggregateInputType | true
    }

  export interface schema_migrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['schema_migrations'], meta: { name: 'schema_migrations' } }
    /**
     * Find zero or one Schema_migrations that matches the filter.
     * @param {schema_migrationsFindUniqueArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends schema_migrationsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, schema_migrationsFindUniqueArgs<ExtArgs>>
    ): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Schema_migrations that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {schema_migrationsFindUniqueOrThrowArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends schema_migrationsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, schema_migrationsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Schema_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindFirstArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends schema_migrationsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, schema_migrationsFindFirstArgs<ExtArgs>>
    ): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Schema_migrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindFirstOrThrowArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends schema_migrationsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, schema_migrationsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Schema_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findMany()
     * 
     * // Get first 10 Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findMany({ take: 10 })
     * 
     * // Only select the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.findMany({ select: { version: true } })
     * 
    **/
    findMany<T extends schema_migrationsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, schema_migrationsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Schema_migrations.
     * @param {schema_migrationsCreateArgs} args - Arguments to create a Schema_migrations.
     * @example
     * // Create one Schema_migrations
     * const Schema_migrations = await prisma.schema_migrations.create({
     *   data: {
     *     // ... data to create a Schema_migrations
     *   }
     * })
     * 
    **/
    create<T extends schema_migrationsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, schema_migrationsCreateArgs<ExtArgs>>
    ): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Schema_migrations.
     *     @param {schema_migrationsCreateManyArgs} args - Arguments to create many Schema_migrations.
     *     @example
     *     // Create many Schema_migrations
     *     const schema_migrations = await prisma.schema_migrations.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends schema_migrationsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, schema_migrationsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Schema_migrations.
     * @param {schema_migrationsDeleteArgs} args - Arguments to delete one Schema_migrations.
     * @example
     * // Delete one Schema_migrations
     * const Schema_migrations = await prisma.schema_migrations.delete({
     *   where: {
     *     // ... filter to delete one Schema_migrations
     *   }
     * })
     * 
    **/
    delete<T extends schema_migrationsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, schema_migrationsDeleteArgs<ExtArgs>>
    ): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Schema_migrations.
     * @param {schema_migrationsUpdateArgs} args - Arguments to update one Schema_migrations.
     * @example
     * // Update one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends schema_migrationsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, schema_migrationsUpdateArgs<ExtArgs>>
    ): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Schema_migrations.
     * @param {schema_migrationsDeleteManyArgs} args - Arguments to filter Schema_migrations to delete.
     * @example
     * // Delete a few Schema_migrations
     * const { count } = await prisma.schema_migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends schema_migrationsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, schema_migrationsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends schema_migrationsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, schema_migrationsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Schema_migrations.
     * @param {schema_migrationsUpsertArgs} args - Arguments to update or create a Schema_migrations.
     * @example
     * // Update or create a Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.upsert({
     *   create: {
     *     // ... data to create a Schema_migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Schema_migrations we want to update
     *   }
     * })
    **/
    upsert<T extends schema_migrationsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, schema_migrationsUpsertArgs<ExtArgs>>
    ): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsCountArgs} args - Arguments to filter Schema_migrations to count.
     * @example
     * // Count the number of Schema_migrations
     * const count = await prisma.schema_migrations.count({
     *   where: {
     *     // ... the filter for the Schema_migrations we want to count
     *   }
     * })
    **/
    count<T extends schema_migrationsCountArgs>(
      args?: Subset<T, schema_migrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Schema_migrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Schema_migrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Schema_migrationsAggregateArgs>(args: Subset<T, Schema_migrationsAggregateArgs>): Prisma.PrismaPromise<GetSchema_migrationsAggregateType<T>>

    /**
     * Group by Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends schema_migrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: schema_migrationsGroupByArgs['orderBy'] }
        : { orderBy?: schema_migrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, schema_migrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSchema_migrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the schema_migrations model
   */
  readonly fields: schema_migrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for schema_migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__schema_migrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the schema_migrations model
   */ 
  interface schema_migrationsFieldRefs {
    readonly version: FieldRef<"schema_migrations", 'String'>
  }
    

  // Custom InputTypes

  /**
   * schema_migrations findUnique
   */
  export type schema_migrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where: schema_migrationsWhereUniqueInput
  }


  /**
   * schema_migrations findUniqueOrThrow
   */
  export type schema_migrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where: schema_migrationsWhereUniqueInput
  }


  /**
   * schema_migrations findFirst
   */
  export type schema_migrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schema_migrations.
     */
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }


  /**
   * schema_migrations findFirstOrThrow
   */
  export type schema_migrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schema_migrations.
     */
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }


  /**
   * schema_migrations findMany
   */
  export type schema_migrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }


  /**
   * schema_migrations create
   */
  export type schema_migrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * The data needed to create a schema_migrations.
     */
    data: XOR<schema_migrationsCreateInput, schema_migrationsUncheckedCreateInput>
  }


  /**
   * schema_migrations createMany
   */
  export type schema_migrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many schema_migrations.
     */
    data: schema_migrationsCreateManyInput | schema_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * schema_migrations update
   */
  export type schema_migrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * The data needed to update a schema_migrations.
     */
    data: XOR<schema_migrationsUpdateInput, schema_migrationsUncheckedUpdateInput>
    /**
     * Choose, which schema_migrations to update.
     */
    where: schema_migrationsWhereUniqueInput
  }


  /**
   * schema_migrations updateMany
   */
  export type schema_migrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update schema_migrations.
     */
    data: XOR<schema_migrationsUpdateManyMutationInput, schema_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which schema_migrations to update
     */
    where?: schema_migrationsWhereInput
  }


  /**
   * schema_migrations upsert
   */
  export type schema_migrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * The filter to search for the schema_migrations to update in case it exists.
     */
    where: schema_migrationsWhereUniqueInput
    /**
     * In case the schema_migrations found by the `where` argument doesn't exist, create a new schema_migrations with this data.
     */
    create: XOR<schema_migrationsCreateInput, schema_migrationsUncheckedCreateInput>
    /**
     * In case the schema_migrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<schema_migrationsUpdateInput, schema_migrationsUncheckedUpdateInput>
  }


  /**
   * schema_migrations delete
   */
  export type schema_migrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Filter which schema_migrations to delete.
     */
    where: schema_migrationsWhereUniqueInput
  }


  /**
   * schema_migrations deleteMany
   */
  export type schema_migrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schema_migrations to delete
     */
    where?: schema_migrationsWhereInput
  }


  /**
   * schema_migrations without action
   */
  export type schema_migrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
  }



  /**
   * Model sessions
   */

  export type AggregateSessions = {
    _count: SessionsCountAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  export type SessionsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    created_at: Date | null
    updated_at: Date | null
    factor_id: string | null
    aal: $Enums.aal_level | null
    not_after: Date | null
    refreshed_at: Date | null
    user_agent: string | null
    ip: string | null
    tag: string | null
  }

  export type SessionsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    created_at: Date | null
    updated_at: Date | null
    factor_id: string | null
    aal: $Enums.aal_level | null
    not_after: Date | null
    refreshed_at: Date | null
    user_agent: string | null
    ip: string | null
    tag: string | null
  }

  export type SessionsCountAggregateOutputType = {
    id: number
    user_id: number
    created_at: number
    updated_at: number
    factor_id: number
    aal: number
    not_after: number
    refreshed_at: number
    user_agent: number
    ip: number
    tag: number
    _all: number
  }


  export type SessionsMinAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    factor_id?: true
    aal?: true
    not_after?: true
    refreshed_at?: true
    user_agent?: true
    ip?: true
    tag?: true
  }

  export type SessionsMaxAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    factor_id?: true
    aal?: true
    not_after?: true
    refreshed_at?: true
    user_agent?: true
    ip?: true
    tag?: true
  }

  export type SessionsCountAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    factor_id?: true
    aal?: true
    not_after?: true
    refreshed_at?: true
    user_agent?: true
    ip?: true
    tag?: true
    _all?: true
  }

  export type SessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sessions to aggregate.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sessions
    **/
    _count?: true | SessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionsMaxAggregateInputType
  }

  export type GetSessionsAggregateType<T extends SessionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSessions[P]>
      : GetScalarType<T[P], AggregateSessions[P]>
  }




  export type sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sessionsWhereInput
    orderBy?: sessionsOrderByWithAggregationInput | sessionsOrderByWithAggregationInput[]
    by: SessionsScalarFieldEnum[] | SessionsScalarFieldEnum
    having?: sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionsCountAggregateInputType | true
    _min?: SessionsMinAggregateInputType
    _max?: SessionsMaxAggregateInputType
  }

  export type SessionsGroupByOutputType = {
    id: string
    user_id: string
    created_at: Date | null
    updated_at: Date | null
    factor_id: string | null
    aal: $Enums.aal_level | null
    not_after: Date | null
    refreshed_at: Date | null
    user_agent: string | null
    ip: string | null
    tag: string | null
    _count: SessionsCountAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  type GetSessionsGroupByPayload<T extends sessionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionsGroupByOutputType[P]>
            : GetScalarType<T[P], SessionsGroupByOutputType[P]>
        }
      >
    >


  export type sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    factor_id?: boolean
    aal?: boolean
    not_after?: boolean
    refreshed_at?: boolean
    user_agent?: boolean
    ip?: boolean
    tag?: boolean
    mfa_amr_claims?: boolean | sessions$mfa_amr_claimsArgs<ExtArgs>
    refresh_tokens?: boolean | sessions$refresh_tokensArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | SessionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectScalar = {
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    factor_id?: boolean
    aal?: boolean
    not_after?: boolean
    refreshed_at?: boolean
    user_agent?: boolean
    ip?: boolean
    tag?: boolean
  }

  export type sessionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_amr_claims?: boolean | sessions$mfa_amr_claimsArgs<ExtArgs>
    refresh_tokens?: boolean | sessions$refresh_tokensArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | SessionsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sessions"
    objects: {
      mfa_amr_claims: Prisma.$mfa_amr_claimsPayload<ExtArgs>[]
      refresh_tokens: Prisma.$refresh_tokensPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      created_at: Date | null
      updated_at: Date | null
      factor_id: string | null
      aal: $Enums.aal_level | null
      not_after: Date | null
      refreshed_at: Date | null
      user_agent: string | null
      ip: string | null
      tag: string | null
    }, ExtArgs["result"]["sessions"]>
    composites: {}
  }


  type sessionsGetPayload<S extends boolean | null | undefined | sessionsDefaultArgs> = $Result.GetResult<Prisma.$sessionsPayload, S>

  type sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sessionsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: SessionsCountAggregateInputType | true
    }

  export interface sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sessions'], meta: { name: 'sessions' } }
    /**
     * Find zero or one Sessions that matches the filter.
     * @param {sessionsFindUniqueArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sessionsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, sessionsFindUniqueArgs<ExtArgs>>
    ): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Sessions that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {sessionsFindUniqueOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sessionsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sessionsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sessionsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, sessionsFindFirstArgs<ExtArgs>>
    ): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Sessions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sessionsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sessionsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.sessions.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.sessions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionsWithIdOnly = await prisma.sessions.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sessionsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sessionsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Sessions.
     * @param {sessionsCreateArgs} args - Arguments to create a Sessions.
     * @example
     * // Create one Sessions
     * const Sessions = await prisma.sessions.create({
     *   data: {
     *     // ... data to create a Sessions
     *   }
     * })
     * 
    **/
    create<T extends sessionsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, sessionsCreateArgs<ExtArgs>>
    ): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Sessions.
     *     @param {sessionsCreateManyArgs} args - Arguments to create many Sessions.
     *     @example
     *     // Create many Sessions
     *     const sessions = await prisma.sessions.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sessionsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sessionsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sessions.
     * @param {sessionsDeleteArgs} args - Arguments to delete one Sessions.
     * @example
     * // Delete one Sessions
     * const Sessions = await prisma.sessions.delete({
     *   where: {
     *     // ... filter to delete one Sessions
     *   }
     * })
     * 
    **/
    delete<T extends sessionsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, sessionsDeleteArgs<ExtArgs>>
    ): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Sessions.
     * @param {sessionsUpdateArgs} args - Arguments to update one Sessions.
     * @example
     * // Update one Sessions
     * const sessions = await prisma.sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sessionsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, sessionsUpdateArgs<ExtArgs>>
    ): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Sessions.
     * @param {sessionsDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sessionsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sessionsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const sessions = await prisma.sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sessionsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, sessionsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sessions.
     * @param {sessionsUpsertArgs} args - Arguments to update or create a Sessions.
     * @example
     * // Update or create a Sessions
     * const sessions = await prisma.sessions.upsert({
     *   create: {
     *     // ... data to create a Sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sessions we want to update
     *   }
     * })
    **/
    upsert<T extends sessionsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, sessionsUpsertArgs<ExtArgs>>
    ): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.sessions.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends sessionsCountArgs>(
      args?: Subset<T, sessionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionsAggregateArgs>(args: Subset<T, SessionsAggregateArgs>): Prisma.PrismaPromise<GetSessionsAggregateType<T>>

    /**
     * Group by Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sessionsGroupByArgs['orderBy'] }
        : { orderBy?: sessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sessions model
   */
  readonly fields: sessionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    mfa_amr_claims<T extends sessions$mfa_amr_claimsArgs<ExtArgs> = {}>(args?: Subset<T, sessions$mfa_amr_claimsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, 'findMany'> | Null>;

    refresh_tokens<T extends sessions$refresh_tokensArgs<ExtArgs> = {}>(args?: Subset<T, sessions$refresh_tokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, 'findMany'> | Null>;

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the sessions model
   */ 
  interface sessionsFieldRefs {
    readonly id: FieldRef<"sessions", 'String'>
    readonly user_id: FieldRef<"sessions", 'String'>
    readonly created_at: FieldRef<"sessions", 'DateTime'>
    readonly updated_at: FieldRef<"sessions", 'DateTime'>
    readonly factor_id: FieldRef<"sessions", 'String'>
    readonly aal: FieldRef<"sessions", 'aal_level'>
    readonly not_after: FieldRef<"sessions", 'DateTime'>
    readonly refreshed_at: FieldRef<"sessions", 'DateTime'>
    readonly user_agent: FieldRef<"sessions", 'String'>
    readonly ip: FieldRef<"sessions", 'String'>
    readonly tag: FieldRef<"sessions", 'String'>
  }
    

  // Custom InputTypes

  /**
   * sessions findUnique
   */
  export type sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }


  /**
   * sessions findUniqueOrThrow
   */
  export type sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }


  /**
   * sessions findFirst
   */
  export type sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }


  /**
   * sessions findFirstOrThrow
   */
  export type sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }


  /**
   * sessions findMany
   */
  export type sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }


  /**
   * sessions create
   */
  export type sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * The data needed to create a sessions.
     */
    data: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
  }


  /**
   * sessions createMany
   */
  export type sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sessions.
     */
    data: sessionsCreateManyInput | sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * sessions update
   */
  export type sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * The data needed to update a sessions.
     */
    data: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
    /**
     * Choose, which sessions to update.
     */
    where: sessionsWhereUniqueInput
  }


  /**
   * sessions updateMany
   */
  export type sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sessions.
     */
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyInput>
    /**
     * Filter which sessions to update
     */
    where?: sessionsWhereInput
  }


  /**
   * sessions upsert
   */
  export type sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * The filter to search for the sessions to update in case it exists.
     */
    where: sessionsWhereUniqueInput
    /**
     * In case the sessions found by the `where` argument doesn't exist, create a new sessions with this data.
     */
    create: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
    /**
     * In case the sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
  }


  /**
   * sessions delete
   */
  export type sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter which sessions to delete.
     */
    where: sessionsWhereUniqueInput
  }


  /**
   * sessions deleteMany
   */
  export type sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sessions to delete
     */
    where?: sessionsWhereInput
  }


  /**
   * sessions.mfa_amr_claims
   */
  export type sessions$mfa_amr_claimsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    where?: mfa_amr_claimsWhereInput
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    cursor?: mfa_amr_claimsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }


  /**
   * sessions.refresh_tokens
   */
  export type sessions$refresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    where?: refresh_tokensWhereInput
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    cursor?: refresh_tokensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }


  /**
   * sessions without action
   */
  export type sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
  }



  /**
   * Model sso_domains
   */

  export type AggregateSso_domains = {
    _count: Sso_domainsCountAggregateOutputType | null
    _min: Sso_domainsMinAggregateOutputType | null
    _max: Sso_domainsMaxAggregateOutputType | null
  }

  export type Sso_domainsMinAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    domain: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_domainsMaxAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    domain: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_domainsCountAggregateOutputType = {
    id: number
    sso_provider_id: number
    domain: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Sso_domainsMinAggregateInputType = {
    id?: true
    sso_provider_id?: true
    domain?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_domainsMaxAggregateInputType = {
    id?: true
    sso_provider_id?: true
    domain?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_domainsCountAggregateInputType = {
    id?: true
    sso_provider_id?: true
    domain?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Sso_domainsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_domains to aggregate.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sso_domains
    **/
    _count?: true | Sso_domainsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sso_domainsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sso_domainsMaxAggregateInputType
  }

  export type GetSso_domainsAggregateType<T extends Sso_domainsAggregateArgs> = {
        [P in keyof T & keyof AggregateSso_domains]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSso_domains[P]>
      : GetScalarType<T[P], AggregateSso_domains[P]>
  }




  export type sso_domainsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sso_domainsWhereInput
    orderBy?: sso_domainsOrderByWithAggregationInput | sso_domainsOrderByWithAggregationInput[]
    by: Sso_domainsScalarFieldEnum[] | Sso_domainsScalarFieldEnum
    having?: sso_domainsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sso_domainsCountAggregateInputType | true
    _min?: Sso_domainsMinAggregateInputType
    _max?: Sso_domainsMaxAggregateInputType
  }

  export type Sso_domainsGroupByOutputType = {
    id: string
    sso_provider_id: string
    domain: string
    created_at: Date | null
    updated_at: Date | null
    _count: Sso_domainsCountAggregateOutputType | null
    _min: Sso_domainsMinAggregateOutputType | null
    _max: Sso_domainsMaxAggregateOutputType | null
  }

  type GetSso_domainsGroupByPayload<T extends sso_domainsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sso_domainsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sso_domainsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sso_domainsGroupByOutputType[P]>
            : GetScalarType<T[P], Sso_domainsGroupByOutputType[P]>
        }
      >
    >


  export type sso_domainsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    domain?: boolean
    created_at?: boolean
    updated_at?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_domains"]>

  export type sso_domainsSelectScalar = {
    id?: boolean
    sso_provider_id?: boolean
    domain?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type sso_domainsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }


  export type $sso_domainsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sso_domains"
    objects: {
      sso_providers: Prisma.$sso_providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sso_provider_id: string
      domain: string
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["sso_domains"]>
    composites: {}
  }


  type sso_domainsGetPayload<S extends boolean | null | undefined | sso_domainsDefaultArgs> = $Result.GetResult<Prisma.$sso_domainsPayload, S>

  type sso_domainsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sso_domainsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Sso_domainsCountAggregateInputType | true
    }

  export interface sso_domainsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sso_domains'], meta: { name: 'sso_domains' } }
    /**
     * Find zero or one Sso_domains that matches the filter.
     * @param {sso_domainsFindUniqueArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sso_domainsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, sso_domainsFindUniqueArgs<ExtArgs>>
    ): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Sso_domains that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {sso_domainsFindUniqueOrThrowArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sso_domainsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_domainsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Sso_domains that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsFindFirstArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sso_domainsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_domainsFindFirstArgs<ExtArgs>>
    ): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Sso_domains that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsFindFirstOrThrowArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sso_domainsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_domainsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Sso_domains that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sso_domains
     * const sso_domains = await prisma.sso_domains.findMany()
     * 
     * // Get first 10 Sso_domains
     * const sso_domains = await prisma.sso_domains.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sso_domainsWithIdOnly = await prisma.sso_domains.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sso_domainsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_domainsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Sso_domains.
     * @param {sso_domainsCreateArgs} args - Arguments to create a Sso_domains.
     * @example
     * // Create one Sso_domains
     * const Sso_domains = await prisma.sso_domains.create({
     *   data: {
     *     // ... data to create a Sso_domains
     *   }
     * })
     * 
    **/
    create<T extends sso_domainsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, sso_domainsCreateArgs<ExtArgs>>
    ): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Sso_domains.
     *     @param {sso_domainsCreateManyArgs} args - Arguments to create many Sso_domains.
     *     @example
     *     // Create many Sso_domains
     *     const sso_domains = await prisma.sso_domains.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sso_domainsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_domainsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sso_domains.
     * @param {sso_domainsDeleteArgs} args - Arguments to delete one Sso_domains.
     * @example
     * // Delete one Sso_domains
     * const Sso_domains = await prisma.sso_domains.delete({
     *   where: {
     *     // ... filter to delete one Sso_domains
     *   }
     * })
     * 
    **/
    delete<T extends sso_domainsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, sso_domainsDeleteArgs<ExtArgs>>
    ): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Sso_domains.
     * @param {sso_domainsUpdateArgs} args - Arguments to update one Sso_domains.
     * @example
     * // Update one Sso_domains
     * const sso_domains = await prisma.sso_domains.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sso_domainsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, sso_domainsUpdateArgs<ExtArgs>>
    ): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Sso_domains.
     * @param {sso_domainsDeleteManyArgs} args - Arguments to filter Sso_domains to delete.
     * @example
     * // Delete a few Sso_domains
     * const { count } = await prisma.sso_domains.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sso_domainsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_domainsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sso_domains
     * const sso_domains = await prisma.sso_domains.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sso_domainsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, sso_domainsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sso_domains.
     * @param {sso_domainsUpsertArgs} args - Arguments to update or create a Sso_domains.
     * @example
     * // Update or create a Sso_domains
     * const sso_domains = await prisma.sso_domains.upsert({
     *   create: {
     *     // ... data to create a Sso_domains
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sso_domains we want to update
     *   }
     * })
    **/
    upsert<T extends sso_domainsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, sso_domainsUpsertArgs<ExtArgs>>
    ): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsCountArgs} args - Arguments to filter Sso_domains to count.
     * @example
     * // Count the number of Sso_domains
     * const count = await prisma.sso_domains.count({
     *   where: {
     *     // ... the filter for the Sso_domains we want to count
     *   }
     * })
    **/
    count<T extends sso_domainsCountArgs>(
      args?: Subset<T, sso_domainsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sso_domainsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sso_domainsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sso_domainsAggregateArgs>(args: Subset<T, Sso_domainsAggregateArgs>): Prisma.PrismaPromise<GetSso_domainsAggregateType<T>>

    /**
     * Group by Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sso_domainsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sso_domainsGroupByArgs['orderBy'] }
        : { orderBy?: sso_domainsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sso_domainsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSso_domainsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sso_domains model
   */
  readonly fields: sso_domainsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sso_domains.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sso_domainsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    sso_providers<T extends sso_providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sso_providersDefaultArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the sso_domains model
   */ 
  interface sso_domainsFieldRefs {
    readonly id: FieldRef<"sso_domains", 'String'>
    readonly sso_provider_id: FieldRef<"sso_domains", 'String'>
    readonly domain: FieldRef<"sso_domains", 'String'>
    readonly created_at: FieldRef<"sso_domains", 'DateTime'>
    readonly updated_at: FieldRef<"sso_domains", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * sso_domains findUnique
   */
  export type sso_domainsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where: sso_domainsWhereUniqueInput
  }


  /**
   * sso_domains findUniqueOrThrow
   */
  export type sso_domainsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where: sso_domainsWhereUniqueInput
  }


  /**
   * sso_domains findFirst
   */
  export type sso_domainsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_domains.
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_domains.
     */
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }


  /**
   * sso_domains findFirstOrThrow
   */
  export type sso_domainsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_domains.
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_domains.
     */
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }


  /**
   * sso_domains findMany
   */
  export type sso_domainsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sso_domains.
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }


  /**
   * sso_domains create
   */
  export type sso_domainsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * The data needed to create a sso_domains.
     */
    data: XOR<sso_domainsCreateInput, sso_domainsUncheckedCreateInput>
  }


  /**
   * sso_domains createMany
   */
  export type sso_domainsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sso_domains.
     */
    data: sso_domainsCreateManyInput | sso_domainsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * sso_domains update
   */
  export type sso_domainsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * The data needed to update a sso_domains.
     */
    data: XOR<sso_domainsUpdateInput, sso_domainsUncheckedUpdateInput>
    /**
     * Choose, which sso_domains to update.
     */
    where: sso_domainsWhereUniqueInput
  }


  /**
   * sso_domains updateMany
   */
  export type sso_domainsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sso_domains.
     */
    data: XOR<sso_domainsUpdateManyMutationInput, sso_domainsUncheckedUpdateManyInput>
    /**
     * Filter which sso_domains to update
     */
    where?: sso_domainsWhereInput
  }


  /**
   * sso_domains upsert
   */
  export type sso_domainsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * The filter to search for the sso_domains to update in case it exists.
     */
    where: sso_domainsWhereUniqueInput
    /**
     * In case the sso_domains found by the `where` argument doesn't exist, create a new sso_domains with this data.
     */
    create: XOR<sso_domainsCreateInput, sso_domainsUncheckedCreateInput>
    /**
     * In case the sso_domains was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sso_domainsUpdateInput, sso_domainsUncheckedUpdateInput>
  }


  /**
   * sso_domains delete
   */
  export type sso_domainsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter which sso_domains to delete.
     */
    where: sso_domainsWhereUniqueInput
  }


  /**
   * sso_domains deleteMany
   */
  export type sso_domainsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_domains to delete
     */
    where?: sso_domainsWhereInput
  }


  /**
   * sso_domains without action
   */
  export type sso_domainsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
  }



  /**
   * Model sso_providers
   */

  export type AggregateSso_providers = {
    _count: Sso_providersCountAggregateOutputType | null
    _min: Sso_providersMinAggregateOutputType | null
    _max: Sso_providersMaxAggregateOutputType | null
  }

  export type Sso_providersMinAggregateOutputType = {
    id: string | null
    resource_id: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_providersMaxAggregateOutputType = {
    id: string | null
    resource_id: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_providersCountAggregateOutputType = {
    id: number
    resource_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Sso_providersMinAggregateInputType = {
    id?: true
    resource_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_providersMaxAggregateInputType = {
    id?: true
    resource_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_providersCountAggregateInputType = {
    id?: true
    resource_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Sso_providersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_providers to aggregate.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sso_providers
    **/
    _count?: true | Sso_providersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sso_providersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sso_providersMaxAggregateInputType
  }

  export type GetSso_providersAggregateType<T extends Sso_providersAggregateArgs> = {
        [P in keyof T & keyof AggregateSso_providers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSso_providers[P]>
      : GetScalarType<T[P], AggregateSso_providers[P]>
  }




  export type sso_providersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sso_providersWhereInput
    orderBy?: sso_providersOrderByWithAggregationInput | sso_providersOrderByWithAggregationInput[]
    by: Sso_providersScalarFieldEnum[] | Sso_providersScalarFieldEnum
    having?: sso_providersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sso_providersCountAggregateInputType | true
    _min?: Sso_providersMinAggregateInputType
    _max?: Sso_providersMaxAggregateInputType
  }

  export type Sso_providersGroupByOutputType = {
    id: string
    resource_id: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Sso_providersCountAggregateOutputType | null
    _min: Sso_providersMinAggregateOutputType | null
    _max: Sso_providersMaxAggregateOutputType | null
  }

  type GetSso_providersGroupByPayload<T extends sso_providersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sso_providersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sso_providersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sso_providersGroupByOutputType[P]>
            : GetScalarType<T[P], Sso_providersGroupByOutputType[P]>
        }
      >
    >


  export type sso_providersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    resource_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    saml_providers?: boolean | sso_providers$saml_providersArgs<ExtArgs>
    saml_relay_states?: boolean | sso_providers$saml_relay_statesArgs<ExtArgs>
    sso_domains?: boolean | sso_providers$sso_domainsArgs<ExtArgs>
    _count?: boolean | Sso_providersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_providers"]>

  export type sso_providersSelectScalar = {
    id?: boolean
    resource_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type sso_providersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_providers?: boolean | sso_providers$saml_providersArgs<ExtArgs>
    saml_relay_states?: boolean | sso_providers$saml_relay_statesArgs<ExtArgs>
    sso_domains?: boolean | sso_providers$sso_domainsArgs<ExtArgs>
    _count?: boolean | Sso_providersCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $sso_providersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sso_providers"
    objects: {
      saml_providers: Prisma.$saml_providersPayload<ExtArgs>[]
      saml_relay_states: Prisma.$saml_relay_statesPayload<ExtArgs>[]
      sso_domains: Prisma.$sso_domainsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      resource_id: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["sso_providers"]>
    composites: {}
  }


  type sso_providersGetPayload<S extends boolean | null | undefined | sso_providersDefaultArgs> = $Result.GetResult<Prisma.$sso_providersPayload, S>

  type sso_providersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sso_providersFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Sso_providersCountAggregateInputType | true
    }

  export interface sso_providersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sso_providers'], meta: { name: 'sso_providers' } }
    /**
     * Find zero or one Sso_providers that matches the filter.
     * @param {sso_providersFindUniqueArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sso_providersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, sso_providersFindUniqueArgs<ExtArgs>>
    ): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Sso_providers that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {sso_providersFindUniqueOrThrowArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sso_providersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_providersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Sso_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersFindFirstArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sso_providersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_providersFindFirstArgs<ExtArgs>>
    ): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Sso_providers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersFindFirstOrThrowArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sso_providersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_providersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Sso_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sso_providers
     * const sso_providers = await prisma.sso_providers.findMany()
     * 
     * // Get first 10 Sso_providers
     * const sso_providers = await prisma.sso_providers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sso_providersWithIdOnly = await prisma.sso_providers.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sso_providersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_providersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Sso_providers.
     * @param {sso_providersCreateArgs} args - Arguments to create a Sso_providers.
     * @example
     * // Create one Sso_providers
     * const Sso_providers = await prisma.sso_providers.create({
     *   data: {
     *     // ... data to create a Sso_providers
     *   }
     * })
     * 
    **/
    create<T extends sso_providersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, sso_providersCreateArgs<ExtArgs>>
    ): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Sso_providers.
     *     @param {sso_providersCreateManyArgs} args - Arguments to create many Sso_providers.
     *     @example
     *     // Create many Sso_providers
     *     const sso_providers = await prisma.sso_providers.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sso_providersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_providersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sso_providers.
     * @param {sso_providersDeleteArgs} args - Arguments to delete one Sso_providers.
     * @example
     * // Delete one Sso_providers
     * const Sso_providers = await prisma.sso_providers.delete({
     *   where: {
     *     // ... filter to delete one Sso_providers
     *   }
     * })
     * 
    **/
    delete<T extends sso_providersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, sso_providersDeleteArgs<ExtArgs>>
    ): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Sso_providers.
     * @param {sso_providersUpdateArgs} args - Arguments to update one Sso_providers.
     * @example
     * // Update one Sso_providers
     * const sso_providers = await prisma.sso_providers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sso_providersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, sso_providersUpdateArgs<ExtArgs>>
    ): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Sso_providers.
     * @param {sso_providersDeleteManyArgs} args - Arguments to filter Sso_providers to delete.
     * @example
     * // Delete a few Sso_providers
     * const { count } = await prisma.sso_providers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sso_providersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sso_providersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sso_providers
     * const sso_providers = await prisma.sso_providers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sso_providersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, sso_providersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sso_providers.
     * @param {sso_providersUpsertArgs} args - Arguments to update or create a Sso_providers.
     * @example
     * // Update or create a Sso_providers
     * const sso_providers = await prisma.sso_providers.upsert({
     *   create: {
     *     // ... data to create a Sso_providers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sso_providers we want to update
     *   }
     * })
    **/
    upsert<T extends sso_providersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, sso_providersUpsertArgs<ExtArgs>>
    ): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersCountArgs} args - Arguments to filter Sso_providers to count.
     * @example
     * // Count the number of Sso_providers
     * const count = await prisma.sso_providers.count({
     *   where: {
     *     // ... the filter for the Sso_providers we want to count
     *   }
     * })
    **/
    count<T extends sso_providersCountArgs>(
      args?: Subset<T, sso_providersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sso_providersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sso_providersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sso_providersAggregateArgs>(args: Subset<T, Sso_providersAggregateArgs>): Prisma.PrismaPromise<GetSso_providersAggregateType<T>>

    /**
     * Group by Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sso_providersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sso_providersGroupByArgs['orderBy'] }
        : { orderBy?: sso_providersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sso_providersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSso_providersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sso_providers model
   */
  readonly fields: sso_providersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sso_providers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sso_providersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    saml_providers<T extends sso_providers$saml_providersArgs<ExtArgs> = {}>(args?: Subset<T, sso_providers$saml_providersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, 'findMany'> | Null>;

    saml_relay_states<T extends sso_providers$saml_relay_statesArgs<ExtArgs> = {}>(args?: Subset<T, sso_providers$saml_relay_statesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, 'findMany'> | Null>;

    sso_domains<T extends sso_providers$sso_domainsArgs<ExtArgs> = {}>(args?: Subset<T, sso_providers$sso_domainsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the sso_providers model
   */ 
  interface sso_providersFieldRefs {
    readonly id: FieldRef<"sso_providers", 'String'>
    readonly resource_id: FieldRef<"sso_providers", 'String'>
    readonly created_at: FieldRef<"sso_providers", 'DateTime'>
    readonly updated_at: FieldRef<"sso_providers", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * sso_providers findUnique
   */
  export type sso_providersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where: sso_providersWhereUniqueInput
  }


  /**
   * sso_providers findUniqueOrThrow
   */
  export type sso_providersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where: sso_providersWhereUniqueInput
  }


  /**
   * sso_providers findFirst
   */
  export type sso_providersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_providers.
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_providers.
     */
    distinct?: Sso_providersScalarFieldEnum | Sso_providersScalarFieldEnum[]
  }


  /**
   * sso_providers findFirstOrThrow
   */
  export type sso_providersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_providers.
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_providers.
     */
    distinct?: Sso_providersScalarFieldEnum | Sso_providersScalarFieldEnum[]
  }


  /**
   * sso_providers findMany
   */
  export type sso_providersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sso_providers.
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    distinct?: Sso_providersScalarFieldEnum | Sso_providersScalarFieldEnum[]
  }


  /**
   * sso_providers create
   */
  export type sso_providersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * The data needed to create a sso_providers.
     */
    data: XOR<sso_providersCreateInput, sso_providersUncheckedCreateInput>
  }


  /**
   * sso_providers createMany
   */
  export type sso_providersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sso_providers.
     */
    data: sso_providersCreateManyInput | sso_providersCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * sso_providers update
   */
  export type sso_providersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * The data needed to update a sso_providers.
     */
    data: XOR<sso_providersUpdateInput, sso_providersUncheckedUpdateInput>
    /**
     * Choose, which sso_providers to update.
     */
    where: sso_providersWhereUniqueInput
  }


  /**
   * sso_providers updateMany
   */
  export type sso_providersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sso_providers.
     */
    data: XOR<sso_providersUpdateManyMutationInput, sso_providersUncheckedUpdateManyInput>
    /**
     * Filter which sso_providers to update
     */
    where?: sso_providersWhereInput
  }


  /**
   * sso_providers upsert
   */
  export type sso_providersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * The filter to search for the sso_providers to update in case it exists.
     */
    where: sso_providersWhereUniqueInput
    /**
     * In case the sso_providers found by the `where` argument doesn't exist, create a new sso_providers with this data.
     */
    create: XOR<sso_providersCreateInput, sso_providersUncheckedCreateInput>
    /**
     * In case the sso_providers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sso_providersUpdateInput, sso_providersUncheckedUpdateInput>
  }


  /**
   * sso_providers delete
   */
  export type sso_providersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter which sso_providers to delete.
     */
    where: sso_providersWhereUniqueInput
  }


  /**
   * sso_providers deleteMany
   */
  export type sso_providersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_providers to delete
     */
    where?: sso_providersWhereInput
  }


  /**
   * sso_providers.saml_providers
   */
  export type sso_providers$saml_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_providersInclude<ExtArgs> | null
    where?: saml_providersWhereInput
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    cursor?: saml_providersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }


  /**
   * sso_providers.saml_relay_states
   */
  export type sso_providers$saml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    where?: saml_relay_statesWhereInput
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    cursor?: saml_relay_statesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }


  /**
   * sso_providers.sso_domains
   */
  export type sso_providers$sso_domainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_domainsInclude<ExtArgs> | null
    where?: sso_domainsWhereInput
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    cursor?: sso_domainsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }


  /**
   * sso_providers without action
   */
  export type sso_providersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sso_providersInclude<ExtArgs> | null
  }



  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    email_change_confirm_status: number | null
  }

  export type UsersSumAggregateOutputType = {
    email_change_confirm_status: number | null
  }

  export type UsersMinAggregateOutputType = {
    instance_id: string | null
    id: string | null
    aud: string | null
    role: string | null
    email: string | null
    encrypted_password: string | null
    email_confirmed_at: Date | null
    invited_at: Date | null
    confirmation_token: string | null
    confirmation_sent_at: Date | null
    recovery_token: string | null
    recovery_sent_at: Date | null
    email_change_token_new: string | null
    email_change: string | null
    email_change_sent_at: Date | null
    last_sign_in_at: Date | null
    is_super_admin: boolean | null
    created_at: Date | null
    updated_at: Date | null
    phone: string | null
    phone_confirmed_at: Date | null
    phone_change: string | null
    phone_change_token: string | null
    phone_change_sent_at: Date | null
    confirmed_at: Date | null
    email_change_token_current: string | null
    email_change_confirm_status: number | null
    banned_until: Date | null
    reauthentication_token: string | null
    reauthentication_sent_at: Date | null
    is_sso_user: boolean | null
    deleted_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    instance_id: string | null
    id: string | null
    aud: string | null
    role: string | null
    email: string | null
    encrypted_password: string | null
    email_confirmed_at: Date | null
    invited_at: Date | null
    confirmation_token: string | null
    confirmation_sent_at: Date | null
    recovery_token: string | null
    recovery_sent_at: Date | null
    email_change_token_new: string | null
    email_change: string | null
    email_change_sent_at: Date | null
    last_sign_in_at: Date | null
    is_super_admin: boolean | null
    created_at: Date | null
    updated_at: Date | null
    phone: string | null
    phone_confirmed_at: Date | null
    phone_change: string | null
    phone_change_token: string | null
    phone_change_sent_at: Date | null
    confirmed_at: Date | null
    email_change_token_current: string | null
    email_change_confirm_status: number | null
    banned_until: Date | null
    reauthentication_token: string | null
    reauthentication_sent_at: Date | null
    is_sso_user: boolean | null
    deleted_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    instance_id: number
    id: number
    aud: number
    role: number
    email: number
    encrypted_password: number
    email_confirmed_at: number
    invited_at: number
    confirmation_token: number
    confirmation_sent_at: number
    recovery_token: number
    recovery_sent_at: number
    email_change_token_new: number
    email_change: number
    email_change_sent_at: number
    last_sign_in_at: number
    raw_app_meta_data: number
    raw_user_meta_data: number
    is_super_admin: number
    created_at: number
    updated_at: number
    phone: number
    phone_confirmed_at: number
    phone_change: number
    phone_change_token: number
    phone_change_sent_at: number
    confirmed_at: number
    email_change_token_current: number
    email_change_confirm_status: number
    banned_until: number
    reauthentication_token: number
    reauthentication_sent_at: number
    is_sso_user: number
    deleted_at: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    email_change_confirm_status?: true
  }

  export type UsersSumAggregateInputType = {
    email_change_confirm_status?: true
  }

  export type UsersMinAggregateInputType = {
    instance_id?: true
    id?: true
    aud?: true
    role?: true
    email?: true
    encrypted_password?: true
    email_confirmed_at?: true
    invited_at?: true
    confirmation_token?: true
    confirmation_sent_at?: true
    recovery_token?: true
    recovery_sent_at?: true
    email_change_token_new?: true
    email_change?: true
    email_change_sent_at?: true
    last_sign_in_at?: true
    is_super_admin?: true
    created_at?: true
    updated_at?: true
    phone?: true
    phone_confirmed_at?: true
    phone_change?: true
    phone_change_token?: true
    phone_change_sent_at?: true
    confirmed_at?: true
    email_change_token_current?: true
    email_change_confirm_status?: true
    banned_until?: true
    reauthentication_token?: true
    reauthentication_sent_at?: true
    is_sso_user?: true
    deleted_at?: true
  }

  export type UsersMaxAggregateInputType = {
    instance_id?: true
    id?: true
    aud?: true
    role?: true
    email?: true
    encrypted_password?: true
    email_confirmed_at?: true
    invited_at?: true
    confirmation_token?: true
    confirmation_sent_at?: true
    recovery_token?: true
    recovery_sent_at?: true
    email_change_token_new?: true
    email_change?: true
    email_change_sent_at?: true
    last_sign_in_at?: true
    is_super_admin?: true
    created_at?: true
    updated_at?: true
    phone?: true
    phone_confirmed_at?: true
    phone_change?: true
    phone_change_token?: true
    phone_change_sent_at?: true
    confirmed_at?: true
    email_change_token_current?: true
    email_change_confirm_status?: true
    banned_until?: true
    reauthentication_token?: true
    reauthentication_sent_at?: true
    is_sso_user?: true
    deleted_at?: true
  }

  export type UsersCountAggregateInputType = {
    instance_id?: true
    id?: true
    aud?: true
    role?: true
    email?: true
    encrypted_password?: true
    email_confirmed_at?: true
    invited_at?: true
    confirmation_token?: true
    confirmation_sent_at?: true
    recovery_token?: true
    recovery_sent_at?: true
    email_change_token_new?: true
    email_change?: true
    email_change_sent_at?: true
    last_sign_in_at?: true
    raw_app_meta_data?: true
    raw_user_meta_data?: true
    is_super_admin?: true
    created_at?: true
    updated_at?: true
    phone?: true
    phone_confirmed_at?: true
    phone_change?: true
    phone_change_token?: true
    phone_change_sent_at?: true
    confirmed_at?: true
    email_change_token_current?: true
    email_change_confirm_status?: true
    banned_until?: true
    reauthentication_token?: true
    reauthentication_sent_at?: true
    is_sso_user?: true
    deleted_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    instance_id: string | null
    id: string
    aud: string | null
    role: string | null
    email: string | null
    encrypted_password: string | null
    email_confirmed_at: Date | null
    invited_at: Date | null
    confirmation_token: string | null
    confirmation_sent_at: Date | null
    recovery_token: string | null
    recovery_sent_at: Date | null
    email_change_token_new: string | null
    email_change: string | null
    email_change_sent_at: Date | null
    last_sign_in_at: Date | null
    raw_app_meta_data: JsonValue | null
    raw_user_meta_data: JsonValue | null
    is_super_admin: boolean | null
    created_at: Date | null
    updated_at: Date | null
    phone: string | null
    phone_confirmed_at: Date | null
    phone_change: string | null
    phone_change_token: string | null
    phone_change_sent_at: Date | null
    confirmed_at: Date | null
    email_change_token_current: string | null
    email_change_confirm_status: number | null
    banned_until: Date | null
    reauthentication_token: string | null
    reauthentication_sent_at: Date | null
    is_sso_user: boolean
    deleted_at: Date | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    aud?: boolean
    role?: boolean
    email?: boolean
    encrypted_password?: boolean
    email_confirmed_at?: boolean
    invited_at?: boolean
    confirmation_token?: boolean
    confirmation_sent_at?: boolean
    recovery_token?: boolean
    recovery_sent_at?: boolean
    email_change_token_new?: boolean
    email_change?: boolean
    email_change_sent_at?: boolean
    last_sign_in_at?: boolean
    raw_app_meta_data?: boolean
    raw_user_meta_data?: boolean
    is_super_admin?: boolean
    created_at?: boolean
    updated_at?: boolean
    phone?: boolean
    phone_confirmed_at?: boolean
    phone_change?: boolean
    phone_change_token?: boolean
    phone_change_sent_at?: boolean
    confirmed_at?: boolean
    email_change_token_current?: boolean
    email_change_confirm_status?: boolean
    banned_until?: boolean
    reauthentication_token?: boolean
    reauthentication_sent_at?: boolean
    is_sso_user?: boolean
    deleted_at?: boolean
    identities?: boolean | users$identitiesArgs<ExtArgs>
    mfa_factors?: boolean | users$mfa_factorsArgs<ExtArgs>
    sessions?: boolean | users$sessionsArgs<ExtArgs>
    reps?: boolean | users$repsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    instance_id?: boolean
    id?: boolean
    aud?: boolean
    role?: boolean
    email?: boolean
    encrypted_password?: boolean
    email_confirmed_at?: boolean
    invited_at?: boolean
    confirmation_token?: boolean
    confirmation_sent_at?: boolean
    recovery_token?: boolean
    recovery_sent_at?: boolean
    email_change_token_new?: boolean
    email_change?: boolean
    email_change_sent_at?: boolean
    last_sign_in_at?: boolean
    raw_app_meta_data?: boolean
    raw_user_meta_data?: boolean
    is_super_admin?: boolean
    created_at?: boolean
    updated_at?: boolean
    phone?: boolean
    phone_confirmed_at?: boolean
    phone_change?: boolean
    phone_change_token?: boolean
    phone_change_sent_at?: boolean
    confirmed_at?: boolean
    email_change_token_current?: boolean
    email_change_confirm_status?: boolean
    banned_until?: boolean
    reauthentication_token?: boolean
    reauthentication_sent_at?: boolean
    is_sso_user?: boolean
    deleted_at?: boolean
  }

  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    identities?: boolean | users$identitiesArgs<ExtArgs>
    mfa_factors?: boolean | users$mfa_factorsArgs<ExtArgs>
    sessions?: boolean | users$sessionsArgs<ExtArgs>
    reps?: boolean | users$repsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      identities: Prisma.$identitiesPayload<ExtArgs>[]
      mfa_factors: Prisma.$mfa_factorsPayload<ExtArgs>[]
      sessions: Prisma.$sessionsPayload<ExtArgs>[]
      reps: Prisma.$repsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      instance_id: string | null
      id: string
      aud: string | null
      role: string | null
      email: string | null
      encrypted_password: string | null
      email_confirmed_at: Date | null
      invited_at: Date | null
      confirmation_token: string | null
      confirmation_sent_at: Date | null
      recovery_token: string | null
      recovery_sent_at: Date | null
      email_change_token_new: string | null
      email_change: string | null
      email_change_sent_at: Date | null
      last_sign_in_at: Date | null
      raw_app_meta_data: Prisma.JsonValue | null
      raw_user_meta_data: Prisma.JsonValue | null
      is_super_admin: boolean | null
      created_at: Date | null
      updated_at: Date | null
      phone: string | null
      phone_confirmed_at: Date | null
      phone_change: string | null
      phone_change_token: string | null
      phone_change_sent_at: Date | null
      confirmed_at: Date | null
      email_change_token_current: string | null
      email_change_confirm_status: number | null
      banned_until: Date | null
      reauthentication_token: string | null
      reauthentication_sent_at: Date | null
      is_sso_user: boolean
      deleted_at: Date | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }


  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `instance_id`
     * const usersWithInstance_idOnly = await prisma.users.findMany({ select: { instance_id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, usersCreateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {usersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, usersDeleteArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpsertArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    identities<T extends users$identitiesArgs<ExtArgs> = {}>(args?: Subset<T, users$identitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, 'findMany'> | Null>;

    mfa_factors<T extends users$mfa_factorsArgs<ExtArgs> = {}>(args?: Subset<T, users$mfa_factorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, 'findMany'> | Null>;

    sessions<T extends users$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, users$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, 'findMany'> | Null>;

    reps<T extends users$repsArgs<ExtArgs> = {}>(args?: Subset<T, users$repsArgs<ExtArgs>>): Prisma__repsClient<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly instance_id: FieldRef<"users", 'String'>
    readonly id: FieldRef<"users", 'String'>
    readonly aud: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly encrypted_password: FieldRef<"users", 'String'>
    readonly email_confirmed_at: FieldRef<"users", 'DateTime'>
    readonly invited_at: FieldRef<"users", 'DateTime'>
    readonly confirmation_token: FieldRef<"users", 'String'>
    readonly confirmation_sent_at: FieldRef<"users", 'DateTime'>
    readonly recovery_token: FieldRef<"users", 'String'>
    readonly recovery_sent_at: FieldRef<"users", 'DateTime'>
    readonly email_change_token_new: FieldRef<"users", 'String'>
    readonly email_change: FieldRef<"users", 'String'>
    readonly email_change_sent_at: FieldRef<"users", 'DateTime'>
    readonly last_sign_in_at: FieldRef<"users", 'DateTime'>
    readonly raw_app_meta_data: FieldRef<"users", 'Json'>
    readonly raw_user_meta_data: FieldRef<"users", 'Json'>
    readonly is_super_admin: FieldRef<"users", 'Boolean'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
    readonly phone: FieldRef<"users", 'String'>
    readonly phone_confirmed_at: FieldRef<"users", 'DateTime'>
    readonly phone_change: FieldRef<"users", 'String'>
    readonly phone_change_token: FieldRef<"users", 'String'>
    readonly phone_change_sent_at: FieldRef<"users", 'DateTime'>
    readonly confirmed_at: FieldRef<"users", 'DateTime'>
    readonly email_change_token_current: FieldRef<"users", 'String'>
    readonly email_change_confirm_status: FieldRef<"users", 'Int'>
    readonly banned_until: FieldRef<"users", 'DateTime'>
    readonly reauthentication_token: FieldRef<"users", 'String'>
    readonly reauthentication_sent_at: FieldRef<"users", 'DateTime'>
    readonly is_sso_user: FieldRef<"users", 'Boolean'>
    readonly deleted_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }


  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
  }


  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }


  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
  }


  /**
   * users.identities
   */
  export type users$identitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: identitiesInclude<ExtArgs> | null
    where?: identitiesWhereInput
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    cursor?: identitiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }


  /**
   * users.mfa_factors
   */
  export type users$mfa_factorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    where?: mfa_factorsWhereInput
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    cursor?: mfa_factorsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }


  /**
   * users.sessions
   */
  export type users$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude<ExtArgs> | null
    where?: sessionsWhereInput
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    cursor?: sessionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }


  /**
   * users.reps
   */
  export type users$repsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    where?: repsWhereInput
  }


  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
  }



  /**
   * Model account_ai_chat
   */

  export type AggregateAccount_ai_chat = {
    _count: Account_ai_chatCountAggregateOutputType | null
    _min: Account_ai_chatMinAggregateOutputType | null
    _max: Account_ai_chatMaxAggregateOutputType | null
  }

  export type Account_ai_chatMinAggregateOutputType = {
    account_id: string | null
    plan_id: string | null
    created_at: Date | null
  }

  export type Account_ai_chatMaxAggregateOutputType = {
    account_id: string | null
    plan_id: string | null
    created_at: Date | null
  }

  export type Account_ai_chatCountAggregateOutputType = {
    account_id: number
    plan_id: number
    created_at: number
    _all: number
  }


  export type Account_ai_chatMinAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
  }

  export type Account_ai_chatMaxAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
  }

  export type Account_ai_chatCountAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
    _all?: true
  }

  export type Account_ai_chatAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_ai_chat to aggregate.
     */
    where?: account_ai_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_ai_chats to fetch.
     */
    orderBy?: account_ai_chatOrderByWithRelationInput | account_ai_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: account_ai_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_ai_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_ai_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned account_ai_chats
    **/
    _count?: true | Account_ai_chatCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Account_ai_chatMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Account_ai_chatMaxAggregateInputType
  }

  export type GetAccount_ai_chatAggregateType<T extends Account_ai_chatAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount_ai_chat]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount_ai_chat[P]>
      : GetScalarType<T[P], AggregateAccount_ai_chat[P]>
  }




  export type account_ai_chatGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_ai_chatWhereInput
    orderBy?: account_ai_chatOrderByWithAggregationInput | account_ai_chatOrderByWithAggregationInput[]
    by: Account_ai_chatScalarFieldEnum[] | Account_ai_chatScalarFieldEnum
    having?: account_ai_chatScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Account_ai_chatCountAggregateInputType | true
    _min?: Account_ai_chatMinAggregateInputType
    _max?: Account_ai_chatMaxAggregateInputType
  }

  export type Account_ai_chatGroupByOutputType = {
    account_id: string
    plan_id: string
    created_at: Date
    _count: Account_ai_chatCountAggregateOutputType | null
    _min: Account_ai_chatMinAggregateOutputType | null
    _max: Account_ai_chatMaxAggregateOutputType | null
  }

  type GetAccount_ai_chatGroupByPayload<T extends account_ai_chatGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Account_ai_chatGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Account_ai_chatGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Account_ai_chatGroupByOutputType[P]>
            : GetScalarType<T[P], Account_ai_chatGroupByOutputType[P]>
        }
      >
    >


  export type account_ai_chatSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    account_id?: boolean
    plan_id?: boolean
    created_at?: boolean
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account_ai_chat"]>

  export type account_ai_chatSelectScalar = {
    account_id?: boolean
    plan_id?: boolean
    created_at?: boolean
  }

  export type account_ai_chatInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }


  export type $account_ai_chatPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "account_ai_chat"
    objects: {
      accounts: Prisma.$accountsPayload<ExtArgs>
      plans: Prisma.$plansPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      account_id: string
      plan_id: string
      created_at: Date
    }, ExtArgs["result"]["account_ai_chat"]>
    composites: {}
  }


  type account_ai_chatGetPayload<S extends boolean | null | undefined | account_ai_chatDefaultArgs> = $Result.GetResult<Prisma.$account_ai_chatPayload, S>

  type account_ai_chatCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<account_ai_chatFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Account_ai_chatCountAggregateInputType | true
    }

  export interface account_ai_chatDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['account_ai_chat'], meta: { name: 'account_ai_chat' } }
    /**
     * Find zero or one Account_ai_chat that matches the filter.
     * @param {account_ai_chatFindUniqueArgs} args - Arguments to find a Account_ai_chat
     * @example
     * // Get one Account_ai_chat
     * const account_ai_chat = await prisma.account_ai_chat.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends account_ai_chatFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, account_ai_chatFindUniqueArgs<ExtArgs>>
    ): Prisma__account_ai_chatClient<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Account_ai_chat that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {account_ai_chatFindUniqueOrThrowArgs} args - Arguments to find a Account_ai_chat
     * @example
     * // Get one Account_ai_chat
     * const account_ai_chat = await prisma.account_ai_chat.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends account_ai_chatFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_ai_chatFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__account_ai_chatClient<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Account_ai_chat that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_ai_chatFindFirstArgs} args - Arguments to find a Account_ai_chat
     * @example
     * // Get one Account_ai_chat
     * const account_ai_chat = await prisma.account_ai_chat.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends account_ai_chatFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, account_ai_chatFindFirstArgs<ExtArgs>>
    ): Prisma__account_ai_chatClient<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Account_ai_chat that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_ai_chatFindFirstOrThrowArgs} args - Arguments to find a Account_ai_chat
     * @example
     * // Get one Account_ai_chat
     * const account_ai_chat = await prisma.account_ai_chat.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends account_ai_chatFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_ai_chatFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__account_ai_chatClient<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Account_ai_chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_ai_chatFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Account_ai_chats
     * const account_ai_chats = await prisma.account_ai_chat.findMany()
     * 
     * // Get first 10 Account_ai_chats
     * const account_ai_chats = await prisma.account_ai_chat.findMany({ take: 10 })
     * 
     * // Only select the `account_id`
     * const account_ai_chatWithAccount_idOnly = await prisma.account_ai_chat.findMany({ select: { account_id: true } })
     * 
    **/
    findMany<T extends account_ai_chatFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_ai_chatFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Account_ai_chat.
     * @param {account_ai_chatCreateArgs} args - Arguments to create a Account_ai_chat.
     * @example
     * // Create one Account_ai_chat
     * const Account_ai_chat = await prisma.account_ai_chat.create({
     *   data: {
     *     // ... data to create a Account_ai_chat
     *   }
     * })
     * 
    **/
    create<T extends account_ai_chatCreateArgs<ExtArgs>>(
      args: SelectSubset<T, account_ai_chatCreateArgs<ExtArgs>>
    ): Prisma__account_ai_chatClient<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Account_ai_chats.
     *     @param {account_ai_chatCreateManyArgs} args - Arguments to create many Account_ai_chats.
     *     @example
     *     // Create many Account_ai_chats
     *     const account_ai_chat = await prisma.account_ai_chat.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends account_ai_chatCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_ai_chatCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Account_ai_chat.
     * @param {account_ai_chatDeleteArgs} args - Arguments to delete one Account_ai_chat.
     * @example
     * // Delete one Account_ai_chat
     * const Account_ai_chat = await prisma.account_ai_chat.delete({
     *   where: {
     *     // ... filter to delete one Account_ai_chat
     *   }
     * })
     * 
    **/
    delete<T extends account_ai_chatDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, account_ai_chatDeleteArgs<ExtArgs>>
    ): Prisma__account_ai_chatClient<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Account_ai_chat.
     * @param {account_ai_chatUpdateArgs} args - Arguments to update one Account_ai_chat.
     * @example
     * // Update one Account_ai_chat
     * const account_ai_chat = await prisma.account_ai_chat.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends account_ai_chatUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, account_ai_chatUpdateArgs<ExtArgs>>
    ): Prisma__account_ai_chatClient<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Account_ai_chats.
     * @param {account_ai_chatDeleteManyArgs} args - Arguments to filter Account_ai_chats to delete.
     * @example
     * // Delete a few Account_ai_chats
     * const { count } = await prisma.account_ai_chat.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends account_ai_chatDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_ai_chatDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Account_ai_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_ai_chatUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Account_ai_chats
     * const account_ai_chat = await prisma.account_ai_chat.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends account_ai_chatUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, account_ai_chatUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account_ai_chat.
     * @param {account_ai_chatUpsertArgs} args - Arguments to update or create a Account_ai_chat.
     * @example
     * // Update or create a Account_ai_chat
     * const account_ai_chat = await prisma.account_ai_chat.upsert({
     *   create: {
     *     // ... data to create a Account_ai_chat
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account_ai_chat we want to update
     *   }
     * })
    **/
    upsert<T extends account_ai_chatUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, account_ai_chatUpsertArgs<ExtArgs>>
    ): Prisma__account_ai_chatClient<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Account_ai_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_ai_chatCountArgs} args - Arguments to filter Account_ai_chats to count.
     * @example
     * // Count the number of Account_ai_chats
     * const count = await prisma.account_ai_chat.count({
     *   where: {
     *     // ... the filter for the Account_ai_chats we want to count
     *   }
     * })
    **/
    count<T extends account_ai_chatCountArgs>(
      args?: Subset<T, account_ai_chatCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Account_ai_chatCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account_ai_chat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Account_ai_chatAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Account_ai_chatAggregateArgs>(args: Subset<T, Account_ai_chatAggregateArgs>): Prisma.PrismaPromise<GetAccount_ai_chatAggregateType<T>>

    /**
     * Group by Account_ai_chat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_ai_chatGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends account_ai_chatGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: account_ai_chatGroupByArgs['orderBy'] }
        : { orderBy?: account_ai_chatGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, account_ai_chatGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccount_ai_chatGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the account_ai_chat model
   */
  readonly fields: account_ai_chatFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for account_ai_chat.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__account_ai_chatClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    accounts<T extends accountsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, accountsDefaultArgs<ExtArgs>>): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    plans<T extends plansDefaultArgs<ExtArgs> = {}>(args?: Subset<T, plansDefaultArgs<ExtArgs>>): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the account_ai_chat model
   */ 
  interface account_ai_chatFieldRefs {
    readonly account_id: FieldRef<"account_ai_chat", 'String'>
    readonly plan_id: FieldRef<"account_ai_chat", 'String'>
    readonly created_at: FieldRef<"account_ai_chat", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * account_ai_chat findUnique
   */
  export type account_ai_chatFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    /**
     * Filter, which account_ai_chat to fetch.
     */
    where: account_ai_chatWhereUniqueInput
  }


  /**
   * account_ai_chat findUniqueOrThrow
   */
  export type account_ai_chatFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    /**
     * Filter, which account_ai_chat to fetch.
     */
    where: account_ai_chatWhereUniqueInput
  }


  /**
   * account_ai_chat findFirst
   */
  export type account_ai_chatFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    /**
     * Filter, which account_ai_chat to fetch.
     */
    where?: account_ai_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_ai_chats to fetch.
     */
    orderBy?: account_ai_chatOrderByWithRelationInput | account_ai_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_ai_chats.
     */
    cursor?: account_ai_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_ai_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_ai_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_ai_chats.
     */
    distinct?: Account_ai_chatScalarFieldEnum | Account_ai_chatScalarFieldEnum[]
  }


  /**
   * account_ai_chat findFirstOrThrow
   */
  export type account_ai_chatFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    /**
     * Filter, which account_ai_chat to fetch.
     */
    where?: account_ai_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_ai_chats to fetch.
     */
    orderBy?: account_ai_chatOrderByWithRelationInput | account_ai_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_ai_chats.
     */
    cursor?: account_ai_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_ai_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_ai_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_ai_chats.
     */
    distinct?: Account_ai_chatScalarFieldEnum | Account_ai_chatScalarFieldEnum[]
  }


  /**
   * account_ai_chat findMany
   */
  export type account_ai_chatFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    /**
     * Filter, which account_ai_chats to fetch.
     */
    where?: account_ai_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_ai_chats to fetch.
     */
    orderBy?: account_ai_chatOrderByWithRelationInput | account_ai_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing account_ai_chats.
     */
    cursor?: account_ai_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_ai_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_ai_chats.
     */
    skip?: number
    distinct?: Account_ai_chatScalarFieldEnum | Account_ai_chatScalarFieldEnum[]
  }


  /**
   * account_ai_chat create
   */
  export type account_ai_chatCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    /**
     * The data needed to create a account_ai_chat.
     */
    data: XOR<account_ai_chatCreateInput, account_ai_chatUncheckedCreateInput>
  }


  /**
   * account_ai_chat createMany
   */
  export type account_ai_chatCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many account_ai_chats.
     */
    data: account_ai_chatCreateManyInput | account_ai_chatCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * account_ai_chat update
   */
  export type account_ai_chatUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    /**
     * The data needed to update a account_ai_chat.
     */
    data: XOR<account_ai_chatUpdateInput, account_ai_chatUncheckedUpdateInput>
    /**
     * Choose, which account_ai_chat to update.
     */
    where: account_ai_chatWhereUniqueInput
  }


  /**
   * account_ai_chat updateMany
   */
  export type account_ai_chatUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update account_ai_chats.
     */
    data: XOR<account_ai_chatUpdateManyMutationInput, account_ai_chatUncheckedUpdateManyInput>
    /**
     * Filter which account_ai_chats to update
     */
    where?: account_ai_chatWhereInput
  }


  /**
   * account_ai_chat upsert
   */
  export type account_ai_chatUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    /**
     * The filter to search for the account_ai_chat to update in case it exists.
     */
    where: account_ai_chatWhereUniqueInput
    /**
     * In case the account_ai_chat found by the `where` argument doesn't exist, create a new account_ai_chat with this data.
     */
    create: XOR<account_ai_chatCreateInput, account_ai_chatUncheckedCreateInput>
    /**
     * In case the account_ai_chat was found with the provided `where` argument, update it with this data.
     */
    update: XOR<account_ai_chatUpdateInput, account_ai_chatUncheckedUpdateInput>
  }


  /**
   * account_ai_chat delete
   */
  export type account_ai_chatDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    /**
     * Filter which account_ai_chat to delete.
     */
    where: account_ai_chatWhereUniqueInput
  }


  /**
   * account_ai_chat deleteMany
   */
  export type account_ai_chatDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_ai_chats to delete
     */
    where?: account_ai_chatWhereInput
  }


  /**
   * account_ai_chat without action
   */
  export type account_ai_chatDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
  }



  /**
   * Model account_blog_post_instances
   */

  export type AggregateAccount_blog_post_instances = {
    _count: Account_blog_post_instancesCountAggregateOutputType | null
    _min: Account_blog_post_instancesMinAggregateOutputType | null
    _max: Account_blog_post_instancesMaxAggregateOutputType | null
  }

  export type Account_blog_post_instancesMinAggregateOutputType = {
    blog_post_id: string | null
    account_id: string | null
    plan_id: string | null
    post_content: string | null
    created_at: Date | null
  }

  export type Account_blog_post_instancesMaxAggregateOutputType = {
    blog_post_id: string | null
    account_id: string | null
    plan_id: string | null
    post_content: string | null
    created_at: Date | null
  }

  export type Account_blog_post_instancesCountAggregateOutputType = {
    blog_post_id: number
    account_id: number
    plan_id: number
    post_content: number
    created_at: number
    _all: number
  }


  export type Account_blog_post_instancesMinAggregateInputType = {
    blog_post_id?: true
    account_id?: true
    plan_id?: true
    post_content?: true
    created_at?: true
  }

  export type Account_blog_post_instancesMaxAggregateInputType = {
    blog_post_id?: true
    account_id?: true
    plan_id?: true
    post_content?: true
    created_at?: true
  }

  export type Account_blog_post_instancesCountAggregateInputType = {
    blog_post_id?: true
    account_id?: true
    plan_id?: true
    post_content?: true
    created_at?: true
    _all?: true
  }

  export type Account_blog_post_instancesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_blog_post_instances to aggregate.
     */
    where?: account_blog_post_instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_blog_post_instances to fetch.
     */
    orderBy?: account_blog_post_instancesOrderByWithRelationInput | account_blog_post_instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: account_blog_post_instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_blog_post_instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_blog_post_instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned account_blog_post_instances
    **/
    _count?: true | Account_blog_post_instancesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Account_blog_post_instancesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Account_blog_post_instancesMaxAggregateInputType
  }

  export type GetAccount_blog_post_instancesAggregateType<T extends Account_blog_post_instancesAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount_blog_post_instances]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount_blog_post_instances[P]>
      : GetScalarType<T[P], AggregateAccount_blog_post_instances[P]>
  }




  export type account_blog_post_instancesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_blog_post_instancesWhereInput
    orderBy?: account_blog_post_instancesOrderByWithAggregationInput | account_blog_post_instancesOrderByWithAggregationInput[]
    by: Account_blog_post_instancesScalarFieldEnum[] | Account_blog_post_instancesScalarFieldEnum
    having?: account_blog_post_instancesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Account_blog_post_instancesCountAggregateInputType | true
    _min?: Account_blog_post_instancesMinAggregateInputType
    _max?: Account_blog_post_instancesMaxAggregateInputType
  }

  export type Account_blog_post_instancesGroupByOutputType = {
    blog_post_id: string
    account_id: string
    plan_id: string
    post_content: string
    created_at: Date
    _count: Account_blog_post_instancesCountAggregateOutputType | null
    _min: Account_blog_post_instancesMinAggregateOutputType | null
    _max: Account_blog_post_instancesMaxAggregateOutputType | null
  }

  type GetAccount_blog_post_instancesGroupByPayload<T extends account_blog_post_instancesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Account_blog_post_instancesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Account_blog_post_instancesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Account_blog_post_instancesGroupByOutputType[P]>
            : GetScalarType<T[P], Account_blog_post_instancesGroupByOutputType[P]>
        }
      >
    >


  export type account_blog_post_instancesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    blog_post_id?: boolean
    account_id?: boolean
    plan_id?: boolean
    post_content?: boolean
    created_at?: boolean
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account_blog_post_instances"]>

  export type account_blog_post_instancesSelectScalar = {
    blog_post_id?: boolean
    account_id?: boolean
    plan_id?: boolean
    post_content?: boolean
    created_at?: boolean
  }

  export type account_blog_post_instancesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }


  export type $account_blog_post_instancesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "account_blog_post_instances"
    objects: {
      accounts: Prisma.$accountsPayload<ExtArgs>
      plans: Prisma.$plansPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      blog_post_id: string
      account_id: string
      plan_id: string
      post_content: string
      created_at: Date
    }, ExtArgs["result"]["account_blog_post_instances"]>
    composites: {}
  }


  type account_blog_post_instancesGetPayload<S extends boolean | null | undefined | account_blog_post_instancesDefaultArgs> = $Result.GetResult<Prisma.$account_blog_post_instancesPayload, S>

  type account_blog_post_instancesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<account_blog_post_instancesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Account_blog_post_instancesCountAggregateInputType | true
    }

  export interface account_blog_post_instancesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['account_blog_post_instances'], meta: { name: 'account_blog_post_instances' } }
    /**
     * Find zero or one Account_blog_post_instances that matches the filter.
     * @param {account_blog_post_instancesFindUniqueArgs} args - Arguments to find a Account_blog_post_instances
     * @example
     * // Get one Account_blog_post_instances
     * const account_blog_post_instances = await prisma.account_blog_post_instances.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends account_blog_post_instancesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_post_instancesFindUniqueArgs<ExtArgs>>
    ): Prisma__account_blog_post_instancesClient<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Account_blog_post_instances that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {account_blog_post_instancesFindUniqueOrThrowArgs} args - Arguments to find a Account_blog_post_instances
     * @example
     * // Get one Account_blog_post_instances
     * const account_blog_post_instances = await prisma.account_blog_post_instances.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends account_blog_post_instancesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_post_instancesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__account_blog_post_instancesClient<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Account_blog_post_instances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_post_instancesFindFirstArgs} args - Arguments to find a Account_blog_post_instances
     * @example
     * // Get one Account_blog_post_instances
     * const account_blog_post_instances = await prisma.account_blog_post_instances.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends account_blog_post_instancesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_post_instancesFindFirstArgs<ExtArgs>>
    ): Prisma__account_blog_post_instancesClient<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Account_blog_post_instances that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_post_instancesFindFirstOrThrowArgs} args - Arguments to find a Account_blog_post_instances
     * @example
     * // Get one Account_blog_post_instances
     * const account_blog_post_instances = await prisma.account_blog_post_instances.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends account_blog_post_instancesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_post_instancesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__account_blog_post_instancesClient<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Account_blog_post_instances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_post_instancesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Account_blog_post_instances
     * const account_blog_post_instances = await prisma.account_blog_post_instances.findMany()
     * 
     * // Get first 10 Account_blog_post_instances
     * const account_blog_post_instances = await prisma.account_blog_post_instances.findMany({ take: 10 })
     * 
     * // Only select the `blog_post_id`
     * const account_blog_post_instancesWithBlog_post_idOnly = await prisma.account_blog_post_instances.findMany({ select: { blog_post_id: true } })
     * 
    **/
    findMany<T extends account_blog_post_instancesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_post_instancesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Account_blog_post_instances.
     * @param {account_blog_post_instancesCreateArgs} args - Arguments to create a Account_blog_post_instances.
     * @example
     * // Create one Account_blog_post_instances
     * const Account_blog_post_instances = await prisma.account_blog_post_instances.create({
     *   data: {
     *     // ... data to create a Account_blog_post_instances
     *   }
     * })
     * 
    **/
    create<T extends account_blog_post_instancesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_post_instancesCreateArgs<ExtArgs>>
    ): Prisma__account_blog_post_instancesClient<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Account_blog_post_instances.
     *     @param {account_blog_post_instancesCreateManyArgs} args - Arguments to create many Account_blog_post_instances.
     *     @example
     *     // Create many Account_blog_post_instances
     *     const account_blog_post_instances = await prisma.account_blog_post_instances.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends account_blog_post_instancesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_post_instancesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Account_blog_post_instances.
     * @param {account_blog_post_instancesDeleteArgs} args - Arguments to delete one Account_blog_post_instances.
     * @example
     * // Delete one Account_blog_post_instances
     * const Account_blog_post_instances = await prisma.account_blog_post_instances.delete({
     *   where: {
     *     // ... filter to delete one Account_blog_post_instances
     *   }
     * })
     * 
    **/
    delete<T extends account_blog_post_instancesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_post_instancesDeleteArgs<ExtArgs>>
    ): Prisma__account_blog_post_instancesClient<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Account_blog_post_instances.
     * @param {account_blog_post_instancesUpdateArgs} args - Arguments to update one Account_blog_post_instances.
     * @example
     * // Update one Account_blog_post_instances
     * const account_blog_post_instances = await prisma.account_blog_post_instances.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends account_blog_post_instancesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_post_instancesUpdateArgs<ExtArgs>>
    ): Prisma__account_blog_post_instancesClient<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Account_blog_post_instances.
     * @param {account_blog_post_instancesDeleteManyArgs} args - Arguments to filter Account_blog_post_instances to delete.
     * @example
     * // Delete a few Account_blog_post_instances
     * const { count } = await prisma.account_blog_post_instances.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends account_blog_post_instancesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_post_instancesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Account_blog_post_instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_post_instancesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Account_blog_post_instances
     * const account_blog_post_instances = await prisma.account_blog_post_instances.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends account_blog_post_instancesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_post_instancesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account_blog_post_instances.
     * @param {account_blog_post_instancesUpsertArgs} args - Arguments to update or create a Account_blog_post_instances.
     * @example
     * // Update or create a Account_blog_post_instances
     * const account_blog_post_instances = await prisma.account_blog_post_instances.upsert({
     *   create: {
     *     // ... data to create a Account_blog_post_instances
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account_blog_post_instances we want to update
     *   }
     * })
    **/
    upsert<T extends account_blog_post_instancesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_post_instancesUpsertArgs<ExtArgs>>
    ): Prisma__account_blog_post_instancesClient<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Account_blog_post_instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_post_instancesCountArgs} args - Arguments to filter Account_blog_post_instances to count.
     * @example
     * // Count the number of Account_blog_post_instances
     * const count = await prisma.account_blog_post_instances.count({
     *   where: {
     *     // ... the filter for the Account_blog_post_instances we want to count
     *   }
     * })
    **/
    count<T extends account_blog_post_instancesCountArgs>(
      args?: Subset<T, account_blog_post_instancesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Account_blog_post_instancesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account_blog_post_instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Account_blog_post_instancesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Account_blog_post_instancesAggregateArgs>(args: Subset<T, Account_blog_post_instancesAggregateArgs>): Prisma.PrismaPromise<GetAccount_blog_post_instancesAggregateType<T>>

    /**
     * Group by Account_blog_post_instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_post_instancesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends account_blog_post_instancesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: account_blog_post_instancesGroupByArgs['orderBy'] }
        : { orderBy?: account_blog_post_instancesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, account_blog_post_instancesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccount_blog_post_instancesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the account_blog_post_instances model
   */
  readonly fields: account_blog_post_instancesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for account_blog_post_instances.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__account_blog_post_instancesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    accounts<T extends accountsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, accountsDefaultArgs<ExtArgs>>): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    plans<T extends plansDefaultArgs<ExtArgs> = {}>(args?: Subset<T, plansDefaultArgs<ExtArgs>>): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the account_blog_post_instances model
   */ 
  interface account_blog_post_instancesFieldRefs {
    readonly blog_post_id: FieldRef<"account_blog_post_instances", 'String'>
    readonly account_id: FieldRef<"account_blog_post_instances", 'String'>
    readonly plan_id: FieldRef<"account_blog_post_instances", 'String'>
    readonly post_content: FieldRef<"account_blog_post_instances", 'String'>
    readonly created_at: FieldRef<"account_blog_post_instances", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * account_blog_post_instances findUnique
   */
  export type account_blog_post_instancesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    /**
     * Filter, which account_blog_post_instances to fetch.
     */
    where: account_blog_post_instancesWhereUniqueInput
  }


  /**
   * account_blog_post_instances findUniqueOrThrow
   */
  export type account_blog_post_instancesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    /**
     * Filter, which account_blog_post_instances to fetch.
     */
    where: account_blog_post_instancesWhereUniqueInput
  }


  /**
   * account_blog_post_instances findFirst
   */
  export type account_blog_post_instancesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    /**
     * Filter, which account_blog_post_instances to fetch.
     */
    where?: account_blog_post_instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_blog_post_instances to fetch.
     */
    orderBy?: account_blog_post_instancesOrderByWithRelationInput | account_blog_post_instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_blog_post_instances.
     */
    cursor?: account_blog_post_instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_blog_post_instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_blog_post_instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_blog_post_instances.
     */
    distinct?: Account_blog_post_instancesScalarFieldEnum | Account_blog_post_instancesScalarFieldEnum[]
  }


  /**
   * account_blog_post_instances findFirstOrThrow
   */
  export type account_blog_post_instancesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    /**
     * Filter, which account_blog_post_instances to fetch.
     */
    where?: account_blog_post_instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_blog_post_instances to fetch.
     */
    orderBy?: account_blog_post_instancesOrderByWithRelationInput | account_blog_post_instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_blog_post_instances.
     */
    cursor?: account_blog_post_instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_blog_post_instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_blog_post_instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_blog_post_instances.
     */
    distinct?: Account_blog_post_instancesScalarFieldEnum | Account_blog_post_instancesScalarFieldEnum[]
  }


  /**
   * account_blog_post_instances findMany
   */
  export type account_blog_post_instancesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    /**
     * Filter, which account_blog_post_instances to fetch.
     */
    where?: account_blog_post_instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_blog_post_instances to fetch.
     */
    orderBy?: account_blog_post_instancesOrderByWithRelationInput | account_blog_post_instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing account_blog_post_instances.
     */
    cursor?: account_blog_post_instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_blog_post_instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_blog_post_instances.
     */
    skip?: number
    distinct?: Account_blog_post_instancesScalarFieldEnum | Account_blog_post_instancesScalarFieldEnum[]
  }


  /**
   * account_blog_post_instances create
   */
  export type account_blog_post_instancesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    /**
     * The data needed to create a account_blog_post_instances.
     */
    data: XOR<account_blog_post_instancesCreateInput, account_blog_post_instancesUncheckedCreateInput>
  }


  /**
   * account_blog_post_instances createMany
   */
  export type account_blog_post_instancesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many account_blog_post_instances.
     */
    data: account_blog_post_instancesCreateManyInput | account_blog_post_instancesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * account_blog_post_instances update
   */
  export type account_blog_post_instancesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    /**
     * The data needed to update a account_blog_post_instances.
     */
    data: XOR<account_blog_post_instancesUpdateInput, account_blog_post_instancesUncheckedUpdateInput>
    /**
     * Choose, which account_blog_post_instances to update.
     */
    where: account_blog_post_instancesWhereUniqueInput
  }


  /**
   * account_blog_post_instances updateMany
   */
  export type account_blog_post_instancesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update account_blog_post_instances.
     */
    data: XOR<account_blog_post_instancesUpdateManyMutationInput, account_blog_post_instancesUncheckedUpdateManyInput>
    /**
     * Filter which account_blog_post_instances to update
     */
    where?: account_blog_post_instancesWhereInput
  }


  /**
   * account_blog_post_instances upsert
   */
  export type account_blog_post_instancesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    /**
     * The filter to search for the account_blog_post_instances to update in case it exists.
     */
    where: account_blog_post_instancesWhereUniqueInput
    /**
     * In case the account_blog_post_instances found by the `where` argument doesn't exist, create a new account_blog_post_instances with this data.
     */
    create: XOR<account_blog_post_instancesCreateInput, account_blog_post_instancesUncheckedCreateInput>
    /**
     * In case the account_blog_post_instances was found with the provided `where` argument, update it with this data.
     */
    update: XOR<account_blog_post_instancesUpdateInput, account_blog_post_instancesUncheckedUpdateInput>
  }


  /**
   * account_blog_post_instances delete
   */
  export type account_blog_post_instancesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    /**
     * Filter which account_blog_post_instances to delete.
     */
    where: account_blog_post_instancesWhereUniqueInput
  }


  /**
   * account_blog_post_instances deleteMany
   */
  export type account_blog_post_instancesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_blog_post_instances to delete
     */
    where?: account_blog_post_instancesWhereInput
  }


  /**
   * account_blog_post_instances without action
   */
  export type account_blog_post_instancesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
  }



  /**
   * Model account_blog_posts
   */

  export type AggregateAccount_blog_posts = {
    _count: Account_blog_postsCountAggregateOutputType | null
    _min: Account_blog_postsMinAggregateOutputType | null
    _max: Account_blog_postsMaxAggregateOutputType | null
  }

  export type Account_blog_postsMinAggregateOutputType = {
    account_id: string | null
    plan_id: string | null
    created_at: Date | null
  }

  export type Account_blog_postsMaxAggregateOutputType = {
    account_id: string | null
    plan_id: string | null
    created_at: Date | null
  }

  export type Account_blog_postsCountAggregateOutputType = {
    account_id: number
    plan_id: number
    created_at: number
    _all: number
  }


  export type Account_blog_postsMinAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
  }

  export type Account_blog_postsMaxAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
  }

  export type Account_blog_postsCountAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
    _all?: true
  }

  export type Account_blog_postsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_blog_posts to aggregate.
     */
    where?: account_blog_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_blog_posts to fetch.
     */
    orderBy?: account_blog_postsOrderByWithRelationInput | account_blog_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: account_blog_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_blog_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_blog_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned account_blog_posts
    **/
    _count?: true | Account_blog_postsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Account_blog_postsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Account_blog_postsMaxAggregateInputType
  }

  export type GetAccount_blog_postsAggregateType<T extends Account_blog_postsAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount_blog_posts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount_blog_posts[P]>
      : GetScalarType<T[P], AggregateAccount_blog_posts[P]>
  }




  export type account_blog_postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_blog_postsWhereInput
    orderBy?: account_blog_postsOrderByWithAggregationInput | account_blog_postsOrderByWithAggregationInput[]
    by: Account_blog_postsScalarFieldEnum[] | Account_blog_postsScalarFieldEnum
    having?: account_blog_postsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Account_blog_postsCountAggregateInputType | true
    _min?: Account_blog_postsMinAggregateInputType
    _max?: Account_blog_postsMaxAggregateInputType
  }

  export type Account_blog_postsGroupByOutputType = {
    account_id: string
    plan_id: string
    created_at: Date
    _count: Account_blog_postsCountAggregateOutputType | null
    _min: Account_blog_postsMinAggregateOutputType | null
    _max: Account_blog_postsMaxAggregateOutputType | null
  }

  type GetAccount_blog_postsGroupByPayload<T extends account_blog_postsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Account_blog_postsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Account_blog_postsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Account_blog_postsGroupByOutputType[P]>
            : GetScalarType<T[P], Account_blog_postsGroupByOutputType[P]>
        }
      >
    >


  export type account_blog_postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    account_id?: boolean
    plan_id?: boolean
    created_at?: boolean
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account_blog_posts"]>

  export type account_blog_postsSelectScalar = {
    account_id?: boolean
    plan_id?: boolean
    created_at?: boolean
  }

  export type account_blog_postsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }


  export type $account_blog_postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "account_blog_posts"
    objects: {
      accounts: Prisma.$accountsPayload<ExtArgs>
      plans: Prisma.$plansPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      account_id: string
      plan_id: string
      created_at: Date
    }, ExtArgs["result"]["account_blog_posts"]>
    composites: {}
  }


  type account_blog_postsGetPayload<S extends boolean | null | undefined | account_blog_postsDefaultArgs> = $Result.GetResult<Prisma.$account_blog_postsPayload, S>

  type account_blog_postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<account_blog_postsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Account_blog_postsCountAggregateInputType | true
    }

  export interface account_blog_postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['account_blog_posts'], meta: { name: 'account_blog_posts' } }
    /**
     * Find zero or one Account_blog_posts that matches the filter.
     * @param {account_blog_postsFindUniqueArgs} args - Arguments to find a Account_blog_posts
     * @example
     * // Get one Account_blog_posts
     * const account_blog_posts = await prisma.account_blog_posts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends account_blog_postsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_postsFindUniqueArgs<ExtArgs>>
    ): Prisma__account_blog_postsClient<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Account_blog_posts that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {account_blog_postsFindUniqueOrThrowArgs} args - Arguments to find a Account_blog_posts
     * @example
     * // Get one Account_blog_posts
     * const account_blog_posts = await prisma.account_blog_posts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends account_blog_postsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_postsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__account_blog_postsClient<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Account_blog_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_postsFindFirstArgs} args - Arguments to find a Account_blog_posts
     * @example
     * // Get one Account_blog_posts
     * const account_blog_posts = await prisma.account_blog_posts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends account_blog_postsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_postsFindFirstArgs<ExtArgs>>
    ): Prisma__account_blog_postsClient<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Account_blog_posts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_postsFindFirstOrThrowArgs} args - Arguments to find a Account_blog_posts
     * @example
     * // Get one Account_blog_posts
     * const account_blog_posts = await prisma.account_blog_posts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends account_blog_postsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_postsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__account_blog_postsClient<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Account_blog_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_postsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Account_blog_posts
     * const account_blog_posts = await prisma.account_blog_posts.findMany()
     * 
     * // Get first 10 Account_blog_posts
     * const account_blog_posts = await prisma.account_blog_posts.findMany({ take: 10 })
     * 
     * // Only select the `account_id`
     * const account_blog_postsWithAccount_idOnly = await prisma.account_blog_posts.findMany({ select: { account_id: true } })
     * 
    **/
    findMany<T extends account_blog_postsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_postsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Account_blog_posts.
     * @param {account_blog_postsCreateArgs} args - Arguments to create a Account_blog_posts.
     * @example
     * // Create one Account_blog_posts
     * const Account_blog_posts = await prisma.account_blog_posts.create({
     *   data: {
     *     // ... data to create a Account_blog_posts
     *   }
     * })
     * 
    **/
    create<T extends account_blog_postsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_postsCreateArgs<ExtArgs>>
    ): Prisma__account_blog_postsClient<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Account_blog_posts.
     *     @param {account_blog_postsCreateManyArgs} args - Arguments to create many Account_blog_posts.
     *     @example
     *     // Create many Account_blog_posts
     *     const account_blog_posts = await prisma.account_blog_posts.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends account_blog_postsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_postsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Account_blog_posts.
     * @param {account_blog_postsDeleteArgs} args - Arguments to delete one Account_blog_posts.
     * @example
     * // Delete one Account_blog_posts
     * const Account_blog_posts = await prisma.account_blog_posts.delete({
     *   where: {
     *     // ... filter to delete one Account_blog_posts
     *   }
     * })
     * 
    **/
    delete<T extends account_blog_postsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_postsDeleteArgs<ExtArgs>>
    ): Prisma__account_blog_postsClient<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Account_blog_posts.
     * @param {account_blog_postsUpdateArgs} args - Arguments to update one Account_blog_posts.
     * @example
     * // Update one Account_blog_posts
     * const account_blog_posts = await prisma.account_blog_posts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends account_blog_postsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_postsUpdateArgs<ExtArgs>>
    ): Prisma__account_blog_postsClient<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Account_blog_posts.
     * @param {account_blog_postsDeleteManyArgs} args - Arguments to filter Account_blog_posts to delete.
     * @example
     * // Delete a few Account_blog_posts
     * const { count } = await prisma.account_blog_posts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends account_blog_postsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_blog_postsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Account_blog_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_postsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Account_blog_posts
     * const account_blog_posts = await prisma.account_blog_posts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends account_blog_postsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_postsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account_blog_posts.
     * @param {account_blog_postsUpsertArgs} args - Arguments to update or create a Account_blog_posts.
     * @example
     * // Update or create a Account_blog_posts
     * const account_blog_posts = await prisma.account_blog_posts.upsert({
     *   create: {
     *     // ... data to create a Account_blog_posts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account_blog_posts we want to update
     *   }
     * })
    **/
    upsert<T extends account_blog_postsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, account_blog_postsUpsertArgs<ExtArgs>>
    ): Prisma__account_blog_postsClient<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Account_blog_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_postsCountArgs} args - Arguments to filter Account_blog_posts to count.
     * @example
     * // Count the number of Account_blog_posts
     * const count = await prisma.account_blog_posts.count({
     *   where: {
     *     // ... the filter for the Account_blog_posts we want to count
     *   }
     * })
    **/
    count<T extends account_blog_postsCountArgs>(
      args?: Subset<T, account_blog_postsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Account_blog_postsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account_blog_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Account_blog_postsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Account_blog_postsAggregateArgs>(args: Subset<T, Account_blog_postsAggregateArgs>): Prisma.PrismaPromise<GetAccount_blog_postsAggregateType<T>>

    /**
     * Group by Account_blog_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_blog_postsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends account_blog_postsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: account_blog_postsGroupByArgs['orderBy'] }
        : { orderBy?: account_blog_postsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, account_blog_postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccount_blog_postsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the account_blog_posts model
   */
  readonly fields: account_blog_postsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for account_blog_posts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__account_blog_postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    accounts<T extends accountsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, accountsDefaultArgs<ExtArgs>>): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    plans<T extends plansDefaultArgs<ExtArgs> = {}>(args?: Subset<T, plansDefaultArgs<ExtArgs>>): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the account_blog_posts model
   */ 
  interface account_blog_postsFieldRefs {
    readonly account_id: FieldRef<"account_blog_posts", 'String'>
    readonly plan_id: FieldRef<"account_blog_posts", 'String'>
    readonly created_at: FieldRef<"account_blog_posts", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * account_blog_posts findUnique
   */
  export type account_blog_postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    /**
     * Filter, which account_blog_posts to fetch.
     */
    where: account_blog_postsWhereUniqueInput
  }


  /**
   * account_blog_posts findUniqueOrThrow
   */
  export type account_blog_postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    /**
     * Filter, which account_blog_posts to fetch.
     */
    where: account_blog_postsWhereUniqueInput
  }


  /**
   * account_blog_posts findFirst
   */
  export type account_blog_postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    /**
     * Filter, which account_blog_posts to fetch.
     */
    where?: account_blog_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_blog_posts to fetch.
     */
    orderBy?: account_blog_postsOrderByWithRelationInput | account_blog_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_blog_posts.
     */
    cursor?: account_blog_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_blog_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_blog_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_blog_posts.
     */
    distinct?: Account_blog_postsScalarFieldEnum | Account_blog_postsScalarFieldEnum[]
  }


  /**
   * account_blog_posts findFirstOrThrow
   */
  export type account_blog_postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    /**
     * Filter, which account_blog_posts to fetch.
     */
    where?: account_blog_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_blog_posts to fetch.
     */
    orderBy?: account_blog_postsOrderByWithRelationInput | account_blog_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_blog_posts.
     */
    cursor?: account_blog_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_blog_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_blog_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_blog_posts.
     */
    distinct?: Account_blog_postsScalarFieldEnum | Account_blog_postsScalarFieldEnum[]
  }


  /**
   * account_blog_posts findMany
   */
  export type account_blog_postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    /**
     * Filter, which account_blog_posts to fetch.
     */
    where?: account_blog_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_blog_posts to fetch.
     */
    orderBy?: account_blog_postsOrderByWithRelationInput | account_blog_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing account_blog_posts.
     */
    cursor?: account_blog_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_blog_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_blog_posts.
     */
    skip?: number
    distinct?: Account_blog_postsScalarFieldEnum | Account_blog_postsScalarFieldEnum[]
  }


  /**
   * account_blog_posts create
   */
  export type account_blog_postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    /**
     * The data needed to create a account_blog_posts.
     */
    data: XOR<account_blog_postsCreateInput, account_blog_postsUncheckedCreateInput>
  }


  /**
   * account_blog_posts createMany
   */
  export type account_blog_postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many account_blog_posts.
     */
    data: account_blog_postsCreateManyInput | account_blog_postsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * account_blog_posts update
   */
  export type account_blog_postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    /**
     * The data needed to update a account_blog_posts.
     */
    data: XOR<account_blog_postsUpdateInput, account_blog_postsUncheckedUpdateInput>
    /**
     * Choose, which account_blog_posts to update.
     */
    where: account_blog_postsWhereUniqueInput
  }


  /**
   * account_blog_posts updateMany
   */
  export type account_blog_postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update account_blog_posts.
     */
    data: XOR<account_blog_postsUpdateManyMutationInput, account_blog_postsUncheckedUpdateManyInput>
    /**
     * Filter which account_blog_posts to update
     */
    where?: account_blog_postsWhereInput
  }


  /**
   * account_blog_posts upsert
   */
  export type account_blog_postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    /**
     * The filter to search for the account_blog_posts to update in case it exists.
     */
    where: account_blog_postsWhereUniqueInput
    /**
     * In case the account_blog_posts found by the `where` argument doesn't exist, create a new account_blog_posts with this data.
     */
    create: XOR<account_blog_postsCreateInput, account_blog_postsUncheckedCreateInput>
    /**
     * In case the account_blog_posts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<account_blog_postsUpdateInput, account_blog_postsUncheckedUpdateInput>
  }


  /**
   * account_blog_posts delete
   */
  export type account_blog_postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    /**
     * Filter which account_blog_posts to delete.
     */
    where: account_blog_postsWhereUniqueInput
  }


  /**
   * account_blog_posts deleteMany
   */
  export type account_blog_postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_blog_posts to delete
     */
    where?: account_blog_postsWhereInput
  }


  /**
   * account_blog_posts without action
   */
  export type account_blog_postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
  }



  /**
   * Model account_plans
   */

  export type AggregateAccount_plans = {
    _count: Account_plansCountAggregateOutputType | null
    _min: Account_plansMinAggregateOutputType | null
    _max: Account_plansMaxAggregateOutputType | null
  }

  export type Account_plansMinAggregateOutputType = {
    account_id: string | null
    plan_id: string | null
    created_at: Date | null
  }

  export type Account_plansMaxAggregateOutputType = {
    account_id: string | null
    plan_id: string | null
    created_at: Date | null
  }

  export type Account_plansCountAggregateOutputType = {
    account_id: number
    plan_id: number
    created_at: number
    _all: number
  }


  export type Account_plansMinAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
  }

  export type Account_plansMaxAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
  }

  export type Account_plansCountAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
    _all?: true
  }

  export type Account_plansAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_plans to aggregate.
     */
    where?: account_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_plans to fetch.
     */
    orderBy?: account_plansOrderByWithRelationInput | account_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: account_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned account_plans
    **/
    _count?: true | Account_plansCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Account_plansMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Account_plansMaxAggregateInputType
  }

  export type GetAccount_plansAggregateType<T extends Account_plansAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount_plans]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount_plans[P]>
      : GetScalarType<T[P], AggregateAccount_plans[P]>
  }




  export type account_plansGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_plansWhereInput
    orderBy?: account_plansOrderByWithAggregationInput | account_plansOrderByWithAggregationInput[]
    by: Account_plansScalarFieldEnum[] | Account_plansScalarFieldEnum
    having?: account_plansScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Account_plansCountAggregateInputType | true
    _min?: Account_plansMinAggregateInputType
    _max?: Account_plansMaxAggregateInputType
  }

  export type Account_plansGroupByOutputType = {
    account_id: string
    plan_id: string
    created_at: Date
    _count: Account_plansCountAggregateOutputType | null
    _min: Account_plansMinAggregateOutputType | null
    _max: Account_plansMaxAggregateOutputType | null
  }

  type GetAccount_plansGroupByPayload<T extends account_plansGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Account_plansGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Account_plansGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Account_plansGroupByOutputType[P]>
            : GetScalarType<T[P], Account_plansGroupByOutputType[P]>
        }
      >
    >


  export type account_plansSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    account_id?: boolean
    plan_id?: boolean
    created_at?: boolean
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account_plans"]>

  export type account_plansSelectScalar = {
    account_id?: boolean
    plan_id?: boolean
    created_at?: boolean
  }

  export type account_plansInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }


  export type $account_plansPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "account_plans"
    objects: {
      accounts: Prisma.$accountsPayload<ExtArgs>
      plans: Prisma.$plansPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      account_id: string
      plan_id: string
      created_at: Date
    }, ExtArgs["result"]["account_plans"]>
    composites: {}
  }


  type account_plansGetPayload<S extends boolean | null | undefined | account_plansDefaultArgs> = $Result.GetResult<Prisma.$account_plansPayload, S>

  type account_plansCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<account_plansFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Account_plansCountAggregateInputType | true
    }

  export interface account_plansDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['account_plans'], meta: { name: 'account_plans' } }
    /**
     * Find zero or one Account_plans that matches the filter.
     * @param {account_plansFindUniqueArgs} args - Arguments to find a Account_plans
     * @example
     * // Get one Account_plans
     * const account_plans = await prisma.account_plans.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends account_plansFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, account_plansFindUniqueArgs<ExtArgs>>
    ): Prisma__account_plansClient<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Account_plans that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {account_plansFindUniqueOrThrowArgs} args - Arguments to find a Account_plans
     * @example
     * // Get one Account_plans
     * const account_plans = await prisma.account_plans.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends account_plansFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_plansFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__account_plansClient<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Account_plans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_plansFindFirstArgs} args - Arguments to find a Account_plans
     * @example
     * // Get one Account_plans
     * const account_plans = await prisma.account_plans.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends account_plansFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, account_plansFindFirstArgs<ExtArgs>>
    ): Prisma__account_plansClient<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Account_plans that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_plansFindFirstOrThrowArgs} args - Arguments to find a Account_plans
     * @example
     * // Get one Account_plans
     * const account_plans = await prisma.account_plans.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends account_plansFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_plansFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__account_plansClient<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Account_plans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_plansFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Account_plans
     * const account_plans = await prisma.account_plans.findMany()
     * 
     * // Get first 10 Account_plans
     * const account_plans = await prisma.account_plans.findMany({ take: 10 })
     * 
     * // Only select the `account_id`
     * const account_plansWithAccount_idOnly = await prisma.account_plans.findMany({ select: { account_id: true } })
     * 
    **/
    findMany<T extends account_plansFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_plansFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Account_plans.
     * @param {account_plansCreateArgs} args - Arguments to create a Account_plans.
     * @example
     * // Create one Account_plans
     * const Account_plans = await prisma.account_plans.create({
     *   data: {
     *     // ... data to create a Account_plans
     *   }
     * })
     * 
    **/
    create<T extends account_plansCreateArgs<ExtArgs>>(
      args: SelectSubset<T, account_plansCreateArgs<ExtArgs>>
    ): Prisma__account_plansClient<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Account_plans.
     *     @param {account_plansCreateManyArgs} args - Arguments to create many Account_plans.
     *     @example
     *     // Create many Account_plans
     *     const account_plans = await prisma.account_plans.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends account_plansCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_plansCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Account_plans.
     * @param {account_plansDeleteArgs} args - Arguments to delete one Account_plans.
     * @example
     * // Delete one Account_plans
     * const Account_plans = await prisma.account_plans.delete({
     *   where: {
     *     // ... filter to delete one Account_plans
     *   }
     * })
     * 
    **/
    delete<T extends account_plansDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, account_plansDeleteArgs<ExtArgs>>
    ): Prisma__account_plansClient<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Account_plans.
     * @param {account_plansUpdateArgs} args - Arguments to update one Account_plans.
     * @example
     * // Update one Account_plans
     * const account_plans = await prisma.account_plans.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends account_plansUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, account_plansUpdateArgs<ExtArgs>>
    ): Prisma__account_plansClient<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Account_plans.
     * @param {account_plansDeleteManyArgs} args - Arguments to filter Account_plans to delete.
     * @example
     * // Delete a few Account_plans
     * const { count } = await prisma.account_plans.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends account_plansDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_plansDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Account_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_plansUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Account_plans
     * const account_plans = await prisma.account_plans.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends account_plansUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, account_plansUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account_plans.
     * @param {account_plansUpsertArgs} args - Arguments to update or create a Account_plans.
     * @example
     * // Update or create a Account_plans
     * const account_plans = await prisma.account_plans.upsert({
     *   create: {
     *     // ... data to create a Account_plans
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account_plans we want to update
     *   }
     * })
    **/
    upsert<T extends account_plansUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, account_plansUpsertArgs<ExtArgs>>
    ): Prisma__account_plansClient<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Account_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_plansCountArgs} args - Arguments to filter Account_plans to count.
     * @example
     * // Count the number of Account_plans
     * const count = await prisma.account_plans.count({
     *   where: {
     *     // ... the filter for the Account_plans we want to count
     *   }
     * })
    **/
    count<T extends account_plansCountArgs>(
      args?: Subset<T, account_plansCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Account_plansCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Account_plansAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Account_plansAggregateArgs>(args: Subset<T, Account_plansAggregateArgs>): Prisma.PrismaPromise<GetAccount_plansAggregateType<T>>

    /**
     * Group by Account_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_plansGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends account_plansGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: account_plansGroupByArgs['orderBy'] }
        : { orderBy?: account_plansGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, account_plansGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccount_plansGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the account_plans model
   */
  readonly fields: account_plansFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for account_plans.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__account_plansClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    accounts<T extends accountsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, accountsDefaultArgs<ExtArgs>>): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    plans<T extends plansDefaultArgs<ExtArgs> = {}>(args?: Subset<T, plansDefaultArgs<ExtArgs>>): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the account_plans model
   */ 
  interface account_plansFieldRefs {
    readonly account_id: FieldRef<"account_plans", 'String'>
    readonly plan_id: FieldRef<"account_plans", 'String'>
    readonly created_at: FieldRef<"account_plans", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * account_plans findUnique
   */
  export type account_plansFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    /**
     * Filter, which account_plans to fetch.
     */
    where: account_plansWhereUniqueInput
  }


  /**
   * account_plans findUniqueOrThrow
   */
  export type account_plansFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    /**
     * Filter, which account_plans to fetch.
     */
    where: account_plansWhereUniqueInput
  }


  /**
   * account_plans findFirst
   */
  export type account_plansFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    /**
     * Filter, which account_plans to fetch.
     */
    where?: account_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_plans to fetch.
     */
    orderBy?: account_plansOrderByWithRelationInput | account_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_plans.
     */
    cursor?: account_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_plans.
     */
    distinct?: Account_plansScalarFieldEnum | Account_plansScalarFieldEnum[]
  }


  /**
   * account_plans findFirstOrThrow
   */
  export type account_plansFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    /**
     * Filter, which account_plans to fetch.
     */
    where?: account_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_plans to fetch.
     */
    orderBy?: account_plansOrderByWithRelationInput | account_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_plans.
     */
    cursor?: account_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_plans.
     */
    distinct?: Account_plansScalarFieldEnum | Account_plansScalarFieldEnum[]
  }


  /**
   * account_plans findMany
   */
  export type account_plansFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    /**
     * Filter, which account_plans to fetch.
     */
    where?: account_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_plans to fetch.
     */
    orderBy?: account_plansOrderByWithRelationInput | account_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing account_plans.
     */
    cursor?: account_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_plans.
     */
    skip?: number
    distinct?: Account_plansScalarFieldEnum | Account_plansScalarFieldEnum[]
  }


  /**
   * account_plans create
   */
  export type account_plansCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    /**
     * The data needed to create a account_plans.
     */
    data: XOR<account_plansCreateInput, account_plansUncheckedCreateInput>
  }


  /**
   * account_plans createMany
   */
  export type account_plansCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many account_plans.
     */
    data: account_plansCreateManyInput | account_plansCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * account_plans update
   */
  export type account_plansUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    /**
     * The data needed to update a account_plans.
     */
    data: XOR<account_plansUpdateInput, account_plansUncheckedUpdateInput>
    /**
     * Choose, which account_plans to update.
     */
    where: account_plansWhereUniqueInput
  }


  /**
   * account_plans updateMany
   */
  export type account_plansUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update account_plans.
     */
    data: XOR<account_plansUpdateManyMutationInput, account_plansUncheckedUpdateManyInput>
    /**
     * Filter which account_plans to update
     */
    where?: account_plansWhereInput
  }


  /**
   * account_plans upsert
   */
  export type account_plansUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    /**
     * The filter to search for the account_plans to update in case it exists.
     */
    where: account_plansWhereUniqueInput
    /**
     * In case the account_plans found by the `where` argument doesn't exist, create a new account_plans with this data.
     */
    create: XOR<account_plansCreateInput, account_plansUncheckedCreateInput>
    /**
     * In case the account_plans was found with the provided `where` argument, update it with this data.
     */
    update: XOR<account_plansUpdateInput, account_plansUncheckedUpdateInput>
  }


  /**
   * account_plans delete
   */
  export type account_plansDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    /**
     * Filter which account_plans to delete.
     */
    where: account_plansWhereUniqueInput
  }


  /**
   * account_plans deleteMany
   */
  export type account_plansDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_plans to delete
     */
    where?: account_plansWhereInput
  }


  /**
   * account_plans without action
   */
  export type account_plansDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
  }



  /**
   * Model account_review_generator
   */

  export type AggregateAccount_review_generator = {
    _count: Account_review_generatorCountAggregateOutputType | null
    _min: Account_review_generatorMinAggregateOutputType | null
    _max: Account_review_generatorMaxAggregateOutputType | null
  }

  export type Account_review_generatorMinAggregateOutputType = {
    account_id: string | null
    plan_id: string | null
    created_at: Date | null
  }

  export type Account_review_generatorMaxAggregateOutputType = {
    account_id: string | null
    plan_id: string | null
    created_at: Date | null
  }

  export type Account_review_generatorCountAggregateOutputType = {
    account_id: number
    plan_id: number
    created_at: number
    _all: number
  }


  export type Account_review_generatorMinAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
  }

  export type Account_review_generatorMaxAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
  }

  export type Account_review_generatorCountAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
    _all?: true
  }

  export type Account_review_generatorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_review_generator to aggregate.
     */
    where?: account_review_generatorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_review_generators to fetch.
     */
    orderBy?: account_review_generatorOrderByWithRelationInput | account_review_generatorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: account_review_generatorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_review_generators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_review_generators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned account_review_generators
    **/
    _count?: true | Account_review_generatorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Account_review_generatorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Account_review_generatorMaxAggregateInputType
  }

  export type GetAccount_review_generatorAggregateType<T extends Account_review_generatorAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount_review_generator]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount_review_generator[P]>
      : GetScalarType<T[P], AggregateAccount_review_generator[P]>
  }




  export type account_review_generatorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_review_generatorWhereInput
    orderBy?: account_review_generatorOrderByWithAggregationInput | account_review_generatorOrderByWithAggregationInput[]
    by: Account_review_generatorScalarFieldEnum[] | Account_review_generatorScalarFieldEnum
    having?: account_review_generatorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Account_review_generatorCountAggregateInputType | true
    _min?: Account_review_generatorMinAggregateInputType
    _max?: Account_review_generatorMaxAggregateInputType
  }

  export type Account_review_generatorGroupByOutputType = {
    account_id: string
    plan_id: string
    created_at: Date
    _count: Account_review_generatorCountAggregateOutputType | null
    _min: Account_review_generatorMinAggregateOutputType | null
    _max: Account_review_generatorMaxAggregateOutputType | null
  }

  type GetAccount_review_generatorGroupByPayload<T extends account_review_generatorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Account_review_generatorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Account_review_generatorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Account_review_generatorGroupByOutputType[P]>
            : GetScalarType<T[P], Account_review_generatorGroupByOutputType[P]>
        }
      >
    >


  export type account_review_generatorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    account_id?: boolean
    plan_id?: boolean
    created_at?: boolean
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account_review_generator"]>

  export type account_review_generatorSelectScalar = {
    account_id?: boolean
    plan_id?: boolean
    created_at?: boolean
  }

  export type account_review_generatorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }


  export type $account_review_generatorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "account_review_generator"
    objects: {
      accounts: Prisma.$accountsPayload<ExtArgs>
      plans: Prisma.$plansPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      account_id: string
      plan_id: string
      created_at: Date
    }, ExtArgs["result"]["account_review_generator"]>
    composites: {}
  }


  type account_review_generatorGetPayload<S extends boolean | null | undefined | account_review_generatorDefaultArgs> = $Result.GetResult<Prisma.$account_review_generatorPayload, S>

  type account_review_generatorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<account_review_generatorFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Account_review_generatorCountAggregateInputType | true
    }

  export interface account_review_generatorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['account_review_generator'], meta: { name: 'account_review_generator' } }
    /**
     * Find zero or one Account_review_generator that matches the filter.
     * @param {account_review_generatorFindUniqueArgs} args - Arguments to find a Account_review_generator
     * @example
     * // Get one Account_review_generator
     * const account_review_generator = await prisma.account_review_generator.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends account_review_generatorFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, account_review_generatorFindUniqueArgs<ExtArgs>>
    ): Prisma__account_review_generatorClient<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Account_review_generator that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {account_review_generatorFindUniqueOrThrowArgs} args - Arguments to find a Account_review_generator
     * @example
     * // Get one Account_review_generator
     * const account_review_generator = await prisma.account_review_generator.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends account_review_generatorFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_review_generatorFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__account_review_generatorClient<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Account_review_generator that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_review_generatorFindFirstArgs} args - Arguments to find a Account_review_generator
     * @example
     * // Get one Account_review_generator
     * const account_review_generator = await prisma.account_review_generator.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends account_review_generatorFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, account_review_generatorFindFirstArgs<ExtArgs>>
    ): Prisma__account_review_generatorClient<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Account_review_generator that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_review_generatorFindFirstOrThrowArgs} args - Arguments to find a Account_review_generator
     * @example
     * // Get one Account_review_generator
     * const account_review_generator = await prisma.account_review_generator.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends account_review_generatorFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_review_generatorFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__account_review_generatorClient<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Account_review_generators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_review_generatorFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Account_review_generators
     * const account_review_generators = await prisma.account_review_generator.findMany()
     * 
     * // Get first 10 Account_review_generators
     * const account_review_generators = await prisma.account_review_generator.findMany({ take: 10 })
     * 
     * // Only select the `account_id`
     * const account_review_generatorWithAccount_idOnly = await prisma.account_review_generator.findMany({ select: { account_id: true } })
     * 
    **/
    findMany<T extends account_review_generatorFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_review_generatorFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Account_review_generator.
     * @param {account_review_generatorCreateArgs} args - Arguments to create a Account_review_generator.
     * @example
     * // Create one Account_review_generator
     * const Account_review_generator = await prisma.account_review_generator.create({
     *   data: {
     *     // ... data to create a Account_review_generator
     *   }
     * })
     * 
    **/
    create<T extends account_review_generatorCreateArgs<ExtArgs>>(
      args: SelectSubset<T, account_review_generatorCreateArgs<ExtArgs>>
    ): Prisma__account_review_generatorClient<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Account_review_generators.
     *     @param {account_review_generatorCreateManyArgs} args - Arguments to create many Account_review_generators.
     *     @example
     *     // Create many Account_review_generators
     *     const account_review_generator = await prisma.account_review_generator.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends account_review_generatorCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_review_generatorCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Account_review_generator.
     * @param {account_review_generatorDeleteArgs} args - Arguments to delete one Account_review_generator.
     * @example
     * // Delete one Account_review_generator
     * const Account_review_generator = await prisma.account_review_generator.delete({
     *   where: {
     *     // ... filter to delete one Account_review_generator
     *   }
     * })
     * 
    **/
    delete<T extends account_review_generatorDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, account_review_generatorDeleteArgs<ExtArgs>>
    ): Prisma__account_review_generatorClient<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Account_review_generator.
     * @param {account_review_generatorUpdateArgs} args - Arguments to update one Account_review_generator.
     * @example
     * // Update one Account_review_generator
     * const account_review_generator = await prisma.account_review_generator.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends account_review_generatorUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, account_review_generatorUpdateArgs<ExtArgs>>
    ): Prisma__account_review_generatorClient<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Account_review_generators.
     * @param {account_review_generatorDeleteManyArgs} args - Arguments to filter Account_review_generators to delete.
     * @example
     * // Delete a few Account_review_generators
     * const { count } = await prisma.account_review_generator.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends account_review_generatorDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_review_generatorDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Account_review_generators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_review_generatorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Account_review_generators
     * const account_review_generator = await prisma.account_review_generator.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends account_review_generatorUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, account_review_generatorUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account_review_generator.
     * @param {account_review_generatorUpsertArgs} args - Arguments to update or create a Account_review_generator.
     * @example
     * // Update or create a Account_review_generator
     * const account_review_generator = await prisma.account_review_generator.upsert({
     *   create: {
     *     // ... data to create a Account_review_generator
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account_review_generator we want to update
     *   }
     * })
    **/
    upsert<T extends account_review_generatorUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, account_review_generatorUpsertArgs<ExtArgs>>
    ): Prisma__account_review_generatorClient<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Account_review_generators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_review_generatorCountArgs} args - Arguments to filter Account_review_generators to count.
     * @example
     * // Count the number of Account_review_generators
     * const count = await prisma.account_review_generator.count({
     *   where: {
     *     // ... the filter for the Account_review_generators we want to count
     *   }
     * })
    **/
    count<T extends account_review_generatorCountArgs>(
      args?: Subset<T, account_review_generatorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Account_review_generatorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account_review_generator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Account_review_generatorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Account_review_generatorAggregateArgs>(args: Subset<T, Account_review_generatorAggregateArgs>): Prisma.PrismaPromise<GetAccount_review_generatorAggregateType<T>>

    /**
     * Group by Account_review_generator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_review_generatorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends account_review_generatorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: account_review_generatorGroupByArgs['orderBy'] }
        : { orderBy?: account_review_generatorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, account_review_generatorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccount_review_generatorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the account_review_generator model
   */
  readonly fields: account_review_generatorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for account_review_generator.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__account_review_generatorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    accounts<T extends accountsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, accountsDefaultArgs<ExtArgs>>): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    plans<T extends plansDefaultArgs<ExtArgs> = {}>(args?: Subset<T, plansDefaultArgs<ExtArgs>>): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the account_review_generator model
   */ 
  interface account_review_generatorFieldRefs {
    readonly account_id: FieldRef<"account_review_generator", 'String'>
    readonly plan_id: FieldRef<"account_review_generator", 'String'>
    readonly created_at: FieldRef<"account_review_generator", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * account_review_generator findUnique
   */
  export type account_review_generatorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    /**
     * Filter, which account_review_generator to fetch.
     */
    where: account_review_generatorWhereUniqueInput
  }


  /**
   * account_review_generator findUniqueOrThrow
   */
  export type account_review_generatorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    /**
     * Filter, which account_review_generator to fetch.
     */
    where: account_review_generatorWhereUniqueInput
  }


  /**
   * account_review_generator findFirst
   */
  export type account_review_generatorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    /**
     * Filter, which account_review_generator to fetch.
     */
    where?: account_review_generatorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_review_generators to fetch.
     */
    orderBy?: account_review_generatorOrderByWithRelationInput | account_review_generatorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_review_generators.
     */
    cursor?: account_review_generatorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_review_generators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_review_generators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_review_generators.
     */
    distinct?: Account_review_generatorScalarFieldEnum | Account_review_generatorScalarFieldEnum[]
  }


  /**
   * account_review_generator findFirstOrThrow
   */
  export type account_review_generatorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    /**
     * Filter, which account_review_generator to fetch.
     */
    where?: account_review_generatorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_review_generators to fetch.
     */
    orderBy?: account_review_generatorOrderByWithRelationInput | account_review_generatorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_review_generators.
     */
    cursor?: account_review_generatorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_review_generators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_review_generators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_review_generators.
     */
    distinct?: Account_review_generatorScalarFieldEnum | Account_review_generatorScalarFieldEnum[]
  }


  /**
   * account_review_generator findMany
   */
  export type account_review_generatorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    /**
     * Filter, which account_review_generators to fetch.
     */
    where?: account_review_generatorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_review_generators to fetch.
     */
    orderBy?: account_review_generatorOrderByWithRelationInput | account_review_generatorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing account_review_generators.
     */
    cursor?: account_review_generatorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_review_generators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_review_generators.
     */
    skip?: number
    distinct?: Account_review_generatorScalarFieldEnum | Account_review_generatorScalarFieldEnum[]
  }


  /**
   * account_review_generator create
   */
  export type account_review_generatorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    /**
     * The data needed to create a account_review_generator.
     */
    data: XOR<account_review_generatorCreateInput, account_review_generatorUncheckedCreateInput>
  }


  /**
   * account_review_generator createMany
   */
  export type account_review_generatorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many account_review_generators.
     */
    data: account_review_generatorCreateManyInput | account_review_generatorCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * account_review_generator update
   */
  export type account_review_generatorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    /**
     * The data needed to update a account_review_generator.
     */
    data: XOR<account_review_generatorUpdateInput, account_review_generatorUncheckedUpdateInput>
    /**
     * Choose, which account_review_generator to update.
     */
    where: account_review_generatorWhereUniqueInput
  }


  /**
   * account_review_generator updateMany
   */
  export type account_review_generatorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update account_review_generators.
     */
    data: XOR<account_review_generatorUpdateManyMutationInput, account_review_generatorUncheckedUpdateManyInput>
    /**
     * Filter which account_review_generators to update
     */
    where?: account_review_generatorWhereInput
  }


  /**
   * account_review_generator upsert
   */
  export type account_review_generatorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    /**
     * The filter to search for the account_review_generator to update in case it exists.
     */
    where: account_review_generatorWhereUniqueInput
    /**
     * In case the account_review_generator found by the `where` argument doesn't exist, create a new account_review_generator with this data.
     */
    create: XOR<account_review_generatorCreateInput, account_review_generatorUncheckedCreateInput>
    /**
     * In case the account_review_generator was found with the provided `where` argument, update it with this data.
     */
    update: XOR<account_review_generatorUpdateInput, account_review_generatorUncheckedUpdateInput>
  }


  /**
   * account_review_generator delete
   */
  export type account_review_generatorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    /**
     * Filter which account_review_generator to delete.
     */
    where: account_review_generatorWhereUniqueInput
  }


  /**
   * account_review_generator deleteMany
   */
  export type account_review_generatorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_review_generators to delete
     */
    where?: account_review_generatorWhereInput
  }


  /**
   * account_review_generator without action
   */
  export type account_review_generatorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
  }



  /**
   * Model account_social_media
   */

  export type AggregateAccount_social_media = {
    _count: Account_social_mediaCountAggregateOutputType | null
    _min: Account_social_mediaMinAggregateOutputType | null
    _max: Account_social_mediaMaxAggregateOutputType | null
  }

  export type Account_social_mediaMinAggregateOutputType = {
    account_id: string | null
    plan_id: string | null
    created_at: Date | null
  }

  export type Account_social_mediaMaxAggregateOutputType = {
    account_id: string | null
    plan_id: string | null
    created_at: Date | null
  }

  export type Account_social_mediaCountAggregateOutputType = {
    account_id: number
    plan_id: number
    created_at: number
    _all: number
  }


  export type Account_social_mediaMinAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
  }

  export type Account_social_mediaMaxAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
  }

  export type Account_social_mediaCountAggregateInputType = {
    account_id?: true
    plan_id?: true
    created_at?: true
    _all?: true
  }

  export type Account_social_mediaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_social_media to aggregate.
     */
    where?: account_social_mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_social_medias to fetch.
     */
    orderBy?: account_social_mediaOrderByWithRelationInput | account_social_mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: account_social_mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_social_medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_social_medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned account_social_medias
    **/
    _count?: true | Account_social_mediaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Account_social_mediaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Account_social_mediaMaxAggregateInputType
  }

  export type GetAccount_social_mediaAggregateType<T extends Account_social_mediaAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount_social_media]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount_social_media[P]>
      : GetScalarType<T[P], AggregateAccount_social_media[P]>
  }




  export type account_social_mediaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: account_social_mediaWhereInput
    orderBy?: account_social_mediaOrderByWithAggregationInput | account_social_mediaOrderByWithAggregationInput[]
    by: Account_social_mediaScalarFieldEnum[] | Account_social_mediaScalarFieldEnum
    having?: account_social_mediaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Account_social_mediaCountAggregateInputType | true
    _min?: Account_social_mediaMinAggregateInputType
    _max?: Account_social_mediaMaxAggregateInputType
  }

  export type Account_social_mediaGroupByOutputType = {
    account_id: string
    plan_id: string
    created_at: Date
    _count: Account_social_mediaCountAggregateOutputType | null
    _min: Account_social_mediaMinAggregateOutputType | null
    _max: Account_social_mediaMaxAggregateOutputType | null
  }

  type GetAccount_social_mediaGroupByPayload<T extends account_social_mediaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Account_social_mediaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Account_social_mediaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Account_social_mediaGroupByOutputType[P]>
            : GetScalarType<T[P], Account_social_mediaGroupByOutputType[P]>
        }
      >
    >


  export type account_social_mediaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    account_id?: boolean
    plan_id?: boolean
    created_at?: boolean
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account_social_media"]>

  export type account_social_mediaSelectScalar = {
    account_id?: boolean
    plan_id?: boolean
    created_at?: boolean
  }

  export type account_social_mediaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | accountsDefaultArgs<ExtArgs>
    plans?: boolean | plansDefaultArgs<ExtArgs>
  }


  export type $account_social_mediaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "account_social_media"
    objects: {
      accounts: Prisma.$accountsPayload<ExtArgs>
      plans: Prisma.$plansPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      account_id: string
      plan_id: string
      created_at: Date
    }, ExtArgs["result"]["account_social_media"]>
    composites: {}
  }


  type account_social_mediaGetPayload<S extends boolean | null | undefined | account_social_mediaDefaultArgs> = $Result.GetResult<Prisma.$account_social_mediaPayload, S>

  type account_social_mediaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<account_social_mediaFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Account_social_mediaCountAggregateInputType | true
    }

  export interface account_social_mediaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['account_social_media'], meta: { name: 'account_social_media' } }
    /**
     * Find zero or one Account_social_media that matches the filter.
     * @param {account_social_mediaFindUniqueArgs} args - Arguments to find a Account_social_media
     * @example
     * // Get one Account_social_media
     * const account_social_media = await prisma.account_social_media.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends account_social_mediaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, account_social_mediaFindUniqueArgs<ExtArgs>>
    ): Prisma__account_social_mediaClient<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Account_social_media that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {account_social_mediaFindUniqueOrThrowArgs} args - Arguments to find a Account_social_media
     * @example
     * // Get one Account_social_media
     * const account_social_media = await prisma.account_social_media.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends account_social_mediaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_social_mediaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__account_social_mediaClient<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Account_social_media that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_social_mediaFindFirstArgs} args - Arguments to find a Account_social_media
     * @example
     * // Get one Account_social_media
     * const account_social_media = await prisma.account_social_media.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends account_social_mediaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, account_social_mediaFindFirstArgs<ExtArgs>>
    ): Prisma__account_social_mediaClient<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Account_social_media that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_social_mediaFindFirstOrThrowArgs} args - Arguments to find a Account_social_media
     * @example
     * // Get one Account_social_media
     * const account_social_media = await prisma.account_social_media.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends account_social_mediaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, account_social_mediaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__account_social_mediaClient<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Account_social_medias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_social_mediaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Account_social_medias
     * const account_social_medias = await prisma.account_social_media.findMany()
     * 
     * // Get first 10 Account_social_medias
     * const account_social_medias = await prisma.account_social_media.findMany({ take: 10 })
     * 
     * // Only select the `account_id`
     * const account_social_mediaWithAccount_idOnly = await prisma.account_social_media.findMany({ select: { account_id: true } })
     * 
    **/
    findMany<T extends account_social_mediaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_social_mediaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Account_social_media.
     * @param {account_social_mediaCreateArgs} args - Arguments to create a Account_social_media.
     * @example
     * // Create one Account_social_media
     * const Account_social_media = await prisma.account_social_media.create({
     *   data: {
     *     // ... data to create a Account_social_media
     *   }
     * })
     * 
    **/
    create<T extends account_social_mediaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, account_social_mediaCreateArgs<ExtArgs>>
    ): Prisma__account_social_mediaClient<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Account_social_medias.
     *     @param {account_social_mediaCreateManyArgs} args - Arguments to create many Account_social_medias.
     *     @example
     *     // Create many Account_social_medias
     *     const account_social_media = await prisma.account_social_media.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends account_social_mediaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_social_mediaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Account_social_media.
     * @param {account_social_mediaDeleteArgs} args - Arguments to delete one Account_social_media.
     * @example
     * // Delete one Account_social_media
     * const Account_social_media = await prisma.account_social_media.delete({
     *   where: {
     *     // ... filter to delete one Account_social_media
     *   }
     * })
     * 
    **/
    delete<T extends account_social_mediaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, account_social_mediaDeleteArgs<ExtArgs>>
    ): Prisma__account_social_mediaClient<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Account_social_media.
     * @param {account_social_mediaUpdateArgs} args - Arguments to update one Account_social_media.
     * @example
     * // Update one Account_social_media
     * const account_social_media = await prisma.account_social_media.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends account_social_mediaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, account_social_mediaUpdateArgs<ExtArgs>>
    ): Prisma__account_social_mediaClient<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Account_social_medias.
     * @param {account_social_mediaDeleteManyArgs} args - Arguments to filter Account_social_medias to delete.
     * @example
     * // Delete a few Account_social_medias
     * const { count } = await prisma.account_social_media.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends account_social_mediaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, account_social_mediaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Account_social_medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_social_mediaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Account_social_medias
     * const account_social_media = await prisma.account_social_media.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends account_social_mediaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, account_social_mediaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account_social_media.
     * @param {account_social_mediaUpsertArgs} args - Arguments to update or create a Account_social_media.
     * @example
     * // Update or create a Account_social_media
     * const account_social_media = await prisma.account_social_media.upsert({
     *   create: {
     *     // ... data to create a Account_social_media
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account_social_media we want to update
     *   }
     * })
    **/
    upsert<T extends account_social_mediaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, account_social_mediaUpsertArgs<ExtArgs>>
    ): Prisma__account_social_mediaClient<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Account_social_medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_social_mediaCountArgs} args - Arguments to filter Account_social_medias to count.
     * @example
     * // Count the number of Account_social_medias
     * const count = await prisma.account_social_media.count({
     *   where: {
     *     // ... the filter for the Account_social_medias we want to count
     *   }
     * })
    **/
    count<T extends account_social_mediaCountArgs>(
      args?: Subset<T, account_social_mediaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Account_social_mediaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account_social_media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Account_social_mediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Account_social_mediaAggregateArgs>(args: Subset<T, Account_social_mediaAggregateArgs>): Prisma.PrismaPromise<GetAccount_social_mediaAggregateType<T>>

    /**
     * Group by Account_social_media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {account_social_mediaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends account_social_mediaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: account_social_mediaGroupByArgs['orderBy'] }
        : { orderBy?: account_social_mediaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, account_social_mediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccount_social_mediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the account_social_media model
   */
  readonly fields: account_social_mediaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for account_social_media.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__account_social_mediaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    accounts<T extends accountsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, accountsDefaultArgs<ExtArgs>>): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    plans<T extends plansDefaultArgs<ExtArgs> = {}>(args?: Subset<T, plansDefaultArgs<ExtArgs>>): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the account_social_media model
   */ 
  interface account_social_mediaFieldRefs {
    readonly account_id: FieldRef<"account_social_media", 'String'>
    readonly plan_id: FieldRef<"account_social_media", 'String'>
    readonly created_at: FieldRef<"account_social_media", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * account_social_media findUnique
   */
  export type account_social_mediaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    /**
     * Filter, which account_social_media to fetch.
     */
    where: account_social_mediaWhereUniqueInput
  }


  /**
   * account_social_media findUniqueOrThrow
   */
  export type account_social_mediaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    /**
     * Filter, which account_social_media to fetch.
     */
    where: account_social_mediaWhereUniqueInput
  }


  /**
   * account_social_media findFirst
   */
  export type account_social_mediaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    /**
     * Filter, which account_social_media to fetch.
     */
    where?: account_social_mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_social_medias to fetch.
     */
    orderBy?: account_social_mediaOrderByWithRelationInput | account_social_mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_social_medias.
     */
    cursor?: account_social_mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_social_medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_social_medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_social_medias.
     */
    distinct?: Account_social_mediaScalarFieldEnum | Account_social_mediaScalarFieldEnum[]
  }


  /**
   * account_social_media findFirstOrThrow
   */
  export type account_social_mediaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    /**
     * Filter, which account_social_media to fetch.
     */
    where?: account_social_mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_social_medias to fetch.
     */
    orderBy?: account_social_mediaOrderByWithRelationInput | account_social_mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for account_social_medias.
     */
    cursor?: account_social_mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_social_medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_social_medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of account_social_medias.
     */
    distinct?: Account_social_mediaScalarFieldEnum | Account_social_mediaScalarFieldEnum[]
  }


  /**
   * account_social_media findMany
   */
  export type account_social_mediaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    /**
     * Filter, which account_social_medias to fetch.
     */
    where?: account_social_mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of account_social_medias to fetch.
     */
    orderBy?: account_social_mediaOrderByWithRelationInput | account_social_mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing account_social_medias.
     */
    cursor?: account_social_mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` account_social_medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` account_social_medias.
     */
    skip?: number
    distinct?: Account_social_mediaScalarFieldEnum | Account_social_mediaScalarFieldEnum[]
  }


  /**
   * account_social_media create
   */
  export type account_social_mediaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    /**
     * The data needed to create a account_social_media.
     */
    data: XOR<account_social_mediaCreateInput, account_social_mediaUncheckedCreateInput>
  }


  /**
   * account_social_media createMany
   */
  export type account_social_mediaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many account_social_medias.
     */
    data: account_social_mediaCreateManyInput | account_social_mediaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * account_social_media update
   */
  export type account_social_mediaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    /**
     * The data needed to update a account_social_media.
     */
    data: XOR<account_social_mediaUpdateInput, account_social_mediaUncheckedUpdateInput>
    /**
     * Choose, which account_social_media to update.
     */
    where: account_social_mediaWhereUniqueInput
  }


  /**
   * account_social_media updateMany
   */
  export type account_social_mediaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update account_social_medias.
     */
    data: XOR<account_social_mediaUpdateManyMutationInput, account_social_mediaUncheckedUpdateManyInput>
    /**
     * Filter which account_social_medias to update
     */
    where?: account_social_mediaWhereInput
  }


  /**
   * account_social_media upsert
   */
  export type account_social_mediaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    /**
     * The filter to search for the account_social_media to update in case it exists.
     */
    where: account_social_mediaWhereUniqueInput
    /**
     * In case the account_social_media found by the `where` argument doesn't exist, create a new account_social_media with this data.
     */
    create: XOR<account_social_mediaCreateInput, account_social_mediaUncheckedCreateInput>
    /**
     * In case the account_social_media was found with the provided `where` argument, update it with this data.
     */
    update: XOR<account_social_mediaUpdateInput, account_social_mediaUncheckedUpdateInput>
  }


  /**
   * account_social_media delete
   */
  export type account_social_mediaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    /**
     * Filter which account_social_media to delete.
     */
    where: account_social_mediaWhereUniqueInput
  }


  /**
   * account_social_media deleteMany
   */
  export type account_social_mediaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which account_social_medias to delete
     */
    where?: account_social_mediaWhereInput
  }


  /**
   * account_social_media without action
   */
  export type account_social_mediaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
  }



  /**
   * Model accounts
   */

  export type AggregateAccounts = {
    _count: AccountsCountAggregateOutputType | null
    _min: AccountsMinAggregateOutputType | null
    _max: AccountsMaxAggregateOutputType | null
  }

  export type AccountsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    stage: string | null
    active: boolean | null
    customer_record_id: string | null
  }

  export type AccountsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    stage: string | null
    active: boolean | null
    customer_record_id: string | null
  }

  export type AccountsCountAggregateOutputType = {
    id: number
    created_at: number
    stage: number
    active: number
    customer_record_id: number
    _all: number
  }


  export type AccountsMinAggregateInputType = {
    id?: true
    created_at?: true
    stage?: true
    active?: true
    customer_record_id?: true
  }

  export type AccountsMaxAggregateInputType = {
    id?: true
    created_at?: true
    stage?: true
    active?: true
    customer_record_id?: true
  }

  export type AccountsCountAggregateInputType = {
    id?: true
    created_at?: true
    stage?: true
    active?: true
    customer_record_id?: true
    _all?: true
  }

  export type AccountsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which accounts to aggregate.
     */
    where?: accountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of accounts to fetch.
     */
    orderBy?: accountsOrderByWithRelationInput | accountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: accountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned accounts
    **/
    _count?: true | AccountsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountsMaxAggregateInputType
  }

  export type GetAccountsAggregateType<T extends AccountsAggregateArgs> = {
        [P in keyof T & keyof AggregateAccounts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccounts[P]>
      : GetScalarType<T[P], AggregateAccounts[P]>
  }




  export type accountsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: accountsWhereInput
    orderBy?: accountsOrderByWithAggregationInput | accountsOrderByWithAggregationInput[]
    by: AccountsScalarFieldEnum[] | AccountsScalarFieldEnum
    having?: accountsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountsCountAggregateInputType | true
    _min?: AccountsMinAggregateInputType
    _max?: AccountsMaxAggregateInputType
  }

  export type AccountsGroupByOutputType = {
    id: string
    created_at: Date
    stage: string
    active: boolean
    customer_record_id: string
    _count: AccountsCountAggregateOutputType | null
    _min: AccountsMinAggregateOutputType | null
    _max: AccountsMaxAggregateOutputType | null
  }

  type GetAccountsGroupByPayload<T extends accountsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountsGroupByOutputType[P]>
            : GetScalarType<T[P], AccountsGroupByOutputType[P]>
        }
      >
    >


  export type accountsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    stage?: boolean
    active?: boolean
    customer_record_id?: boolean
    account_ai_chat?: boolean | accounts$account_ai_chatArgs<ExtArgs>
    account_blog_post_instances?: boolean | accounts$account_blog_post_instancesArgs<ExtArgs>
    account_blog_posts?: boolean | accounts$account_blog_postsArgs<ExtArgs>
    account_plans?: boolean | accounts$account_plansArgs<ExtArgs>
    account_review_generator?: boolean | accounts$account_review_generatorArgs<ExtArgs>
    account_social_media?: boolean | accounts$account_social_mediaArgs<ExtArgs>
    customer_records?: boolean | customer_recordsDefaultArgs<ExtArgs>
    _count?: boolean | AccountsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accounts"]>

  export type accountsSelectScalar = {
    id?: boolean
    created_at?: boolean
    stage?: boolean
    active?: boolean
    customer_record_id?: boolean
  }

  export type accountsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    account_ai_chat?: boolean | accounts$account_ai_chatArgs<ExtArgs>
    account_blog_post_instances?: boolean | accounts$account_blog_post_instancesArgs<ExtArgs>
    account_blog_posts?: boolean | accounts$account_blog_postsArgs<ExtArgs>
    account_plans?: boolean | accounts$account_plansArgs<ExtArgs>
    account_review_generator?: boolean | accounts$account_review_generatorArgs<ExtArgs>
    account_social_media?: boolean | accounts$account_social_mediaArgs<ExtArgs>
    customer_records?: boolean | customer_recordsDefaultArgs<ExtArgs>
    _count?: boolean | AccountsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $accountsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "accounts"
    objects: {
      account_ai_chat: Prisma.$account_ai_chatPayload<ExtArgs>[]
      account_blog_post_instances: Prisma.$account_blog_post_instancesPayload<ExtArgs>[]
      account_blog_posts: Prisma.$account_blog_postsPayload<ExtArgs>[]
      account_plans: Prisma.$account_plansPayload<ExtArgs>[]
      account_review_generator: Prisma.$account_review_generatorPayload<ExtArgs>[]
      account_social_media: Prisma.$account_social_mediaPayload<ExtArgs>[]
      customer_records: Prisma.$customer_recordsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      stage: string
      active: boolean
      customer_record_id: string
    }, ExtArgs["result"]["accounts"]>
    composites: {}
  }


  type accountsGetPayload<S extends boolean | null | undefined | accountsDefaultArgs> = $Result.GetResult<Prisma.$accountsPayload, S>

  type accountsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<accountsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: AccountsCountAggregateInputType | true
    }

  export interface accountsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['accounts'], meta: { name: 'accounts' } }
    /**
     * Find zero or one Accounts that matches the filter.
     * @param {accountsFindUniqueArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends accountsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, accountsFindUniqueArgs<ExtArgs>>
    ): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Accounts that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {accountsFindUniqueOrThrowArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends accountsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, accountsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {accountsFindFirstArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends accountsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, accountsFindFirstArgs<ExtArgs>>
    ): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Accounts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {accountsFindFirstOrThrowArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends accountsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, accountsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {accountsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.accounts.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.accounts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountsWithIdOnly = await prisma.accounts.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends accountsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, accountsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Accounts.
     * @param {accountsCreateArgs} args - Arguments to create a Accounts.
     * @example
     * // Create one Accounts
     * const Accounts = await prisma.accounts.create({
     *   data: {
     *     // ... data to create a Accounts
     *   }
     * })
     * 
    **/
    create<T extends accountsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, accountsCreateArgs<ExtArgs>>
    ): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Accounts.
     *     @param {accountsCreateManyArgs} args - Arguments to create many Accounts.
     *     @example
     *     // Create many Accounts
     *     const accounts = await prisma.accounts.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends accountsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, accountsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Accounts.
     * @param {accountsDeleteArgs} args - Arguments to delete one Accounts.
     * @example
     * // Delete one Accounts
     * const Accounts = await prisma.accounts.delete({
     *   where: {
     *     // ... filter to delete one Accounts
     *   }
     * })
     * 
    **/
    delete<T extends accountsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, accountsDeleteArgs<ExtArgs>>
    ): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Accounts.
     * @param {accountsUpdateArgs} args - Arguments to update one Accounts.
     * @example
     * // Update one Accounts
     * const accounts = await prisma.accounts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends accountsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, accountsUpdateArgs<ExtArgs>>
    ): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Accounts.
     * @param {accountsDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.accounts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends accountsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, accountsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {accountsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const accounts = await prisma.accounts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends accountsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, accountsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Accounts.
     * @param {accountsUpsertArgs} args - Arguments to update or create a Accounts.
     * @example
     * // Update or create a Accounts
     * const accounts = await prisma.accounts.upsert({
     *   create: {
     *     // ... data to create a Accounts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Accounts we want to update
     *   }
     * })
    **/
    upsert<T extends accountsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, accountsUpsertArgs<ExtArgs>>
    ): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {accountsCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.accounts.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends accountsCountArgs>(
      args?: Subset<T, accountsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountsAggregateArgs>(args: Subset<T, AccountsAggregateArgs>): Prisma.PrismaPromise<GetAccountsAggregateType<T>>

    /**
     * Group by Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {accountsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends accountsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: accountsGroupByArgs['orderBy'] }
        : { orderBy?: accountsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, accountsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the accounts model
   */
  readonly fields: accountsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for accounts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__accountsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    account_ai_chat<T extends accounts$account_ai_chatArgs<ExtArgs> = {}>(args?: Subset<T, accounts$account_ai_chatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'findMany'> | Null>;

    account_blog_post_instances<T extends accounts$account_blog_post_instancesArgs<ExtArgs> = {}>(args?: Subset<T, accounts$account_blog_post_instancesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'findMany'> | Null>;

    account_blog_posts<T extends accounts$account_blog_postsArgs<ExtArgs> = {}>(args?: Subset<T, accounts$account_blog_postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'findMany'> | Null>;

    account_plans<T extends accounts$account_plansArgs<ExtArgs> = {}>(args?: Subset<T, accounts$account_plansArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'findMany'> | Null>;

    account_review_generator<T extends accounts$account_review_generatorArgs<ExtArgs> = {}>(args?: Subset<T, accounts$account_review_generatorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'findMany'> | Null>;

    account_social_media<T extends accounts$account_social_mediaArgs<ExtArgs> = {}>(args?: Subset<T, accounts$account_social_mediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'findMany'> | Null>;

    customer_records<T extends customer_recordsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, customer_recordsDefaultArgs<ExtArgs>>): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the accounts model
   */ 
  interface accountsFieldRefs {
    readonly id: FieldRef<"accounts", 'String'>
    readonly created_at: FieldRef<"accounts", 'DateTime'>
    readonly stage: FieldRef<"accounts", 'String'>
    readonly active: FieldRef<"accounts", 'Boolean'>
    readonly customer_record_id: FieldRef<"accounts", 'String'>
  }
    

  // Custom InputTypes

  /**
   * accounts findUnique
   */
  export type accountsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
    /**
     * Filter, which accounts to fetch.
     */
    where: accountsWhereUniqueInput
  }


  /**
   * accounts findUniqueOrThrow
   */
  export type accountsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
    /**
     * Filter, which accounts to fetch.
     */
    where: accountsWhereUniqueInput
  }


  /**
   * accounts findFirst
   */
  export type accountsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
    /**
     * Filter, which accounts to fetch.
     */
    where?: accountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of accounts to fetch.
     */
    orderBy?: accountsOrderByWithRelationInput | accountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for accounts.
     */
    cursor?: accountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of accounts.
     */
    distinct?: AccountsScalarFieldEnum | AccountsScalarFieldEnum[]
  }


  /**
   * accounts findFirstOrThrow
   */
  export type accountsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
    /**
     * Filter, which accounts to fetch.
     */
    where?: accountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of accounts to fetch.
     */
    orderBy?: accountsOrderByWithRelationInput | accountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for accounts.
     */
    cursor?: accountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of accounts.
     */
    distinct?: AccountsScalarFieldEnum | AccountsScalarFieldEnum[]
  }


  /**
   * accounts findMany
   */
  export type accountsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
    /**
     * Filter, which accounts to fetch.
     */
    where?: accountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of accounts to fetch.
     */
    orderBy?: accountsOrderByWithRelationInput | accountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing accounts.
     */
    cursor?: accountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` accounts.
     */
    skip?: number
    distinct?: AccountsScalarFieldEnum | AccountsScalarFieldEnum[]
  }


  /**
   * accounts create
   */
  export type accountsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
    /**
     * The data needed to create a accounts.
     */
    data: XOR<accountsCreateInput, accountsUncheckedCreateInput>
  }


  /**
   * accounts createMany
   */
  export type accountsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many accounts.
     */
    data: accountsCreateManyInput | accountsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * accounts update
   */
  export type accountsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
    /**
     * The data needed to update a accounts.
     */
    data: XOR<accountsUpdateInput, accountsUncheckedUpdateInput>
    /**
     * Choose, which accounts to update.
     */
    where: accountsWhereUniqueInput
  }


  /**
   * accounts updateMany
   */
  export type accountsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update accounts.
     */
    data: XOR<accountsUpdateManyMutationInput, accountsUncheckedUpdateManyInput>
    /**
     * Filter which accounts to update
     */
    where?: accountsWhereInput
  }


  /**
   * accounts upsert
   */
  export type accountsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
    /**
     * The filter to search for the accounts to update in case it exists.
     */
    where: accountsWhereUniqueInput
    /**
     * In case the accounts found by the `where` argument doesn't exist, create a new accounts with this data.
     */
    create: XOR<accountsCreateInput, accountsUncheckedCreateInput>
    /**
     * In case the accounts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<accountsUpdateInput, accountsUncheckedUpdateInput>
  }


  /**
   * accounts delete
   */
  export type accountsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
    /**
     * Filter which accounts to delete.
     */
    where: accountsWhereUniqueInput
  }


  /**
   * accounts deleteMany
   */
  export type accountsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which accounts to delete
     */
    where?: accountsWhereInput
  }


  /**
   * accounts.account_ai_chat
   */
  export type accounts$account_ai_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    where?: account_ai_chatWhereInput
    orderBy?: account_ai_chatOrderByWithRelationInput | account_ai_chatOrderByWithRelationInput[]
    cursor?: account_ai_chatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_ai_chatScalarFieldEnum | Account_ai_chatScalarFieldEnum[]
  }


  /**
   * accounts.account_blog_post_instances
   */
  export type accounts$account_blog_post_instancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    where?: account_blog_post_instancesWhereInput
    orderBy?: account_blog_post_instancesOrderByWithRelationInput | account_blog_post_instancesOrderByWithRelationInput[]
    cursor?: account_blog_post_instancesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_blog_post_instancesScalarFieldEnum | Account_blog_post_instancesScalarFieldEnum[]
  }


  /**
   * accounts.account_blog_posts
   */
  export type accounts$account_blog_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    where?: account_blog_postsWhereInput
    orderBy?: account_blog_postsOrderByWithRelationInput | account_blog_postsOrderByWithRelationInput[]
    cursor?: account_blog_postsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_blog_postsScalarFieldEnum | Account_blog_postsScalarFieldEnum[]
  }


  /**
   * accounts.account_plans
   */
  export type accounts$account_plansArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    where?: account_plansWhereInput
    orderBy?: account_plansOrderByWithRelationInput | account_plansOrderByWithRelationInput[]
    cursor?: account_plansWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_plansScalarFieldEnum | Account_plansScalarFieldEnum[]
  }


  /**
   * accounts.account_review_generator
   */
  export type accounts$account_review_generatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    where?: account_review_generatorWhereInput
    orderBy?: account_review_generatorOrderByWithRelationInput | account_review_generatorOrderByWithRelationInput[]
    cursor?: account_review_generatorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_review_generatorScalarFieldEnum | Account_review_generatorScalarFieldEnum[]
  }


  /**
   * accounts.account_social_media
   */
  export type accounts$account_social_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    where?: account_social_mediaWhereInput
    orderBy?: account_social_mediaOrderByWithRelationInput | account_social_mediaOrderByWithRelationInput[]
    cursor?: account_social_mediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_social_mediaScalarFieldEnum | Account_social_mediaScalarFieldEnum[]
  }


  /**
   * accounts without action
   */
  export type accountsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
  }



  /**
   * Model communications
   */

  export type AggregateCommunications = {
    _count: CommunicationsCountAggregateOutputType | null
    _min: CommunicationsMinAggregateOutputType | null
    _max: CommunicationsMaxAggregateOutputType | null
  }

  export type CommunicationsMinAggregateOutputType = {
    id: string | null
    customer_record_id: string | null
    type: string | null
    created_at: Date | null
    marketing_campaign_id: string | null
  }

  export type CommunicationsMaxAggregateOutputType = {
    id: string | null
    customer_record_id: string | null
    type: string | null
    created_at: Date | null
    marketing_campaign_id: string | null
  }

  export type CommunicationsCountAggregateOutputType = {
    id: number
    customer_record_id: number
    type: number
    created_at: number
    marketing_campaign_id: number
    _all: number
  }


  export type CommunicationsMinAggregateInputType = {
    id?: true
    customer_record_id?: true
    type?: true
    created_at?: true
    marketing_campaign_id?: true
  }

  export type CommunicationsMaxAggregateInputType = {
    id?: true
    customer_record_id?: true
    type?: true
    created_at?: true
    marketing_campaign_id?: true
  }

  export type CommunicationsCountAggregateInputType = {
    id?: true
    customer_record_id?: true
    type?: true
    created_at?: true
    marketing_campaign_id?: true
    _all?: true
  }

  export type CommunicationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communications to aggregate.
     */
    where?: communicationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications to fetch.
     */
    orderBy?: communicationsOrderByWithRelationInput | communicationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: communicationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned communications
    **/
    _count?: true | CommunicationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommunicationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommunicationsMaxAggregateInputType
  }

  export type GetCommunicationsAggregateType<T extends CommunicationsAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunications]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunications[P]>
      : GetScalarType<T[P], AggregateCommunications[P]>
  }




  export type communicationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communicationsWhereInput
    orderBy?: communicationsOrderByWithAggregationInput | communicationsOrderByWithAggregationInput[]
    by: CommunicationsScalarFieldEnum[] | CommunicationsScalarFieldEnum
    having?: communicationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommunicationsCountAggregateInputType | true
    _min?: CommunicationsMinAggregateInputType
    _max?: CommunicationsMaxAggregateInputType
  }

  export type CommunicationsGroupByOutputType = {
    id: string
    customer_record_id: string | null
    type: string
    created_at: Date
    marketing_campaign_id: string | null
    _count: CommunicationsCountAggregateOutputType | null
    _min: CommunicationsMinAggregateOutputType | null
    _max: CommunicationsMaxAggregateOutputType | null
  }

  type GetCommunicationsGroupByPayload<T extends communicationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommunicationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommunicationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommunicationsGroupByOutputType[P]>
            : GetScalarType<T[P], CommunicationsGroupByOutputType[P]>
        }
      >
    >


  export type communicationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customer_record_id?: boolean
    type?: boolean
    created_at?: boolean
    marketing_campaign_id?: boolean
    customer_records?: boolean | communications$customer_recordsArgs<ExtArgs>
    marketing_campaigns?: boolean | communications$marketing_campaignsArgs<ExtArgs>
    communications_emails?: boolean | communications$communications_emailsArgs<ExtArgs>
    communications_texts?: boolean | communications$communications_textsArgs<ExtArgs>
  }, ExtArgs["result"]["communications"]>

  export type communicationsSelectScalar = {
    id?: boolean
    customer_record_id?: boolean
    type?: boolean
    created_at?: boolean
    marketing_campaign_id?: boolean
  }

  export type communicationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer_records?: boolean | communications$customer_recordsArgs<ExtArgs>
    marketing_campaigns?: boolean | communications$marketing_campaignsArgs<ExtArgs>
    communications_emails?: boolean | communications$communications_emailsArgs<ExtArgs>
    communications_texts?: boolean | communications$communications_textsArgs<ExtArgs>
  }


  export type $communicationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "communications"
    objects: {
      customer_records: Prisma.$customer_recordsPayload<ExtArgs> | null
      marketing_campaigns: Prisma.$marketing_campaignsPayload<ExtArgs> | null
      communications_emails: Prisma.$communications_emailsPayload<ExtArgs> | null
      communications_texts: Prisma.$communications_textsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      customer_record_id: string | null
      type: string
      created_at: Date
      marketing_campaign_id: string | null
    }, ExtArgs["result"]["communications"]>
    composites: {}
  }


  type communicationsGetPayload<S extends boolean | null | undefined | communicationsDefaultArgs> = $Result.GetResult<Prisma.$communicationsPayload, S>

  type communicationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<communicationsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: CommunicationsCountAggregateInputType | true
    }

  export interface communicationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['communications'], meta: { name: 'communications' } }
    /**
     * Find zero or one Communications that matches the filter.
     * @param {communicationsFindUniqueArgs} args - Arguments to find a Communications
     * @example
     * // Get one Communications
     * const communications = await prisma.communications.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends communicationsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, communicationsFindUniqueArgs<ExtArgs>>
    ): Prisma__communicationsClient<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Communications that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {communicationsFindUniqueOrThrowArgs} args - Arguments to find a Communications
     * @example
     * // Get one Communications
     * const communications = await prisma.communications.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends communicationsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, communicationsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__communicationsClient<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Communications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communicationsFindFirstArgs} args - Arguments to find a Communications
     * @example
     * // Get one Communications
     * const communications = await prisma.communications.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends communicationsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, communicationsFindFirstArgs<ExtArgs>>
    ): Prisma__communicationsClient<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Communications that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communicationsFindFirstOrThrowArgs} args - Arguments to find a Communications
     * @example
     * // Get one Communications
     * const communications = await prisma.communications.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends communicationsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, communicationsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__communicationsClient<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Communications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communicationsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Communications
     * const communications = await prisma.communications.findMany()
     * 
     * // Get first 10 Communications
     * const communications = await prisma.communications.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const communicationsWithIdOnly = await prisma.communications.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends communicationsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communicationsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Communications.
     * @param {communicationsCreateArgs} args - Arguments to create a Communications.
     * @example
     * // Create one Communications
     * const Communications = await prisma.communications.create({
     *   data: {
     *     // ... data to create a Communications
     *   }
     * })
     * 
    **/
    create<T extends communicationsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, communicationsCreateArgs<ExtArgs>>
    ): Prisma__communicationsClient<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Communications.
     *     @param {communicationsCreateManyArgs} args - Arguments to create many Communications.
     *     @example
     *     // Create many Communications
     *     const communications = await prisma.communications.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends communicationsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communicationsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Communications.
     * @param {communicationsDeleteArgs} args - Arguments to delete one Communications.
     * @example
     * // Delete one Communications
     * const Communications = await prisma.communications.delete({
     *   where: {
     *     // ... filter to delete one Communications
     *   }
     * })
     * 
    **/
    delete<T extends communicationsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, communicationsDeleteArgs<ExtArgs>>
    ): Prisma__communicationsClient<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Communications.
     * @param {communicationsUpdateArgs} args - Arguments to update one Communications.
     * @example
     * // Update one Communications
     * const communications = await prisma.communications.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends communicationsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, communicationsUpdateArgs<ExtArgs>>
    ): Prisma__communicationsClient<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Communications.
     * @param {communicationsDeleteManyArgs} args - Arguments to filter Communications to delete.
     * @example
     * // Delete a few Communications
     * const { count } = await prisma.communications.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends communicationsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communicationsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communicationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Communications
     * const communications = await prisma.communications.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends communicationsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, communicationsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Communications.
     * @param {communicationsUpsertArgs} args - Arguments to update or create a Communications.
     * @example
     * // Update or create a Communications
     * const communications = await prisma.communications.upsert({
     *   create: {
     *     // ... data to create a Communications
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Communications we want to update
     *   }
     * })
    **/
    upsert<T extends communicationsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, communicationsUpsertArgs<ExtArgs>>
    ): Prisma__communicationsClient<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Communications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communicationsCountArgs} args - Arguments to filter Communications to count.
     * @example
     * // Count the number of Communications
     * const count = await prisma.communications.count({
     *   where: {
     *     // ... the filter for the Communications we want to count
     *   }
     * })
    **/
    count<T extends communicationsCountArgs>(
      args?: Subset<T, communicationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommunicationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Communications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommunicationsAggregateArgs>(args: Subset<T, CommunicationsAggregateArgs>): Prisma.PrismaPromise<GetCommunicationsAggregateType<T>>

    /**
     * Group by Communications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communicationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends communicationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: communicationsGroupByArgs['orderBy'] }
        : { orderBy?: communicationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, communicationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunicationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the communications model
   */
  readonly fields: communicationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for communications.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__communicationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    customer_records<T extends communications$customer_recordsArgs<ExtArgs> = {}>(args?: Subset<T, communications$customer_recordsArgs<ExtArgs>>): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    marketing_campaigns<T extends communications$marketing_campaignsArgs<ExtArgs> = {}>(args?: Subset<T, communications$marketing_campaignsArgs<ExtArgs>>): Prisma__marketing_campaignsClient<$Result.GetResult<Prisma.$marketing_campaignsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    communications_emails<T extends communications$communications_emailsArgs<ExtArgs> = {}>(args?: Subset<T, communications$communications_emailsArgs<ExtArgs>>): Prisma__communications_emailsClient<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    communications_texts<T extends communications$communications_textsArgs<ExtArgs> = {}>(args?: Subset<T, communications$communications_textsArgs<ExtArgs>>): Prisma__communications_textsClient<$Result.GetResult<Prisma.$communications_textsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the communications model
   */ 
  interface communicationsFieldRefs {
    readonly id: FieldRef<"communications", 'String'>
    readonly customer_record_id: FieldRef<"communications", 'String'>
    readonly type: FieldRef<"communications", 'String'>
    readonly created_at: FieldRef<"communications", 'DateTime'>
    readonly marketing_campaign_id: FieldRef<"communications", 'String'>
  }
    

  // Custom InputTypes

  /**
   * communications findUnique
   */
  export type communicationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    /**
     * Filter, which communications to fetch.
     */
    where: communicationsWhereUniqueInput
  }


  /**
   * communications findUniqueOrThrow
   */
  export type communicationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    /**
     * Filter, which communications to fetch.
     */
    where: communicationsWhereUniqueInput
  }


  /**
   * communications findFirst
   */
  export type communicationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    /**
     * Filter, which communications to fetch.
     */
    where?: communicationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications to fetch.
     */
    orderBy?: communicationsOrderByWithRelationInput | communicationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communications.
     */
    cursor?: communicationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communications.
     */
    distinct?: CommunicationsScalarFieldEnum | CommunicationsScalarFieldEnum[]
  }


  /**
   * communications findFirstOrThrow
   */
  export type communicationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    /**
     * Filter, which communications to fetch.
     */
    where?: communicationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications to fetch.
     */
    orderBy?: communicationsOrderByWithRelationInput | communicationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communications.
     */
    cursor?: communicationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communications.
     */
    distinct?: CommunicationsScalarFieldEnum | CommunicationsScalarFieldEnum[]
  }


  /**
   * communications findMany
   */
  export type communicationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    /**
     * Filter, which communications to fetch.
     */
    where?: communicationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications to fetch.
     */
    orderBy?: communicationsOrderByWithRelationInput | communicationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing communications.
     */
    cursor?: communicationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications.
     */
    skip?: number
    distinct?: CommunicationsScalarFieldEnum | CommunicationsScalarFieldEnum[]
  }


  /**
   * communications create
   */
  export type communicationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    /**
     * The data needed to create a communications.
     */
    data: XOR<communicationsCreateInput, communicationsUncheckedCreateInput>
  }


  /**
   * communications createMany
   */
  export type communicationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many communications.
     */
    data: communicationsCreateManyInput | communicationsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * communications update
   */
  export type communicationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    /**
     * The data needed to update a communications.
     */
    data: XOR<communicationsUpdateInput, communicationsUncheckedUpdateInput>
    /**
     * Choose, which communications to update.
     */
    where: communicationsWhereUniqueInput
  }


  /**
   * communications updateMany
   */
  export type communicationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update communications.
     */
    data: XOR<communicationsUpdateManyMutationInput, communicationsUncheckedUpdateManyInput>
    /**
     * Filter which communications to update
     */
    where?: communicationsWhereInput
  }


  /**
   * communications upsert
   */
  export type communicationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    /**
     * The filter to search for the communications to update in case it exists.
     */
    where: communicationsWhereUniqueInput
    /**
     * In case the communications found by the `where` argument doesn't exist, create a new communications with this data.
     */
    create: XOR<communicationsCreateInput, communicationsUncheckedCreateInput>
    /**
     * In case the communications was found with the provided `where` argument, update it with this data.
     */
    update: XOR<communicationsUpdateInput, communicationsUncheckedUpdateInput>
  }


  /**
   * communications delete
   */
  export type communicationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    /**
     * Filter which communications to delete.
     */
    where: communicationsWhereUniqueInput
  }


  /**
   * communications deleteMany
   */
  export type communicationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communications to delete
     */
    where?: communicationsWhereInput
  }


  /**
   * communications.customer_records
   */
  export type communications$customer_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
    where?: customer_recordsWhereInput
  }


  /**
   * communications.marketing_campaigns
   */
  export type communications$marketing_campaignsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
    where?: marketing_campaignsWhereInput
  }


  /**
   * communications.communications_emails
   */
  export type communications$communications_emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
    where?: communications_emailsWhereInput
  }


  /**
   * communications.communications_texts
   */
  export type communications$communications_textsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
    where?: communications_textsWhereInput
  }


  /**
   * communications without action
   */
  export type communicationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
  }



  /**
   * Model communications_emails
   */

  export type AggregateCommunications_emails = {
    _count: Communications_emailsCountAggregateOutputType | null
    _min: Communications_emailsMinAggregateOutputType | null
    _max: Communications_emailsMaxAggregateOutputType | null
  }

  export type Communications_emailsMinAggregateOutputType = {
    id: string | null
    communications_id: string | null
    created_at: Date | null
    email_id: string | null
  }

  export type Communications_emailsMaxAggregateOutputType = {
    id: string | null
    communications_id: string | null
    created_at: Date | null
    email_id: string | null
  }

  export type Communications_emailsCountAggregateOutputType = {
    id: number
    communications_id: number
    created_at: number
    email_id: number
    _all: number
  }


  export type Communications_emailsMinAggregateInputType = {
    id?: true
    communications_id?: true
    created_at?: true
    email_id?: true
  }

  export type Communications_emailsMaxAggregateInputType = {
    id?: true
    communications_id?: true
    created_at?: true
    email_id?: true
  }

  export type Communications_emailsCountAggregateInputType = {
    id?: true
    communications_id?: true
    created_at?: true
    email_id?: true
    _all?: true
  }

  export type Communications_emailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communications_emails to aggregate.
     */
    where?: communications_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_emails to fetch.
     */
    orderBy?: communications_emailsOrderByWithRelationInput | communications_emailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: communications_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned communications_emails
    **/
    _count?: true | Communications_emailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Communications_emailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Communications_emailsMaxAggregateInputType
  }

  export type GetCommunications_emailsAggregateType<T extends Communications_emailsAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunications_emails]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunications_emails[P]>
      : GetScalarType<T[P], AggregateCommunications_emails[P]>
  }




  export type communications_emailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communications_emailsWhereInput
    orderBy?: communications_emailsOrderByWithAggregationInput | communications_emailsOrderByWithAggregationInput[]
    by: Communications_emailsScalarFieldEnum[] | Communications_emailsScalarFieldEnum
    having?: communications_emailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Communications_emailsCountAggregateInputType | true
    _min?: Communications_emailsMinAggregateInputType
    _max?: Communications_emailsMaxAggregateInputType
  }

  export type Communications_emailsGroupByOutputType = {
    id: string
    communications_id: string
    created_at: Date
    email_id: string
    _count: Communications_emailsCountAggregateOutputType | null
    _min: Communications_emailsMinAggregateOutputType | null
    _max: Communications_emailsMaxAggregateOutputType | null
  }

  type GetCommunications_emailsGroupByPayload<T extends communications_emailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Communications_emailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Communications_emailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Communications_emailsGroupByOutputType[P]>
            : GetScalarType<T[P], Communications_emailsGroupByOutputType[P]>
        }
      >
    >


  export type communications_emailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    communications_id?: boolean
    created_at?: boolean
    email_id?: boolean
    communications?: boolean | communicationsDefaultArgs<ExtArgs>
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: boolean | communications_emails$communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsArgs<ExtArgs>
    _count?: boolean | Communications_emailsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communications_emails"]>

  export type communications_emailsSelectScalar = {
    id?: boolean
    communications_id?: boolean
    created_at?: boolean
    email_id?: boolean
  }

  export type communications_emailsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    communications?: boolean | communicationsDefaultArgs<ExtArgs>
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: boolean | communications_emails$communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsArgs<ExtArgs>
    _count?: boolean | Communications_emailsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $communications_emailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "communications_emails"
    objects: {
      communications: Prisma.$communicationsPayload<ExtArgs>
      communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails: Prisma.$communications_emails_status_updatesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      communications_id: string
      created_at: Date
      email_id: string
    }, ExtArgs["result"]["communications_emails"]>
    composites: {}
  }


  type communications_emailsGetPayload<S extends boolean | null | undefined | communications_emailsDefaultArgs> = $Result.GetResult<Prisma.$communications_emailsPayload, S>

  type communications_emailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<communications_emailsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Communications_emailsCountAggregateInputType | true
    }

  export interface communications_emailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['communications_emails'], meta: { name: 'communications_emails' } }
    /**
     * Find zero or one Communications_emails that matches the filter.
     * @param {communications_emailsFindUniqueArgs} args - Arguments to find a Communications_emails
     * @example
     * // Get one Communications_emails
     * const communications_emails = await prisma.communications_emails.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends communications_emailsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emailsFindUniqueArgs<ExtArgs>>
    ): Prisma__communications_emailsClient<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Communications_emails that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {communications_emailsFindUniqueOrThrowArgs} args - Arguments to find a Communications_emails
     * @example
     * // Get one Communications_emails
     * const communications_emails = await prisma.communications_emails.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends communications_emailsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emailsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__communications_emailsClient<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Communications_emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emailsFindFirstArgs} args - Arguments to find a Communications_emails
     * @example
     * // Get one Communications_emails
     * const communications_emails = await prisma.communications_emails.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends communications_emailsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emailsFindFirstArgs<ExtArgs>>
    ): Prisma__communications_emailsClient<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Communications_emails that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emailsFindFirstOrThrowArgs} args - Arguments to find a Communications_emails
     * @example
     * // Get one Communications_emails
     * const communications_emails = await prisma.communications_emails.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends communications_emailsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emailsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__communications_emailsClient<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Communications_emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emailsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Communications_emails
     * const communications_emails = await prisma.communications_emails.findMany()
     * 
     * // Get first 10 Communications_emails
     * const communications_emails = await prisma.communications_emails.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const communications_emailsWithIdOnly = await prisma.communications_emails.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends communications_emailsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emailsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Communications_emails.
     * @param {communications_emailsCreateArgs} args - Arguments to create a Communications_emails.
     * @example
     * // Create one Communications_emails
     * const Communications_emails = await prisma.communications_emails.create({
     *   data: {
     *     // ... data to create a Communications_emails
     *   }
     * })
     * 
    **/
    create<T extends communications_emailsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emailsCreateArgs<ExtArgs>>
    ): Prisma__communications_emailsClient<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Communications_emails.
     *     @param {communications_emailsCreateManyArgs} args - Arguments to create many Communications_emails.
     *     @example
     *     // Create many Communications_emails
     *     const communications_emails = await prisma.communications_emails.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends communications_emailsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emailsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Communications_emails.
     * @param {communications_emailsDeleteArgs} args - Arguments to delete one Communications_emails.
     * @example
     * // Delete one Communications_emails
     * const Communications_emails = await prisma.communications_emails.delete({
     *   where: {
     *     // ... filter to delete one Communications_emails
     *   }
     * })
     * 
    **/
    delete<T extends communications_emailsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emailsDeleteArgs<ExtArgs>>
    ): Prisma__communications_emailsClient<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Communications_emails.
     * @param {communications_emailsUpdateArgs} args - Arguments to update one Communications_emails.
     * @example
     * // Update one Communications_emails
     * const communications_emails = await prisma.communications_emails.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends communications_emailsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emailsUpdateArgs<ExtArgs>>
    ): Prisma__communications_emailsClient<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Communications_emails.
     * @param {communications_emailsDeleteManyArgs} args - Arguments to filter Communications_emails to delete.
     * @example
     * // Delete a few Communications_emails
     * const { count } = await prisma.communications_emails.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends communications_emailsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emailsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communications_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Communications_emails
     * const communications_emails = await prisma.communications_emails.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends communications_emailsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emailsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Communications_emails.
     * @param {communications_emailsUpsertArgs} args - Arguments to update or create a Communications_emails.
     * @example
     * // Update or create a Communications_emails
     * const communications_emails = await prisma.communications_emails.upsert({
     *   create: {
     *     // ... data to create a Communications_emails
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Communications_emails we want to update
     *   }
     * })
    **/
    upsert<T extends communications_emailsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emailsUpsertArgs<ExtArgs>>
    ): Prisma__communications_emailsClient<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Communications_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emailsCountArgs} args - Arguments to filter Communications_emails to count.
     * @example
     * // Count the number of Communications_emails
     * const count = await prisma.communications_emails.count({
     *   where: {
     *     // ... the filter for the Communications_emails we want to count
     *   }
     * })
    **/
    count<T extends communications_emailsCountArgs>(
      args?: Subset<T, communications_emailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Communications_emailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Communications_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Communications_emailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Communications_emailsAggregateArgs>(args: Subset<T, Communications_emailsAggregateArgs>): Prisma.PrismaPromise<GetCommunications_emailsAggregateType<T>>

    /**
     * Group by Communications_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends communications_emailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: communications_emailsGroupByArgs['orderBy'] }
        : { orderBy?: communications_emailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, communications_emailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunications_emailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the communications_emails model
   */
  readonly fields: communications_emailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for communications_emails.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__communications_emailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    communications<T extends communicationsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, communicationsDefaultArgs<ExtArgs>>): Prisma__communicationsClient<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails<T extends communications_emails$communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsArgs<ExtArgs> = {}>(args?: Subset<T, communications_emails$communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communications_emails_status_updatesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the communications_emails model
   */ 
  interface communications_emailsFieldRefs {
    readonly id: FieldRef<"communications_emails", 'String'>
    readonly communications_id: FieldRef<"communications_emails", 'String'>
    readonly created_at: FieldRef<"communications_emails", 'DateTime'>
    readonly email_id: FieldRef<"communications_emails", 'String'>
  }
    

  // Custom InputTypes

  /**
   * communications_emails findUnique
   */
  export type communications_emailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
    /**
     * Filter, which communications_emails to fetch.
     */
    where: communications_emailsWhereUniqueInput
  }


  /**
   * communications_emails findUniqueOrThrow
   */
  export type communications_emailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
    /**
     * Filter, which communications_emails to fetch.
     */
    where: communications_emailsWhereUniqueInput
  }


  /**
   * communications_emails findFirst
   */
  export type communications_emailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
    /**
     * Filter, which communications_emails to fetch.
     */
    where?: communications_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_emails to fetch.
     */
    orderBy?: communications_emailsOrderByWithRelationInput | communications_emailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communications_emails.
     */
    cursor?: communications_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communications_emails.
     */
    distinct?: Communications_emailsScalarFieldEnum | Communications_emailsScalarFieldEnum[]
  }


  /**
   * communications_emails findFirstOrThrow
   */
  export type communications_emailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
    /**
     * Filter, which communications_emails to fetch.
     */
    where?: communications_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_emails to fetch.
     */
    orderBy?: communications_emailsOrderByWithRelationInput | communications_emailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communications_emails.
     */
    cursor?: communications_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communications_emails.
     */
    distinct?: Communications_emailsScalarFieldEnum | Communications_emailsScalarFieldEnum[]
  }


  /**
   * communications_emails findMany
   */
  export type communications_emailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
    /**
     * Filter, which communications_emails to fetch.
     */
    where?: communications_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_emails to fetch.
     */
    orderBy?: communications_emailsOrderByWithRelationInput | communications_emailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing communications_emails.
     */
    cursor?: communications_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_emails.
     */
    skip?: number
    distinct?: Communications_emailsScalarFieldEnum | Communications_emailsScalarFieldEnum[]
  }


  /**
   * communications_emails create
   */
  export type communications_emailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
    /**
     * The data needed to create a communications_emails.
     */
    data: XOR<communications_emailsCreateInput, communications_emailsUncheckedCreateInput>
  }


  /**
   * communications_emails createMany
   */
  export type communications_emailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many communications_emails.
     */
    data: communications_emailsCreateManyInput | communications_emailsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * communications_emails update
   */
  export type communications_emailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
    /**
     * The data needed to update a communications_emails.
     */
    data: XOR<communications_emailsUpdateInput, communications_emailsUncheckedUpdateInput>
    /**
     * Choose, which communications_emails to update.
     */
    where: communications_emailsWhereUniqueInput
  }


  /**
   * communications_emails updateMany
   */
  export type communications_emailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update communications_emails.
     */
    data: XOR<communications_emailsUpdateManyMutationInput, communications_emailsUncheckedUpdateManyInput>
    /**
     * Filter which communications_emails to update
     */
    where?: communications_emailsWhereInput
  }


  /**
   * communications_emails upsert
   */
  export type communications_emailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
    /**
     * The filter to search for the communications_emails to update in case it exists.
     */
    where: communications_emailsWhereUniqueInput
    /**
     * In case the communications_emails found by the `where` argument doesn't exist, create a new communications_emails with this data.
     */
    create: XOR<communications_emailsCreateInput, communications_emailsUncheckedCreateInput>
    /**
     * In case the communications_emails was found with the provided `where` argument, update it with this data.
     */
    update: XOR<communications_emailsUpdateInput, communications_emailsUncheckedUpdateInput>
  }


  /**
   * communications_emails delete
   */
  export type communications_emailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
    /**
     * Filter which communications_emails to delete.
     */
    where: communications_emailsWhereUniqueInput
  }


  /**
   * communications_emails deleteMany
   */
  export type communications_emailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communications_emails to delete
     */
    where?: communications_emailsWhereInput
  }


  /**
   * communications_emails.communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails
   */
  export type communications_emails$communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
    where?: communications_emails_status_updatesWhereInput
    orderBy?: communications_emails_status_updatesOrderByWithRelationInput | communications_emails_status_updatesOrderByWithRelationInput[]
    cursor?: communications_emails_status_updatesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Communications_emails_status_updatesScalarFieldEnum | Communications_emails_status_updatesScalarFieldEnum[]
  }


  /**
   * communications_emails without action
   */
  export type communications_emailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails
     */
    select?: communications_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emailsInclude<ExtArgs> | null
  }



  /**
   * Model communications_emails_status_updates
   */

  export type AggregateCommunications_emails_status_updates = {
    _count: Communications_emails_status_updatesCountAggregateOutputType | null
    _min: Communications_emails_status_updatesMinAggregateOutputType | null
    _max: Communications_emails_status_updatesMaxAggregateOutputType | null
  }

  export type Communications_emails_status_updatesMinAggregateOutputType = {
    id: string | null
    communications_emails: string | null
    status: string | null
    created_at: Date | null
  }

  export type Communications_emails_status_updatesMaxAggregateOutputType = {
    id: string | null
    communications_emails: string | null
    status: string | null
    created_at: Date | null
  }

  export type Communications_emails_status_updatesCountAggregateOutputType = {
    id: number
    communications_emails: number
    status: number
    created_at: number
    _all: number
  }


  export type Communications_emails_status_updatesMinAggregateInputType = {
    id?: true
    communications_emails?: true
    status?: true
    created_at?: true
  }

  export type Communications_emails_status_updatesMaxAggregateInputType = {
    id?: true
    communications_emails?: true
    status?: true
    created_at?: true
  }

  export type Communications_emails_status_updatesCountAggregateInputType = {
    id?: true
    communications_emails?: true
    status?: true
    created_at?: true
    _all?: true
  }

  export type Communications_emails_status_updatesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communications_emails_status_updates to aggregate.
     */
    where?: communications_emails_status_updatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_emails_status_updates to fetch.
     */
    orderBy?: communications_emails_status_updatesOrderByWithRelationInput | communications_emails_status_updatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: communications_emails_status_updatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_emails_status_updates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_emails_status_updates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned communications_emails_status_updates
    **/
    _count?: true | Communications_emails_status_updatesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Communications_emails_status_updatesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Communications_emails_status_updatesMaxAggregateInputType
  }

  export type GetCommunications_emails_status_updatesAggregateType<T extends Communications_emails_status_updatesAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunications_emails_status_updates]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunications_emails_status_updates[P]>
      : GetScalarType<T[P], AggregateCommunications_emails_status_updates[P]>
  }




  export type communications_emails_status_updatesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communications_emails_status_updatesWhereInput
    orderBy?: communications_emails_status_updatesOrderByWithAggregationInput | communications_emails_status_updatesOrderByWithAggregationInput[]
    by: Communications_emails_status_updatesScalarFieldEnum[] | Communications_emails_status_updatesScalarFieldEnum
    having?: communications_emails_status_updatesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Communications_emails_status_updatesCountAggregateInputType | true
    _min?: Communications_emails_status_updatesMinAggregateInputType
    _max?: Communications_emails_status_updatesMaxAggregateInputType
  }

  export type Communications_emails_status_updatesGroupByOutputType = {
    id: string
    communications_emails: string
    status: string
    created_at: Date
    _count: Communications_emails_status_updatesCountAggregateOutputType | null
    _min: Communications_emails_status_updatesMinAggregateOutputType | null
    _max: Communications_emails_status_updatesMaxAggregateOutputType | null
  }

  type GetCommunications_emails_status_updatesGroupByPayload<T extends communications_emails_status_updatesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Communications_emails_status_updatesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Communications_emails_status_updatesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Communications_emails_status_updatesGroupByOutputType[P]>
            : GetScalarType<T[P], Communications_emails_status_updatesGroupByOutputType[P]>
        }
      >
    >


  export type communications_emails_status_updatesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    communications_emails?: boolean
    status?: boolean
    created_at?: boolean
    communications_emails_communications_emails_status_updates_communications_emailsTocommunications_emails?: boolean | communications_emailsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communications_emails_status_updates"]>

  export type communications_emails_status_updatesSelectScalar = {
    id?: boolean
    communications_emails?: boolean
    status?: boolean
    created_at?: boolean
  }

  export type communications_emails_status_updatesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    communications_emails_communications_emails_status_updates_communications_emailsTocommunications_emails?: boolean | communications_emailsDefaultArgs<ExtArgs>
  }


  export type $communications_emails_status_updatesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "communications_emails_status_updates"
    objects: {
      communications_emails_communications_emails_status_updates_communications_emailsTocommunications_emails: Prisma.$communications_emailsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      communications_emails: string
      status: string
      created_at: Date
    }, ExtArgs["result"]["communications_emails_status_updates"]>
    composites: {}
  }


  type communications_emails_status_updatesGetPayload<S extends boolean | null | undefined | communications_emails_status_updatesDefaultArgs> = $Result.GetResult<Prisma.$communications_emails_status_updatesPayload, S>

  type communications_emails_status_updatesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<communications_emails_status_updatesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Communications_emails_status_updatesCountAggregateInputType | true
    }

  export interface communications_emails_status_updatesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['communications_emails_status_updates'], meta: { name: 'communications_emails_status_updates' } }
    /**
     * Find zero or one Communications_emails_status_updates that matches the filter.
     * @param {communications_emails_status_updatesFindUniqueArgs} args - Arguments to find a Communications_emails_status_updates
     * @example
     * // Get one Communications_emails_status_updates
     * const communications_emails_status_updates = await prisma.communications_emails_status_updates.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends communications_emails_status_updatesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emails_status_updatesFindUniqueArgs<ExtArgs>>
    ): Prisma__communications_emails_status_updatesClient<$Result.GetResult<Prisma.$communications_emails_status_updatesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Communications_emails_status_updates that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {communications_emails_status_updatesFindUniqueOrThrowArgs} args - Arguments to find a Communications_emails_status_updates
     * @example
     * // Get one Communications_emails_status_updates
     * const communications_emails_status_updates = await prisma.communications_emails_status_updates.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends communications_emails_status_updatesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emails_status_updatesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__communications_emails_status_updatesClient<$Result.GetResult<Prisma.$communications_emails_status_updatesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Communications_emails_status_updates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emails_status_updatesFindFirstArgs} args - Arguments to find a Communications_emails_status_updates
     * @example
     * // Get one Communications_emails_status_updates
     * const communications_emails_status_updates = await prisma.communications_emails_status_updates.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends communications_emails_status_updatesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emails_status_updatesFindFirstArgs<ExtArgs>>
    ): Prisma__communications_emails_status_updatesClient<$Result.GetResult<Prisma.$communications_emails_status_updatesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Communications_emails_status_updates that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emails_status_updatesFindFirstOrThrowArgs} args - Arguments to find a Communications_emails_status_updates
     * @example
     * // Get one Communications_emails_status_updates
     * const communications_emails_status_updates = await prisma.communications_emails_status_updates.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends communications_emails_status_updatesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emails_status_updatesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__communications_emails_status_updatesClient<$Result.GetResult<Prisma.$communications_emails_status_updatesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Communications_emails_status_updates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emails_status_updatesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Communications_emails_status_updates
     * const communications_emails_status_updates = await prisma.communications_emails_status_updates.findMany()
     * 
     * // Get first 10 Communications_emails_status_updates
     * const communications_emails_status_updates = await prisma.communications_emails_status_updates.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const communications_emails_status_updatesWithIdOnly = await prisma.communications_emails_status_updates.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends communications_emails_status_updatesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emails_status_updatesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communications_emails_status_updatesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Communications_emails_status_updates.
     * @param {communications_emails_status_updatesCreateArgs} args - Arguments to create a Communications_emails_status_updates.
     * @example
     * // Create one Communications_emails_status_updates
     * const Communications_emails_status_updates = await prisma.communications_emails_status_updates.create({
     *   data: {
     *     // ... data to create a Communications_emails_status_updates
     *   }
     * })
     * 
    **/
    create<T extends communications_emails_status_updatesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emails_status_updatesCreateArgs<ExtArgs>>
    ): Prisma__communications_emails_status_updatesClient<$Result.GetResult<Prisma.$communications_emails_status_updatesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Communications_emails_status_updates.
     *     @param {communications_emails_status_updatesCreateManyArgs} args - Arguments to create many Communications_emails_status_updates.
     *     @example
     *     // Create many Communications_emails_status_updates
     *     const communications_emails_status_updates = await prisma.communications_emails_status_updates.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends communications_emails_status_updatesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emails_status_updatesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Communications_emails_status_updates.
     * @param {communications_emails_status_updatesDeleteArgs} args - Arguments to delete one Communications_emails_status_updates.
     * @example
     * // Delete one Communications_emails_status_updates
     * const Communications_emails_status_updates = await prisma.communications_emails_status_updates.delete({
     *   where: {
     *     // ... filter to delete one Communications_emails_status_updates
     *   }
     * })
     * 
    **/
    delete<T extends communications_emails_status_updatesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emails_status_updatesDeleteArgs<ExtArgs>>
    ): Prisma__communications_emails_status_updatesClient<$Result.GetResult<Prisma.$communications_emails_status_updatesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Communications_emails_status_updates.
     * @param {communications_emails_status_updatesUpdateArgs} args - Arguments to update one Communications_emails_status_updates.
     * @example
     * // Update one Communications_emails_status_updates
     * const communications_emails_status_updates = await prisma.communications_emails_status_updates.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends communications_emails_status_updatesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emails_status_updatesUpdateArgs<ExtArgs>>
    ): Prisma__communications_emails_status_updatesClient<$Result.GetResult<Prisma.$communications_emails_status_updatesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Communications_emails_status_updates.
     * @param {communications_emails_status_updatesDeleteManyArgs} args - Arguments to filter Communications_emails_status_updates to delete.
     * @example
     * // Delete a few Communications_emails_status_updates
     * const { count } = await prisma.communications_emails_status_updates.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends communications_emails_status_updatesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_emails_status_updatesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communications_emails_status_updates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emails_status_updatesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Communications_emails_status_updates
     * const communications_emails_status_updates = await prisma.communications_emails_status_updates.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends communications_emails_status_updatesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emails_status_updatesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Communications_emails_status_updates.
     * @param {communications_emails_status_updatesUpsertArgs} args - Arguments to update or create a Communications_emails_status_updates.
     * @example
     * // Update or create a Communications_emails_status_updates
     * const communications_emails_status_updates = await prisma.communications_emails_status_updates.upsert({
     *   create: {
     *     // ... data to create a Communications_emails_status_updates
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Communications_emails_status_updates we want to update
     *   }
     * })
    **/
    upsert<T extends communications_emails_status_updatesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, communications_emails_status_updatesUpsertArgs<ExtArgs>>
    ): Prisma__communications_emails_status_updatesClient<$Result.GetResult<Prisma.$communications_emails_status_updatesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Communications_emails_status_updates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emails_status_updatesCountArgs} args - Arguments to filter Communications_emails_status_updates to count.
     * @example
     * // Count the number of Communications_emails_status_updates
     * const count = await prisma.communications_emails_status_updates.count({
     *   where: {
     *     // ... the filter for the Communications_emails_status_updates we want to count
     *   }
     * })
    **/
    count<T extends communications_emails_status_updatesCountArgs>(
      args?: Subset<T, communications_emails_status_updatesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Communications_emails_status_updatesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Communications_emails_status_updates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Communications_emails_status_updatesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Communications_emails_status_updatesAggregateArgs>(args: Subset<T, Communications_emails_status_updatesAggregateArgs>): Prisma.PrismaPromise<GetCommunications_emails_status_updatesAggregateType<T>>

    /**
     * Group by Communications_emails_status_updates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_emails_status_updatesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends communications_emails_status_updatesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: communications_emails_status_updatesGroupByArgs['orderBy'] }
        : { orderBy?: communications_emails_status_updatesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, communications_emails_status_updatesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunications_emails_status_updatesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the communications_emails_status_updates model
   */
  readonly fields: communications_emails_status_updatesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for communications_emails_status_updates.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__communications_emails_status_updatesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    communications_emails_communications_emails_status_updates_communications_emailsTocommunications_emails<T extends communications_emailsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, communications_emailsDefaultArgs<ExtArgs>>): Prisma__communications_emailsClient<$Result.GetResult<Prisma.$communications_emailsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the communications_emails_status_updates model
   */ 
  interface communications_emails_status_updatesFieldRefs {
    readonly id: FieldRef<"communications_emails_status_updates", 'String'>
    readonly communications_emails: FieldRef<"communications_emails_status_updates", 'String'>
    readonly status: FieldRef<"communications_emails_status_updates", 'String'>
    readonly created_at: FieldRef<"communications_emails_status_updates", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * communications_emails_status_updates findUnique
   */
  export type communications_emails_status_updatesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
    /**
     * Filter, which communications_emails_status_updates to fetch.
     */
    where: communications_emails_status_updatesWhereUniqueInput
  }


  /**
   * communications_emails_status_updates findUniqueOrThrow
   */
  export type communications_emails_status_updatesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
    /**
     * Filter, which communications_emails_status_updates to fetch.
     */
    where: communications_emails_status_updatesWhereUniqueInput
  }


  /**
   * communications_emails_status_updates findFirst
   */
  export type communications_emails_status_updatesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
    /**
     * Filter, which communications_emails_status_updates to fetch.
     */
    where?: communications_emails_status_updatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_emails_status_updates to fetch.
     */
    orderBy?: communications_emails_status_updatesOrderByWithRelationInput | communications_emails_status_updatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communications_emails_status_updates.
     */
    cursor?: communications_emails_status_updatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_emails_status_updates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_emails_status_updates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communications_emails_status_updates.
     */
    distinct?: Communications_emails_status_updatesScalarFieldEnum | Communications_emails_status_updatesScalarFieldEnum[]
  }


  /**
   * communications_emails_status_updates findFirstOrThrow
   */
  export type communications_emails_status_updatesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
    /**
     * Filter, which communications_emails_status_updates to fetch.
     */
    where?: communications_emails_status_updatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_emails_status_updates to fetch.
     */
    orderBy?: communications_emails_status_updatesOrderByWithRelationInput | communications_emails_status_updatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communications_emails_status_updates.
     */
    cursor?: communications_emails_status_updatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_emails_status_updates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_emails_status_updates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communications_emails_status_updates.
     */
    distinct?: Communications_emails_status_updatesScalarFieldEnum | Communications_emails_status_updatesScalarFieldEnum[]
  }


  /**
   * communications_emails_status_updates findMany
   */
  export type communications_emails_status_updatesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
    /**
     * Filter, which communications_emails_status_updates to fetch.
     */
    where?: communications_emails_status_updatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_emails_status_updates to fetch.
     */
    orderBy?: communications_emails_status_updatesOrderByWithRelationInput | communications_emails_status_updatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing communications_emails_status_updates.
     */
    cursor?: communications_emails_status_updatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_emails_status_updates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_emails_status_updates.
     */
    skip?: number
    distinct?: Communications_emails_status_updatesScalarFieldEnum | Communications_emails_status_updatesScalarFieldEnum[]
  }


  /**
   * communications_emails_status_updates create
   */
  export type communications_emails_status_updatesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
    /**
     * The data needed to create a communications_emails_status_updates.
     */
    data: XOR<communications_emails_status_updatesCreateInput, communications_emails_status_updatesUncheckedCreateInput>
  }


  /**
   * communications_emails_status_updates createMany
   */
  export type communications_emails_status_updatesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many communications_emails_status_updates.
     */
    data: communications_emails_status_updatesCreateManyInput | communications_emails_status_updatesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * communications_emails_status_updates update
   */
  export type communications_emails_status_updatesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
    /**
     * The data needed to update a communications_emails_status_updates.
     */
    data: XOR<communications_emails_status_updatesUpdateInput, communications_emails_status_updatesUncheckedUpdateInput>
    /**
     * Choose, which communications_emails_status_updates to update.
     */
    where: communications_emails_status_updatesWhereUniqueInput
  }


  /**
   * communications_emails_status_updates updateMany
   */
  export type communications_emails_status_updatesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update communications_emails_status_updates.
     */
    data: XOR<communications_emails_status_updatesUpdateManyMutationInput, communications_emails_status_updatesUncheckedUpdateManyInput>
    /**
     * Filter which communications_emails_status_updates to update
     */
    where?: communications_emails_status_updatesWhereInput
  }


  /**
   * communications_emails_status_updates upsert
   */
  export type communications_emails_status_updatesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
    /**
     * The filter to search for the communications_emails_status_updates to update in case it exists.
     */
    where: communications_emails_status_updatesWhereUniqueInput
    /**
     * In case the communications_emails_status_updates found by the `where` argument doesn't exist, create a new communications_emails_status_updates with this data.
     */
    create: XOR<communications_emails_status_updatesCreateInput, communications_emails_status_updatesUncheckedCreateInput>
    /**
     * In case the communications_emails_status_updates was found with the provided `where` argument, update it with this data.
     */
    update: XOR<communications_emails_status_updatesUpdateInput, communications_emails_status_updatesUncheckedUpdateInput>
  }


  /**
   * communications_emails_status_updates delete
   */
  export type communications_emails_status_updatesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
    /**
     * Filter which communications_emails_status_updates to delete.
     */
    where: communications_emails_status_updatesWhereUniqueInput
  }


  /**
   * communications_emails_status_updates deleteMany
   */
  export type communications_emails_status_updatesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communications_emails_status_updates to delete
     */
    where?: communications_emails_status_updatesWhereInput
  }


  /**
   * communications_emails_status_updates without action
   */
  export type communications_emails_status_updatesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_emails_status_updates
     */
    select?: communications_emails_status_updatesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_emails_status_updatesInclude<ExtArgs> | null
  }



  /**
   * Model communications_texts
   */

  export type AggregateCommunications_texts = {
    _count: Communications_textsCountAggregateOutputType | null
    _min: Communications_textsMinAggregateOutputType | null
    _max: Communications_textsMaxAggregateOutputType | null
  }

  export type Communications_textsMinAggregateOutputType = {
    id: string | null
    communications_id: string | null
    status: string | null
    created_at: Date | null
  }

  export type Communications_textsMaxAggregateOutputType = {
    id: string | null
    communications_id: string | null
    status: string | null
    created_at: Date | null
  }

  export type Communications_textsCountAggregateOutputType = {
    id: number
    communications_id: number
    status: number
    created_at: number
    _all: number
  }


  export type Communications_textsMinAggregateInputType = {
    id?: true
    communications_id?: true
    status?: true
    created_at?: true
  }

  export type Communications_textsMaxAggregateInputType = {
    id?: true
    communications_id?: true
    status?: true
    created_at?: true
  }

  export type Communications_textsCountAggregateInputType = {
    id?: true
    communications_id?: true
    status?: true
    created_at?: true
    _all?: true
  }

  export type Communications_textsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communications_texts to aggregate.
     */
    where?: communications_textsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_texts to fetch.
     */
    orderBy?: communications_textsOrderByWithRelationInput | communications_textsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: communications_textsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_texts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_texts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned communications_texts
    **/
    _count?: true | Communications_textsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Communications_textsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Communications_textsMaxAggregateInputType
  }

  export type GetCommunications_textsAggregateType<T extends Communications_textsAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunications_texts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunications_texts[P]>
      : GetScalarType<T[P], AggregateCommunications_texts[P]>
  }




  export type communications_textsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communications_textsWhereInput
    orderBy?: communications_textsOrderByWithAggregationInput | communications_textsOrderByWithAggregationInput[]
    by: Communications_textsScalarFieldEnum[] | Communications_textsScalarFieldEnum
    having?: communications_textsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Communications_textsCountAggregateInputType | true
    _min?: Communications_textsMinAggregateInputType
    _max?: Communications_textsMaxAggregateInputType
  }

  export type Communications_textsGroupByOutputType = {
    id: string
    communications_id: string
    status: string
    created_at: Date
    _count: Communications_textsCountAggregateOutputType | null
    _min: Communications_textsMinAggregateOutputType | null
    _max: Communications_textsMaxAggregateOutputType | null
  }

  type GetCommunications_textsGroupByPayload<T extends communications_textsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Communications_textsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Communications_textsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Communications_textsGroupByOutputType[P]>
            : GetScalarType<T[P], Communications_textsGroupByOutputType[P]>
        }
      >
    >


  export type communications_textsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    communications_id?: boolean
    status?: boolean
    created_at?: boolean
    communications?: boolean | communicationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communications_texts"]>

  export type communications_textsSelectScalar = {
    id?: boolean
    communications_id?: boolean
    status?: boolean
    created_at?: boolean
  }

  export type communications_textsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    communications?: boolean | communicationsDefaultArgs<ExtArgs>
  }


  export type $communications_textsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "communications_texts"
    objects: {
      communications: Prisma.$communicationsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      communications_id: string
      status: string
      created_at: Date
    }, ExtArgs["result"]["communications_texts"]>
    composites: {}
  }


  type communications_textsGetPayload<S extends boolean | null | undefined | communications_textsDefaultArgs> = $Result.GetResult<Prisma.$communications_textsPayload, S>

  type communications_textsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<communications_textsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Communications_textsCountAggregateInputType | true
    }

  export interface communications_textsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['communications_texts'], meta: { name: 'communications_texts' } }
    /**
     * Find zero or one Communications_texts that matches the filter.
     * @param {communications_textsFindUniqueArgs} args - Arguments to find a Communications_texts
     * @example
     * // Get one Communications_texts
     * const communications_texts = await prisma.communications_texts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends communications_textsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, communications_textsFindUniqueArgs<ExtArgs>>
    ): Prisma__communications_textsClient<$Result.GetResult<Prisma.$communications_textsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Communications_texts that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {communications_textsFindUniqueOrThrowArgs} args - Arguments to find a Communications_texts
     * @example
     * // Get one Communications_texts
     * const communications_texts = await prisma.communications_texts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends communications_textsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_textsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__communications_textsClient<$Result.GetResult<Prisma.$communications_textsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Communications_texts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_textsFindFirstArgs} args - Arguments to find a Communications_texts
     * @example
     * // Get one Communications_texts
     * const communications_texts = await prisma.communications_texts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends communications_textsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_textsFindFirstArgs<ExtArgs>>
    ): Prisma__communications_textsClient<$Result.GetResult<Prisma.$communications_textsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Communications_texts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_textsFindFirstOrThrowArgs} args - Arguments to find a Communications_texts
     * @example
     * // Get one Communications_texts
     * const communications_texts = await prisma.communications_texts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends communications_textsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_textsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__communications_textsClient<$Result.GetResult<Prisma.$communications_textsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Communications_texts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_textsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Communications_texts
     * const communications_texts = await prisma.communications_texts.findMany()
     * 
     * // Get first 10 Communications_texts
     * const communications_texts = await prisma.communications_texts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const communications_textsWithIdOnly = await prisma.communications_texts.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends communications_textsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_textsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communications_textsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Communications_texts.
     * @param {communications_textsCreateArgs} args - Arguments to create a Communications_texts.
     * @example
     * // Create one Communications_texts
     * const Communications_texts = await prisma.communications_texts.create({
     *   data: {
     *     // ... data to create a Communications_texts
     *   }
     * })
     * 
    **/
    create<T extends communications_textsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, communications_textsCreateArgs<ExtArgs>>
    ): Prisma__communications_textsClient<$Result.GetResult<Prisma.$communications_textsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Communications_texts.
     *     @param {communications_textsCreateManyArgs} args - Arguments to create many Communications_texts.
     *     @example
     *     // Create many Communications_texts
     *     const communications_texts = await prisma.communications_texts.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends communications_textsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_textsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Communications_texts.
     * @param {communications_textsDeleteArgs} args - Arguments to delete one Communications_texts.
     * @example
     * // Delete one Communications_texts
     * const Communications_texts = await prisma.communications_texts.delete({
     *   where: {
     *     // ... filter to delete one Communications_texts
     *   }
     * })
     * 
    **/
    delete<T extends communications_textsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, communications_textsDeleteArgs<ExtArgs>>
    ): Prisma__communications_textsClient<$Result.GetResult<Prisma.$communications_textsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Communications_texts.
     * @param {communications_textsUpdateArgs} args - Arguments to update one Communications_texts.
     * @example
     * // Update one Communications_texts
     * const communications_texts = await prisma.communications_texts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends communications_textsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, communications_textsUpdateArgs<ExtArgs>>
    ): Prisma__communications_textsClient<$Result.GetResult<Prisma.$communications_textsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Communications_texts.
     * @param {communications_textsDeleteManyArgs} args - Arguments to filter Communications_texts to delete.
     * @example
     * // Delete a few Communications_texts
     * const { count } = await prisma.communications_texts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends communications_textsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, communications_textsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communications_texts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_textsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Communications_texts
     * const communications_texts = await prisma.communications_texts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends communications_textsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, communications_textsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Communications_texts.
     * @param {communications_textsUpsertArgs} args - Arguments to update or create a Communications_texts.
     * @example
     * // Update or create a Communications_texts
     * const communications_texts = await prisma.communications_texts.upsert({
     *   create: {
     *     // ... data to create a Communications_texts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Communications_texts we want to update
     *   }
     * })
    **/
    upsert<T extends communications_textsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, communications_textsUpsertArgs<ExtArgs>>
    ): Prisma__communications_textsClient<$Result.GetResult<Prisma.$communications_textsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Communications_texts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_textsCountArgs} args - Arguments to filter Communications_texts to count.
     * @example
     * // Count the number of Communications_texts
     * const count = await prisma.communications_texts.count({
     *   where: {
     *     // ... the filter for the Communications_texts we want to count
     *   }
     * })
    **/
    count<T extends communications_textsCountArgs>(
      args?: Subset<T, communications_textsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Communications_textsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Communications_texts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Communications_textsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Communications_textsAggregateArgs>(args: Subset<T, Communications_textsAggregateArgs>): Prisma.PrismaPromise<GetCommunications_textsAggregateType<T>>

    /**
     * Group by Communications_texts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communications_textsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends communications_textsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: communications_textsGroupByArgs['orderBy'] }
        : { orderBy?: communications_textsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, communications_textsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunications_textsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the communications_texts model
   */
  readonly fields: communications_textsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for communications_texts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__communications_textsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    communications<T extends communicationsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, communicationsDefaultArgs<ExtArgs>>): Prisma__communicationsClient<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the communications_texts model
   */ 
  interface communications_textsFieldRefs {
    readonly id: FieldRef<"communications_texts", 'String'>
    readonly communications_id: FieldRef<"communications_texts", 'String'>
    readonly status: FieldRef<"communications_texts", 'String'>
    readonly created_at: FieldRef<"communications_texts", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * communications_texts findUnique
   */
  export type communications_textsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
    /**
     * Filter, which communications_texts to fetch.
     */
    where: communications_textsWhereUniqueInput
  }


  /**
   * communications_texts findUniqueOrThrow
   */
  export type communications_textsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
    /**
     * Filter, which communications_texts to fetch.
     */
    where: communications_textsWhereUniqueInput
  }


  /**
   * communications_texts findFirst
   */
  export type communications_textsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
    /**
     * Filter, which communications_texts to fetch.
     */
    where?: communications_textsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_texts to fetch.
     */
    orderBy?: communications_textsOrderByWithRelationInput | communications_textsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communications_texts.
     */
    cursor?: communications_textsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_texts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_texts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communications_texts.
     */
    distinct?: Communications_textsScalarFieldEnum | Communications_textsScalarFieldEnum[]
  }


  /**
   * communications_texts findFirstOrThrow
   */
  export type communications_textsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
    /**
     * Filter, which communications_texts to fetch.
     */
    where?: communications_textsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_texts to fetch.
     */
    orderBy?: communications_textsOrderByWithRelationInput | communications_textsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communications_texts.
     */
    cursor?: communications_textsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_texts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_texts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communications_texts.
     */
    distinct?: Communications_textsScalarFieldEnum | Communications_textsScalarFieldEnum[]
  }


  /**
   * communications_texts findMany
   */
  export type communications_textsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
    /**
     * Filter, which communications_texts to fetch.
     */
    where?: communications_textsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communications_texts to fetch.
     */
    orderBy?: communications_textsOrderByWithRelationInput | communications_textsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing communications_texts.
     */
    cursor?: communications_textsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communications_texts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communications_texts.
     */
    skip?: number
    distinct?: Communications_textsScalarFieldEnum | Communications_textsScalarFieldEnum[]
  }


  /**
   * communications_texts create
   */
  export type communications_textsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
    /**
     * The data needed to create a communications_texts.
     */
    data: XOR<communications_textsCreateInput, communications_textsUncheckedCreateInput>
  }


  /**
   * communications_texts createMany
   */
  export type communications_textsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many communications_texts.
     */
    data: communications_textsCreateManyInput | communications_textsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * communications_texts update
   */
  export type communications_textsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
    /**
     * The data needed to update a communications_texts.
     */
    data: XOR<communications_textsUpdateInput, communications_textsUncheckedUpdateInput>
    /**
     * Choose, which communications_texts to update.
     */
    where: communications_textsWhereUniqueInput
  }


  /**
   * communications_texts updateMany
   */
  export type communications_textsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update communications_texts.
     */
    data: XOR<communications_textsUpdateManyMutationInput, communications_textsUncheckedUpdateManyInput>
    /**
     * Filter which communications_texts to update
     */
    where?: communications_textsWhereInput
  }


  /**
   * communications_texts upsert
   */
  export type communications_textsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
    /**
     * The filter to search for the communications_texts to update in case it exists.
     */
    where: communications_textsWhereUniqueInput
    /**
     * In case the communications_texts found by the `where` argument doesn't exist, create a new communications_texts with this data.
     */
    create: XOR<communications_textsCreateInput, communications_textsUncheckedCreateInput>
    /**
     * In case the communications_texts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<communications_textsUpdateInput, communications_textsUncheckedUpdateInput>
  }


  /**
   * communications_texts delete
   */
  export type communications_textsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
    /**
     * Filter which communications_texts to delete.
     */
    where: communications_textsWhereUniqueInput
  }


  /**
   * communications_texts deleteMany
   */
  export type communications_textsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communications_texts to delete
     */
    where?: communications_textsWhereInput
  }


  /**
   * communications_texts without action
   */
  export type communications_textsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications_texts
     */
    select?: communications_textsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communications_textsInclude<ExtArgs> | null
  }



  /**
   * Model contact_info_emails
   */

  export type AggregateContact_info_emails = {
    _count: Contact_info_emailsCountAggregateOutputType | null
    _avg: Contact_info_emailsAvgAggregateOutputType | null
    _sum: Contact_info_emailsSumAggregateOutputType | null
    _min: Contact_info_emailsMinAggregateOutputType | null
    _max: Contact_info_emailsMaxAggregateOutputType | null
  }

  export type Contact_info_emailsAvgAggregateOutputType = {
    priority: number | null
  }

  export type Contact_info_emailsSumAggregateOutputType = {
    priority: number | null
  }

  export type Contact_info_emailsMinAggregateOutputType = {
    id: string | null
    contact_id: string | null
    value: string | null
    priority: number | null
    created_at: Date | null
    email_id: string | null
  }

  export type Contact_info_emailsMaxAggregateOutputType = {
    id: string | null
    contact_id: string | null
    value: string | null
    priority: number | null
    created_at: Date | null
    email_id: string | null
  }

  export type Contact_info_emailsCountAggregateOutputType = {
    id: number
    contact_id: number
    value: number
    priority: number
    created_at: number
    email_id: number
    _all: number
  }


  export type Contact_info_emailsAvgAggregateInputType = {
    priority?: true
  }

  export type Contact_info_emailsSumAggregateInputType = {
    priority?: true
  }

  export type Contact_info_emailsMinAggregateInputType = {
    id?: true
    contact_id?: true
    value?: true
    priority?: true
    created_at?: true
    email_id?: true
  }

  export type Contact_info_emailsMaxAggregateInputType = {
    id?: true
    contact_id?: true
    value?: true
    priority?: true
    created_at?: true
    email_id?: true
  }

  export type Contact_info_emailsCountAggregateInputType = {
    id?: true
    contact_id?: true
    value?: true
    priority?: true
    created_at?: true
    email_id?: true
    _all?: true
  }

  export type Contact_info_emailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contact_info_emails to aggregate.
     */
    where?: contact_info_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_info_emails to fetch.
     */
    orderBy?: contact_info_emailsOrderByWithRelationInput | contact_info_emailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: contact_info_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_info_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_info_emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned contact_info_emails
    **/
    _count?: true | Contact_info_emailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Contact_info_emailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Contact_info_emailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Contact_info_emailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Contact_info_emailsMaxAggregateInputType
  }

  export type GetContact_info_emailsAggregateType<T extends Contact_info_emailsAggregateArgs> = {
        [P in keyof T & keyof AggregateContact_info_emails]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact_info_emails[P]>
      : GetScalarType<T[P], AggregateContact_info_emails[P]>
  }




  export type contact_info_emailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contact_info_emailsWhereInput
    orderBy?: contact_info_emailsOrderByWithAggregationInput | contact_info_emailsOrderByWithAggregationInput[]
    by: Contact_info_emailsScalarFieldEnum[] | Contact_info_emailsScalarFieldEnum
    having?: contact_info_emailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Contact_info_emailsCountAggregateInputType | true
    _avg?: Contact_info_emailsAvgAggregateInputType
    _sum?: Contact_info_emailsSumAggregateInputType
    _min?: Contact_info_emailsMinAggregateInputType
    _max?: Contact_info_emailsMaxAggregateInputType
  }

  export type Contact_info_emailsGroupByOutputType = {
    id: string
    contact_id: string
    value: string
    priority: number
    created_at: Date
    email_id: string
    _count: Contact_info_emailsCountAggregateOutputType | null
    _avg: Contact_info_emailsAvgAggregateOutputType | null
    _sum: Contact_info_emailsSumAggregateOutputType | null
    _min: Contact_info_emailsMinAggregateOutputType | null
    _max: Contact_info_emailsMaxAggregateOutputType | null
  }

  type GetContact_info_emailsGroupByPayload<T extends contact_info_emailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Contact_info_emailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Contact_info_emailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Contact_info_emailsGroupByOutputType[P]>
            : GetScalarType<T[P], Contact_info_emailsGroupByOutputType[P]>
        }
      >
    >


  export type contact_info_emailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    contact_id?: boolean
    value?: boolean
    priority?: boolean
    created_at?: boolean
    email_id?: boolean
    contacts?: boolean | contactsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contact_info_emails"]>

  export type contact_info_emailsSelectScalar = {
    id?: boolean
    contact_id?: boolean
    value?: boolean
    priority?: boolean
    created_at?: boolean
    email_id?: boolean
  }

  export type contact_info_emailsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contacts?: boolean | contactsDefaultArgs<ExtArgs>
  }


  export type $contact_info_emailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "contact_info_emails"
    objects: {
      contacts: Prisma.$contactsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      contact_id: string
      value: string
      priority: number
      created_at: Date
      email_id: string
    }, ExtArgs["result"]["contact_info_emails"]>
    composites: {}
  }


  type contact_info_emailsGetPayload<S extends boolean | null | undefined | contact_info_emailsDefaultArgs> = $Result.GetResult<Prisma.$contact_info_emailsPayload, S>

  type contact_info_emailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<contact_info_emailsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Contact_info_emailsCountAggregateInputType | true
    }

  export interface contact_info_emailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['contact_info_emails'], meta: { name: 'contact_info_emails' } }
    /**
     * Find zero or one Contact_info_emails that matches the filter.
     * @param {contact_info_emailsFindUniqueArgs} args - Arguments to find a Contact_info_emails
     * @example
     * // Get one Contact_info_emails
     * const contact_info_emails = await prisma.contact_info_emails.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends contact_info_emailsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_emailsFindUniqueArgs<ExtArgs>>
    ): Prisma__contact_info_emailsClient<$Result.GetResult<Prisma.$contact_info_emailsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Contact_info_emails that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {contact_info_emailsFindUniqueOrThrowArgs} args - Arguments to find a Contact_info_emails
     * @example
     * // Get one Contact_info_emails
     * const contact_info_emails = await prisma.contact_info_emails.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends contact_info_emailsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_emailsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__contact_info_emailsClient<$Result.GetResult<Prisma.$contact_info_emailsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Contact_info_emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_emailsFindFirstArgs} args - Arguments to find a Contact_info_emails
     * @example
     * // Get one Contact_info_emails
     * const contact_info_emails = await prisma.contact_info_emails.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends contact_info_emailsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_emailsFindFirstArgs<ExtArgs>>
    ): Prisma__contact_info_emailsClient<$Result.GetResult<Prisma.$contact_info_emailsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Contact_info_emails that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_emailsFindFirstOrThrowArgs} args - Arguments to find a Contact_info_emails
     * @example
     * // Get one Contact_info_emails
     * const contact_info_emails = await prisma.contact_info_emails.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends contact_info_emailsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_emailsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__contact_info_emailsClient<$Result.GetResult<Prisma.$contact_info_emailsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Contact_info_emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_emailsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contact_info_emails
     * const contact_info_emails = await prisma.contact_info_emails.findMany()
     * 
     * // Get first 10 Contact_info_emails
     * const contact_info_emails = await prisma.contact_info_emails.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contact_info_emailsWithIdOnly = await prisma.contact_info_emails.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends contact_info_emailsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_emailsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contact_info_emailsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Contact_info_emails.
     * @param {contact_info_emailsCreateArgs} args - Arguments to create a Contact_info_emails.
     * @example
     * // Create one Contact_info_emails
     * const Contact_info_emails = await prisma.contact_info_emails.create({
     *   data: {
     *     // ... data to create a Contact_info_emails
     *   }
     * })
     * 
    **/
    create<T extends contact_info_emailsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_emailsCreateArgs<ExtArgs>>
    ): Prisma__contact_info_emailsClient<$Result.GetResult<Prisma.$contact_info_emailsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Contact_info_emails.
     *     @param {contact_info_emailsCreateManyArgs} args - Arguments to create many Contact_info_emails.
     *     @example
     *     // Create many Contact_info_emails
     *     const contact_info_emails = await prisma.contact_info_emails.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends contact_info_emailsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_emailsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Contact_info_emails.
     * @param {contact_info_emailsDeleteArgs} args - Arguments to delete one Contact_info_emails.
     * @example
     * // Delete one Contact_info_emails
     * const Contact_info_emails = await prisma.contact_info_emails.delete({
     *   where: {
     *     // ... filter to delete one Contact_info_emails
     *   }
     * })
     * 
    **/
    delete<T extends contact_info_emailsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_emailsDeleteArgs<ExtArgs>>
    ): Prisma__contact_info_emailsClient<$Result.GetResult<Prisma.$contact_info_emailsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Contact_info_emails.
     * @param {contact_info_emailsUpdateArgs} args - Arguments to update one Contact_info_emails.
     * @example
     * // Update one Contact_info_emails
     * const contact_info_emails = await prisma.contact_info_emails.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends contact_info_emailsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_emailsUpdateArgs<ExtArgs>>
    ): Prisma__contact_info_emailsClient<$Result.GetResult<Prisma.$contact_info_emailsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Contact_info_emails.
     * @param {contact_info_emailsDeleteManyArgs} args - Arguments to filter Contact_info_emails to delete.
     * @example
     * // Delete a few Contact_info_emails
     * const { count } = await prisma.contact_info_emails.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends contact_info_emailsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_emailsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contact_info_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_emailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contact_info_emails
     * const contact_info_emails = await prisma.contact_info_emails.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends contact_info_emailsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_emailsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contact_info_emails.
     * @param {contact_info_emailsUpsertArgs} args - Arguments to update or create a Contact_info_emails.
     * @example
     * // Update or create a Contact_info_emails
     * const contact_info_emails = await prisma.contact_info_emails.upsert({
     *   create: {
     *     // ... data to create a Contact_info_emails
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact_info_emails we want to update
     *   }
     * })
    **/
    upsert<T extends contact_info_emailsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_emailsUpsertArgs<ExtArgs>>
    ): Prisma__contact_info_emailsClient<$Result.GetResult<Prisma.$contact_info_emailsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Contact_info_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_emailsCountArgs} args - Arguments to filter Contact_info_emails to count.
     * @example
     * // Count the number of Contact_info_emails
     * const count = await prisma.contact_info_emails.count({
     *   where: {
     *     // ... the filter for the Contact_info_emails we want to count
     *   }
     * })
    **/
    count<T extends contact_info_emailsCountArgs>(
      args?: Subset<T, contact_info_emailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Contact_info_emailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact_info_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Contact_info_emailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Contact_info_emailsAggregateArgs>(args: Subset<T, Contact_info_emailsAggregateArgs>): Prisma.PrismaPromise<GetContact_info_emailsAggregateType<T>>

    /**
     * Group by Contact_info_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_emailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends contact_info_emailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: contact_info_emailsGroupByArgs['orderBy'] }
        : { orderBy?: contact_info_emailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, contact_info_emailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContact_info_emailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the contact_info_emails model
   */
  readonly fields: contact_info_emailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for contact_info_emails.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__contact_info_emailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    contacts<T extends contactsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, contactsDefaultArgs<ExtArgs>>): Prisma__contactsClient<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the contact_info_emails model
   */ 
  interface contact_info_emailsFieldRefs {
    readonly id: FieldRef<"contact_info_emails", 'String'>
    readonly contact_id: FieldRef<"contact_info_emails", 'String'>
    readonly value: FieldRef<"contact_info_emails", 'String'>
    readonly priority: FieldRef<"contact_info_emails", 'Int'>
    readonly created_at: FieldRef<"contact_info_emails", 'DateTime'>
    readonly email_id: FieldRef<"contact_info_emails", 'String'>
  }
    

  // Custom InputTypes

  /**
   * contact_info_emails findUnique
   */
  export type contact_info_emailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
    /**
     * Filter, which contact_info_emails to fetch.
     */
    where: contact_info_emailsWhereUniqueInput
  }


  /**
   * contact_info_emails findUniqueOrThrow
   */
  export type contact_info_emailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
    /**
     * Filter, which contact_info_emails to fetch.
     */
    where: contact_info_emailsWhereUniqueInput
  }


  /**
   * contact_info_emails findFirst
   */
  export type contact_info_emailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
    /**
     * Filter, which contact_info_emails to fetch.
     */
    where?: contact_info_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_info_emails to fetch.
     */
    orderBy?: contact_info_emailsOrderByWithRelationInput | contact_info_emailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contact_info_emails.
     */
    cursor?: contact_info_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_info_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_info_emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contact_info_emails.
     */
    distinct?: Contact_info_emailsScalarFieldEnum | Contact_info_emailsScalarFieldEnum[]
  }


  /**
   * contact_info_emails findFirstOrThrow
   */
  export type contact_info_emailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
    /**
     * Filter, which contact_info_emails to fetch.
     */
    where?: contact_info_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_info_emails to fetch.
     */
    orderBy?: contact_info_emailsOrderByWithRelationInput | contact_info_emailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contact_info_emails.
     */
    cursor?: contact_info_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_info_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_info_emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contact_info_emails.
     */
    distinct?: Contact_info_emailsScalarFieldEnum | Contact_info_emailsScalarFieldEnum[]
  }


  /**
   * contact_info_emails findMany
   */
  export type contact_info_emailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
    /**
     * Filter, which contact_info_emails to fetch.
     */
    where?: contact_info_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_info_emails to fetch.
     */
    orderBy?: contact_info_emailsOrderByWithRelationInput | contact_info_emailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing contact_info_emails.
     */
    cursor?: contact_info_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_info_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_info_emails.
     */
    skip?: number
    distinct?: Contact_info_emailsScalarFieldEnum | Contact_info_emailsScalarFieldEnum[]
  }


  /**
   * contact_info_emails create
   */
  export type contact_info_emailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
    /**
     * The data needed to create a contact_info_emails.
     */
    data: XOR<contact_info_emailsCreateInput, contact_info_emailsUncheckedCreateInput>
  }


  /**
   * contact_info_emails createMany
   */
  export type contact_info_emailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many contact_info_emails.
     */
    data: contact_info_emailsCreateManyInput | contact_info_emailsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * contact_info_emails update
   */
  export type contact_info_emailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
    /**
     * The data needed to update a contact_info_emails.
     */
    data: XOR<contact_info_emailsUpdateInput, contact_info_emailsUncheckedUpdateInput>
    /**
     * Choose, which contact_info_emails to update.
     */
    where: contact_info_emailsWhereUniqueInput
  }


  /**
   * contact_info_emails updateMany
   */
  export type contact_info_emailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update contact_info_emails.
     */
    data: XOR<contact_info_emailsUpdateManyMutationInput, contact_info_emailsUncheckedUpdateManyInput>
    /**
     * Filter which contact_info_emails to update
     */
    where?: contact_info_emailsWhereInput
  }


  /**
   * contact_info_emails upsert
   */
  export type contact_info_emailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
    /**
     * The filter to search for the contact_info_emails to update in case it exists.
     */
    where: contact_info_emailsWhereUniqueInput
    /**
     * In case the contact_info_emails found by the `where` argument doesn't exist, create a new contact_info_emails with this data.
     */
    create: XOR<contact_info_emailsCreateInput, contact_info_emailsUncheckedCreateInput>
    /**
     * In case the contact_info_emails was found with the provided `where` argument, update it with this data.
     */
    update: XOR<contact_info_emailsUpdateInput, contact_info_emailsUncheckedUpdateInput>
  }


  /**
   * contact_info_emails delete
   */
  export type contact_info_emailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
    /**
     * Filter which contact_info_emails to delete.
     */
    where: contact_info_emailsWhereUniqueInput
  }


  /**
   * contact_info_emails deleteMany
   */
  export type contact_info_emailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contact_info_emails to delete
     */
    where?: contact_info_emailsWhereInput
  }


  /**
   * contact_info_emails without action
   */
  export type contact_info_emailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
  }



  /**
   * Model contact_info_phones
   */

  export type AggregateContact_info_phones = {
    _count: Contact_info_phonesCountAggregateOutputType | null
    _avg: Contact_info_phonesAvgAggregateOutputType | null
    _sum: Contact_info_phonesSumAggregateOutputType | null
    _min: Contact_info_phonesMinAggregateOutputType | null
    _max: Contact_info_phonesMaxAggregateOutputType | null
  }

  export type Contact_info_phonesAvgAggregateOutputType = {
    priority: number | null
  }

  export type Contact_info_phonesSumAggregateOutputType = {
    priority: number | null
  }

  export type Contact_info_phonesMinAggregateOutputType = {
    id: string | null
    contact_id: string | null
    type: string | null
    value: string | null
    priority: number | null
    created_at: Date | null
  }

  export type Contact_info_phonesMaxAggregateOutputType = {
    id: string | null
    contact_id: string | null
    type: string | null
    value: string | null
    priority: number | null
    created_at: Date | null
  }

  export type Contact_info_phonesCountAggregateOutputType = {
    id: number
    contact_id: number
    type: number
    value: number
    priority: number
    created_at: number
    _all: number
  }


  export type Contact_info_phonesAvgAggregateInputType = {
    priority?: true
  }

  export type Contact_info_phonesSumAggregateInputType = {
    priority?: true
  }

  export type Contact_info_phonesMinAggregateInputType = {
    id?: true
    contact_id?: true
    type?: true
    value?: true
    priority?: true
    created_at?: true
  }

  export type Contact_info_phonesMaxAggregateInputType = {
    id?: true
    contact_id?: true
    type?: true
    value?: true
    priority?: true
    created_at?: true
  }

  export type Contact_info_phonesCountAggregateInputType = {
    id?: true
    contact_id?: true
    type?: true
    value?: true
    priority?: true
    created_at?: true
    _all?: true
  }

  export type Contact_info_phonesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contact_info_phones to aggregate.
     */
    where?: contact_info_phonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_info_phones to fetch.
     */
    orderBy?: contact_info_phonesOrderByWithRelationInput | contact_info_phonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: contact_info_phonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_info_phones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_info_phones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned contact_info_phones
    **/
    _count?: true | Contact_info_phonesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Contact_info_phonesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Contact_info_phonesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Contact_info_phonesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Contact_info_phonesMaxAggregateInputType
  }

  export type GetContact_info_phonesAggregateType<T extends Contact_info_phonesAggregateArgs> = {
        [P in keyof T & keyof AggregateContact_info_phones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact_info_phones[P]>
      : GetScalarType<T[P], AggregateContact_info_phones[P]>
  }




  export type contact_info_phonesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contact_info_phonesWhereInput
    orderBy?: contact_info_phonesOrderByWithAggregationInput | contact_info_phonesOrderByWithAggregationInput[]
    by: Contact_info_phonesScalarFieldEnum[] | Contact_info_phonesScalarFieldEnum
    having?: contact_info_phonesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Contact_info_phonesCountAggregateInputType | true
    _avg?: Contact_info_phonesAvgAggregateInputType
    _sum?: Contact_info_phonesSumAggregateInputType
    _min?: Contact_info_phonesMinAggregateInputType
    _max?: Contact_info_phonesMaxAggregateInputType
  }

  export type Contact_info_phonesGroupByOutputType = {
    id: string
    contact_id: string
    type: string
    value: string
    priority: number
    created_at: Date
    _count: Contact_info_phonesCountAggregateOutputType | null
    _avg: Contact_info_phonesAvgAggregateOutputType | null
    _sum: Contact_info_phonesSumAggregateOutputType | null
    _min: Contact_info_phonesMinAggregateOutputType | null
    _max: Contact_info_phonesMaxAggregateOutputType | null
  }

  type GetContact_info_phonesGroupByPayload<T extends contact_info_phonesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Contact_info_phonesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Contact_info_phonesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Contact_info_phonesGroupByOutputType[P]>
            : GetScalarType<T[P], Contact_info_phonesGroupByOutputType[P]>
        }
      >
    >


  export type contact_info_phonesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    contact_id?: boolean
    type?: boolean
    value?: boolean
    priority?: boolean
    created_at?: boolean
    contacts?: boolean | contactsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contact_info_phones"]>

  export type contact_info_phonesSelectScalar = {
    id?: boolean
    contact_id?: boolean
    type?: boolean
    value?: boolean
    priority?: boolean
    created_at?: boolean
  }

  export type contact_info_phonesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contacts?: boolean | contactsDefaultArgs<ExtArgs>
  }


  export type $contact_info_phonesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "contact_info_phones"
    objects: {
      contacts: Prisma.$contactsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      contact_id: string
      type: string
      value: string
      priority: number
      created_at: Date
    }, ExtArgs["result"]["contact_info_phones"]>
    composites: {}
  }


  type contact_info_phonesGetPayload<S extends boolean | null | undefined | contact_info_phonesDefaultArgs> = $Result.GetResult<Prisma.$contact_info_phonesPayload, S>

  type contact_info_phonesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<contact_info_phonesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Contact_info_phonesCountAggregateInputType | true
    }

  export interface contact_info_phonesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['contact_info_phones'], meta: { name: 'contact_info_phones' } }
    /**
     * Find zero or one Contact_info_phones that matches the filter.
     * @param {contact_info_phonesFindUniqueArgs} args - Arguments to find a Contact_info_phones
     * @example
     * // Get one Contact_info_phones
     * const contact_info_phones = await prisma.contact_info_phones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends contact_info_phonesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_phonesFindUniqueArgs<ExtArgs>>
    ): Prisma__contact_info_phonesClient<$Result.GetResult<Prisma.$contact_info_phonesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Contact_info_phones that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {contact_info_phonesFindUniqueOrThrowArgs} args - Arguments to find a Contact_info_phones
     * @example
     * // Get one Contact_info_phones
     * const contact_info_phones = await prisma.contact_info_phones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends contact_info_phonesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_phonesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__contact_info_phonesClient<$Result.GetResult<Prisma.$contact_info_phonesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Contact_info_phones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_phonesFindFirstArgs} args - Arguments to find a Contact_info_phones
     * @example
     * // Get one Contact_info_phones
     * const contact_info_phones = await prisma.contact_info_phones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends contact_info_phonesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_phonesFindFirstArgs<ExtArgs>>
    ): Prisma__contact_info_phonesClient<$Result.GetResult<Prisma.$contact_info_phonesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Contact_info_phones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_phonesFindFirstOrThrowArgs} args - Arguments to find a Contact_info_phones
     * @example
     * // Get one Contact_info_phones
     * const contact_info_phones = await prisma.contact_info_phones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends contact_info_phonesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_phonesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__contact_info_phonesClient<$Result.GetResult<Prisma.$contact_info_phonesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Contact_info_phones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_phonesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contact_info_phones
     * const contact_info_phones = await prisma.contact_info_phones.findMany()
     * 
     * // Get first 10 Contact_info_phones
     * const contact_info_phones = await prisma.contact_info_phones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contact_info_phonesWithIdOnly = await prisma.contact_info_phones.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends contact_info_phonesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_phonesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contact_info_phonesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Contact_info_phones.
     * @param {contact_info_phonesCreateArgs} args - Arguments to create a Contact_info_phones.
     * @example
     * // Create one Contact_info_phones
     * const Contact_info_phones = await prisma.contact_info_phones.create({
     *   data: {
     *     // ... data to create a Contact_info_phones
     *   }
     * })
     * 
    **/
    create<T extends contact_info_phonesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_phonesCreateArgs<ExtArgs>>
    ): Prisma__contact_info_phonesClient<$Result.GetResult<Prisma.$contact_info_phonesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Contact_info_phones.
     *     @param {contact_info_phonesCreateManyArgs} args - Arguments to create many Contact_info_phones.
     *     @example
     *     // Create many Contact_info_phones
     *     const contact_info_phones = await prisma.contact_info_phones.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends contact_info_phonesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_phonesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Contact_info_phones.
     * @param {contact_info_phonesDeleteArgs} args - Arguments to delete one Contact_info_phones.
     * @example
     * // Delete one Contact_info_phones
     * const Contact_info_phones = await prisma.contact_info_phones.delete({
     *   where: {
     *     // ... filter to delete one Contact_info_phones
     *   }
     * })
     * 
    **/
    delete<T extends contact_info_phonesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_phonesDeleteArgs<ExtArgs>>
    ): Prisma__contact_info_phonesClient<$Result.GetResult<Prisma.$contact_info_phonesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Contact_info_phones.
     * @param {contact_info_phonesUpdateArgs} args - Arguments to update one Contact_info_phones.
     * @example
     * // Update one Contact_info_phones
     * const contact_info_phones = await prisma.contact_info_phones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends contact_info_phonesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_phonesUpdateArgs<ExtArgs>>
    ): Prisma__contact_info_phonesClient<$Result.GetResult<Prisma.$contact_info_phonesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Contact_info_phones.
     * @param {contact_info_phonesDeleteManyArgs} args - Arguments to filter Contact_info_phones to delete.
     * @example
     * // Delete a few Contact_info_phones
     * const { count } = await prisma.contact_info_phones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends contact_info_phonesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contact_info_phonesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contact_info_phones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_phonesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contact_info_phones
     * const contact_info_phones = await prisma.contact_info_phones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends contact_info_phonesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_phonesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contact_info_phones.
     * @param {contact_info_phonesUpsertArgs} args - Arguments to update or create a Contact_info_phones.
     * @example
     * // Update or create a Contact_info_phones
     * const contact_info_phones = await prisma.contact_info_phones.upsert({
     *   create: {
     *     // ... data to create a Contact_info_phones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact_info_phones we want to update
     *   }
     * })
    **/
    upsert<T extends contact_info_phonesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, contact_info_phonesUpsertArgs<ExtArgs>>
    ): Prisma__contact_info_phonesClient<$Result.GetResult<Prisma.$contact_info_phonesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Contact_info_phones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_phonesCountArgs} args - Arguments to filter Contact_info_phones to count.
     * @example
     * // Count the number of Contact_info_phones
     * const count = await prisma.contact_info_phones.count({
     *   where: {
     *     // ... the filter for the Contact_info_phones we want to count
     *   }
     * })
    **/
    count<T extends contact_info_phonesCountArgs>(
      args?: Subset<T, contact_info_phonesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Contact_info_phonesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact_info_phones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Contact_info_phonesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Contact_info_phonesAggregateArgs>(args: Subset<T, Contact_info_phonesAggregateArgs>): Prisma.PrismaPromise<GetContact_info_phonesAggregateType<T>>

    /**
     * Group by Contact_info_phones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contact_info_phonesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends contact_info_phonesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: contact_info_phonesGroupByArgs['orderBy'] }
        : { orderBy?: contact_info_phonesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, contact_info_phonesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContact_info_phonesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the contact_info_phones model
   */
  readonly fields: contact_info_phonesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for contact_info_phones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__contact_info_phonesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    contacts<T extends contactsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, contactsDefaultArgs<ExtArgs>>): Prisma__contactsClient<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the contact_info_phones model
   */ 
  interface contact_info_phonesFieldRefs {
    readonly id: FieldRef<"contact_info_phones", 'String'>
    readonly contact_id: FieldRef<"contact_info_phones", 'String'>
    readonly type: FieldRef<"contact_info_phones", 'String'>
    readonly value: FieldRef<"contact_info_phones", 'String'>
    readonly priority: FieldRef<"contact_info_phones", 'Int'>
    readonly created_at: FieldRef<"contact_info_phones", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * contact_info_phones findUnique
   */
  export type contact_info_phonesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
    /**
     * Filter, which contact_info_phones to fetch.
     */
    where: contact_info_phonesWhereUniqueInput
  }


  /**
   * contact_info_phones findUniqueOrThrow
   */
  export type contact_info_phonesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
    /**
     * Filter, which contact_info_phones to fetch.
     */
    where: contact_info_phonesWhereUniqueInput
  }


  /**
   * contact_info_phones findFirst
   */
  export type contact_info_phonesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
    /**
     * Filter, which contact_info_phones to fetch.
     */
    where?: contact_info_phonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_info_phones to fetch.
     */
    orderBy?: contact_info_phonesOrderByWithRelationInput | contact_info_phonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contact_info_phones.
     */
    cursor?: contact_info_phonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_info_phones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_info_phones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contact_info_phones.
     */
    distinct?: Contact_info_phonesScalarFieldEnum | Contact_info_phonesScalarFieldEnum[]
  }


  /**
   * contact_info_phones findFirstOrThrow
   */
  export type contact_info_phonesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
    /**
     * Filter, which contact_info_phones to fetch.
     */
    where?: contact_info_phonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_info_phones to fetch.
     */
    orderBy?: contact_info_phonesOrderByWithRelationInput | contact_info_phonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contact_info_phones.
     */
    cursor?: contact_info_phonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_info_phones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_info_phones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contact_info_phones.
     */
    distinct?: Contact_info_phonesScalarFieldEnum | Contact_info_phonesScalarFieldEnum[]
  }


  /**
   * contact_info_phones findMany
   */
  export type contact_info_phonesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
    /**
     * Filter, which contact_info_phones to fetch.
     */
    where?: contact_info_phonesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contact_info_phones to fetch.
     */
    orderBy?: contact_info_phonesOrderByWithRelationInput | contact_info_phonesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing contact_info_phones.
     */
    cursor?: contact_info_phonesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contact_info_phones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contact_info_phones.
     */
    skip?: number
    distinct?: Contact_info_phonesScalarFieldEnum | Contact_info_phonesScalarFieldEnum[]
  }


  /**
   * contact_info_phones create
   */
  export type contact_info_phonesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
    /**
     * The data needed to create a contact_info_phones.
     */
    data: XOR<contact_info_phonesCreateInput, contact_info_phonesUncheckedCreateInput>
  }


  /**
   * contact_info_phones createMany
   */
  export type contact_info_phonesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many contact_info_phones.
     */
    data: contact_info_phonesCreateManyInput | contact_info_phonesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * contact_info_phones update
   */
  export type contact_info_phonesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
    /**
     * The data needed to update a contact_info_phones.
     */
    data: XOR<contact_info_phonesUpdateInput, contact_info_phonesUncheckedUpdateInput>
    /**
     * Choose, which contact_info_phones to update.
     */
    where: contact_info_phonesWhereUniqueInput
  }


  /**
   * contact_info_phones updateMany
   */
  export type contact_info_phonesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update contact_info_phones.
     */
    data: XOR<contact_info_phonesUpdateManyMutationInput, contact_info_phonesUncheckedUpdateManyInput>
    /**
     * Filter which contact_info_phones to update
     */
    where?: contact_info_phonesWhereInput
  }


  /**
   * contact_info_phones upsert
   */
  export type contact_info_phonesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
    /**
     * The filter to search for the contact_info_phones to update in case it exists.
     */
    where: contact_info_phonesWhereUniqueInput
    /**
     * In case the contact_info_phones found by the `where` argument doesn't exist, create a new contact_info_phones with this data.
     */
    create: XOR<contact_info_phonesCreateInput, contact_info_phonesUncheckedCreateInput>
    /**
     * In case the contact_info_phones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<contact_info_phonesUpdateInput, contact_info_phonesUncheckedUpdateInput>
  }


  /**
   * contact_info_phones delete
   */
  export type contact_info_phonesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
    /**
     * Filter which contact_info_phones to delete.
     */
    where: contact_info_phonesWhereUniqueInput
  }


  /**
   * contact_info_phones deleteMany
   */
  export type contact_info_phonesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contact_info_phones to delete
     */
    where?: contact_info_phonesWhereInput
  }


  /**
   * contact_info_phones without action
   */
  export type contact_info_phonesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
  }



  /**
   * Model contacts
   */

  export type AggregateContacts = {
    _count: ContactsCountAggregateOutputType | null
    _avg: ContactsAvgAggregateOutputType | null
    _sum: ContactsSumAggregateOutputType | null
    _min: ContactsMinAggregateOutputType | null
    _max: ContactsMaxAggregateOutputType | null
  }

  export type ContactsAvgAggregateOutputType = {
    priority: number | null
  }

  export type ContactsSumAggregateOutputType = {
    priority: number | null
  }

  export type ContactsMinAggregateOutputType = {
    id: string | null
    name: string | null
    position: string | null
    priority: number | null
    created_at: Date | null
    customer_record_id: string | null
  }

  export type ContactsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    position: string | null
    priority: number | null
    created_at: Date | null
    customer_record_id: string | null
  }

  export type ContactsCountAggregateOutputType = {
    id: number
    name: number
    position: number
    priority: number
    created_at: number
    customer_record_id: number
    _all: number
  }


  export type ContactsAvgAggregateInputType = {
    priority?: true
  }

  export type ContactsSumAggregateInputType = {
    priority?: true
  }

  export type ContactsMinAggregateInputType = {
    id?: true
    name?: true
    position?: true
    priority?: true
    created_at?: true
    customer_record_id?: true
  }

  export type ContactsMaxAggregateInputType = {
    id?: true
    name?: true
    position?: true
    priority?: true
    created_at?: true
    customer_record_id?: true
  }

  export type ContactsCountAggregateInputType = {
    id?: true
    name?: true
    position?: true
    priority?: true
    created_at?: true
    customer_record_id?: true
    _all?: true
  }

  export type ContactsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contacts to aggregate.
     */
    where?: contactsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contacts to fetch.
     */
    orderBy?: contactsOrderByWithRelationInput | contactsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: contactsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned contacts
    **/
    _count?: true | ContactsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ContactsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ContactsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContactsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContactsMaxAggregateInputType
  }

  export type GetContactsAggregateType<T extends ContactsAggregateArgs> = {
        [P in keyof T & keyof AggregateContacts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContacts[P]>
      : GetScalarType<T[P], AggregateContacts[P]>
  }




  export type contactsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contactsWhereInput
    orderBy?: contactsOrderByWithAggregationInput | contactsOrderByWithAggregationInput[]
    by: ContactsScalarFieldEnum[] | ContactsScalarFieldEnum
    having?: contactsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContactsCountAggregateInputType | true
    _avg?: ContactsAvgAggregateInputType
    _sum?: ContactsSumAggregateInputType
    _min?: ContactsMinAggregateInputType
    _max?: ContactsMaxAggregateInputType
  }

  export type ContactsGroupByOutputType = {
    id: string
    name: string
    position: string
    priority: number
    created_at: Date
    customer_record_id: string
    _count: ContactsCountAggregateOutputType | null
    _avg: ContactsAvgAggregateOutputType | null
    _sum: ContactsSumAggregateOutputType | null
    _min: ContactsMinAggregateOutputType | null
    _max: ContactsMaxAggregateOutputType | null
  }

  type GetContactsGroupByPayload<T extends contactsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContactsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContactsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContactsGroupByOutputType[P]>
            : GetScalarType<T[P], ContactsGroupByOutputType[P]>
        }
      >
    >


  export type contactsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    position?: boolean
    priority?: boolean
    created_at?: boolean
    customer_record_id?: boolean
    contact_info_emails?: boolean | contacts$contact_info_emailsArgs<ExtArgs>
    contact_info_phones?: boolean | contacts$contact_info_phonesArgs<ExtArgs>
    customer_records?: boolean | customer_recordsDefaultArgs<ExtArgs>
    _count?: boolean | ContactsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contacts"]>

  export type contactsSelectScalar = {
    id?: boolean
    name?: boolean
    position?: boolean
    priority?: boolean
    created_at?: boolean
    customer_record_id?: boolean
  }

  export type contactsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact_info_emails?: boolean | contacts$contact_info_emailsArgs<ExtArgs>
    contact_info_phones?: boolean | contacts$contact_info_phonesArgs<ExtArgs>
    customer_records?: boolean | customer_recordsDefaultArgs<ExtArgs>
    _count?: boolean | ContactsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $contactsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "contacts"
    objects: {
      contact_info_emails: Prisma.$contact_info_emailsPayload<ExtArgs>[]
      contact_info_phones: Prisma.$contact_info_phonesPayload<ExtArgs>[]
      customer_records: Prisma.$customer_recordsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      position: string
      priority: number
      created_at: Date
      customer_record_id: string
    }, ExtArgs["result"]["contacts"]>
    composites: {}
  }


  type contactsGetPayload<S extends boolean | null | undefined | contactsDefaultArgs> = $Result.GetResult<Prisma.$contactsPayload, S>

  type contactsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<contactsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: ContactsCountAggregateInputType | true
    }

  export interface contactsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['contacts'], meta: { name: 'contacts' } }
    /**
     * Find zero or one Contacts that matches the filter.
     * @param {contactsFindUniqueArgs} args - Arguments to find a Contacts
     * @example
     * // Get one Contacts
     * const contacts = await prisma.contacts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends contactsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, contactsFindUniqueArgs<ExtArgs>>
    ): Prisma__contactsClient<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Contacts that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {contactsFindUniqueOrThrowArgs} args - Arguments to find a Contacts
     * @example
     * // Get one Contacts
     * const contacts = await prisma.contacts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends contactsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, contactsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__contactsClient<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Contacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactsFindFirstArgs} args - Arguments to find a Contacts
     * @example
     * // Get one Contacts
     * const contacts = await prisma.contacts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends contactsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, contactsFindFirstArgs<ExtArgs>>
    ): Prisma__contactsClient<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Contacts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactsFindFirstOrThrowArgs} args - Arguments to find a Contacts
     * @example
     * // Get one Contacts
     * const contacts = await prisma.contacts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends contactsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, contactsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__contactsClient<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Contacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contacts
     * const contacts = await prisma.contacts.findMany()
     * 
     * // Get first 10 Contacts
     * const contacts = await prisma.contacts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contactsWithIdOnly = await prisma.contacts.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends contactsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contactsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Contacts.
     * @param {contactsCreateArgs} args - Arguments to create a Contacts.
     * @example
     * // Create one Contacts
     * const Contacts = await prisma.contacts.create({
     *   data: {
     *     // ... data to create a Contacts
     *   }
     * })
     * 
    **/
    create<T extends contactsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, contactsCreateArgs<ExtArgs>>
    ): Prisma__contactsClient<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Contacts.
     *     @param {contactsCreateManyArgs} args - Arguments to create many Contacts.
     *     @example
     *     // Create many Contacts
     *     const contacts = await prisma.contacts.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends contactsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contactsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Contacts.
     * @param {contactsDeleteArgs} args - Arguments to delete one Contacts.
     * @example
     * // Delete one Contacts
     * const Contacts = await prisma.contacts.delete({
     *   where: {
     *     // ... filter to delete one Contacts
     *   }
     * })
     * 
    **/
    delete<T extends contactsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, contactsDeleteArgs<ExtArgs>>
    ): Prisma__contactsClient<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Contacts.
     * @param {contactsUpdateArgs} args - Arguments to update one Contacts.
     * @example
     * // Update one Contacts
     * const contacts = await prisma.contacts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends contactsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, contactsUpdateArgs<ExtArgs>>
    ): Prisma__contactsClient<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Contacts.
     * @param {contactsDeleteManyArgs} args - Arguments to filter Contacts to delete.
     * @example
     * // Delete a few Contacts
     * const { count } = await prisma.contacts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends contactsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, contactsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contacts
     * const contacts = await prisma.contacts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends contactsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, contactsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contacts.
     * @param {contactsUpsertArgs} args - Arguments to update or create a Contacts.
     * @example
     * // Update or create a Contacts
     * const contacts = await prisma.contacts.upsert({
     *   create: {
     *     // ... data to create a Contacts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contacts we want to update
     *   }
     * })
    **/
    upsert<T extends contactsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, contactsUpsertArgs<ExtArgs>>
    ): Prisma__contactsClient<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactsCountArgs} args - Arguments to filter Contacts to count.
     * @example
     * // Count the number of Contacts
     * const count = await prisma.contacts.count({
     *   where: {
     *     // ... the filter for the Contacts we want to count
     *   }
     * })
    **/
    count<T extends contactsCountArgs>(
      args?: Subset<T, contactsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContactsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContactsAggregateArgs>(args: Subset<T, ContactsAggregateArgs>): Prisma.PrismaPromise<GetContactsAggregateType<T>>

    /**
     * Group by Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contactsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends contactsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: contactsGroupByArgs['orderBy'] }
        : { orderBy?: contactsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, contactsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContactsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the contacts model
   */
  readonly fields: contactsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for contacts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__contactsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    contact_info_emails<T extends contacts$contact_info_emailsArgs<ExtArgs> = {}>(args?: Subset<T, contacts$contact_info_emailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contact_info_emailsPayload<ExtArgs>, T, 'findMany'> | Null>;

    contact_info_phones<T extends contacts$contact_info_phonesArgs<ExtArgs> = {}>(args?: Subset<T, contacts$contact_info_phonesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contact_info_phonesPayload<ExtArgs>, T, 'findMany'> | Null>;

    customer_records<T extends customer_recordsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, customer_recordsDefaultArgs<ExtArgs>>): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the contacts model
   */ 
  interface contactsFieldRefs {
    readonly id: FieldRef<"contacts", 'String'>
    readonly name: FieldRef<"contacts", 'String'>
    readonly position: FieldRef<"contacts", 'String'>
    readonly priority: FieldRef<"contacts", 'Int'>
    readonly created_at: FieldRef<"contacts", 'DateTime'>
    readonly customer_record_id: FieldRef<"contacts", 'String'>
  }
    

  // Custom InputTypes

  /**
   * contacts findUnique
   */
  export type contactsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
    /**
     * Filter, which contacts to fetch.
     */
    where: contactsWhereUniqueInput
  }


  /**
   * contacts findUniqueOrThrow
   */
  export type contactsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
    /**
     * Filter, which contacts to fetch.
     */
    where: contactsWhereUniqueInput
  }


  /**
   * contacts findFirst
   */
  export type contactsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
    /**
     * Filter, which contacts to fetch.
     */
    where?: contactsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contacts to fetch.
     */
    orderBy?: contactsOrderByWithRelationInput | contactsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contacts.
     */
    cursor?: contactsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contacts.
     */
    distinct?: ContactsScalarFieldEnum | ContactsScalarFieldEnum[]
  }


  /**
   * contacts findFirstOrThrow
   */
  export type contactsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
    /**
     * Filter, which contacts to fetch.
     */
    where?: contactsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contacts to fetch.
     */
    orderBy?: contactsOrderByWithRelationInput | contactsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contacts.
     */
    cursor?: contactsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contacts.
     */
    distinct?: ContactsScalarFieldEnum | ContactsScalarFieldEnum[]
  }


  /**
   * contacts findMany
   */
  export type contactsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
    /**
     * Filter, which contacts to fetch.
     */
    where?: contactsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contacts to fetch.
     */
    orderBy?: contactsOrderByWithRelationInput | contactsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing contacts.
     */
    cursor?: contactsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contacts.
     */
    skip?: number
    distinct?: ContactsScalarFieldEnum | ContactsScalarFieldEnum[]
  }


  /**
   * contacts create
   */
  export type contactsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
    /**
     * The data needed to create a contacts.
     */
    data: XOR<contactsCreateInput, contactsUncheckedCreateInput>
  }


  /**
   * contacts createMany
   */
  export type contactsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many contacts.
     */
    data: contactsCreateManyInput | contactsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * contacts update
   */
  export type contactsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
    /**
     * The data needed to update a contacts.
     */
    data: XOR<contactsUpdateInput, contactsUncheckedUpdateInput>
    /**
     * Choose, which contacts to update.
     */
    where: contactsWhereUniqueInput
  }


  /**
   * contacts updateMany
   */
  export type contactsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update contacts.
     */
    data: XOR<contactsUpdateManyMutationInput, contactsUncheckedUpdateManyInput>
    /**
     * Filter which contacts to update
     */
    where?: contactsWhereInput
  }


  /**
   * contacts upsert
   */
  export type contactsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
    /**
     * The filter to search for the contacts to update in case it exists.
     */
    where: contactsWhereUniqueInput
    /**
     * In case the contacts found by the `where` argument doesn't exist, create a new contacts with this data.
     */
    create: XOR<contactsCreateInput, contactsUncheckedCreateInput>
    /**
     * In case the contacts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<contactsUpdateInput, contactsUncheckedUpdateInput>
  }


  /**
   * contacts delete
   */
  export type contactsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
    /**
     * Filter which contacts to delete.
     */
    where: contactsWhereUniqueInput
  }


  /**
   * contacts deleteMany
   */
  export type contactsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contacts to delete
     */
    where?: contactsWhereInput
  }


  /**
   * contacts.contact_info_emails
   */
  export type contacts$contact_info_emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_emails
     */
    select?: contact_info_emailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_emailsInclude<ExtArgs> | null
    where?: contact_info_emailsWhereInput
    orderBy?: contact_info_emailsOrderByWithRelationInput | contact_info_emailsOrderByWithRelationInput[]
    cursor?: contact_info_emailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Contact_info_emailsScalarFieldEnum | Contact_info_emailsScalarFieldEnum[]
  }


  /**
   * contacts.contact_info_phones
   */
  export type contacts$contact_info_phonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contact_info_phones
     */
    select?: contact_info_phonesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contact_info_phonesInclude<ExtArgs> | null
    where?: contact_info_phonesWhereInput
    orderBy?: contact_info_phonesOrderByWithRelationInput | contact_info_phonesOrderByWithRelationInput[]
    cursor?: contact_info_phonesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Contact_info_phonesScalarFieldEnum | Contact_info_phonesScalarFieldEnum[]
  }


  /**
   * contacts without action
   */
  export type contactsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
  }



  /**
   * Model customer_records
   */

  export type AggregateCustomer_records = {
    _count: Customer_recordsCountAggregateOutputType | null
    _min: Customer_recordsMinAggregateOutputType | null
    _max: Customer_recordsMaxAggregateOutputType | null
  }

  export type Customer_recordsMinAggregateOutputType = {
    id: string | null
    business_name: string | null
    active: boolean | null
    stage: string | null
    created_at: Date | null
    business_owner_name: string | null
  }

  export type Customer_recordsMaxAggregateOutputType = {
    id: string | null
    business_name: string | null
    active: boolean | null
    stage: string | null
    created_at: Date | null
    business_owner_name: string | null
  }

  export type Customer_recordsCountAggregateOutputType = {
    id: number
    business_name: number
    active: number
    stage: number
    created_at: number
    business_owner_name: number
    _all: number
  }


  export type Customer_recordsMinAggregateInputType = {
    id?: true
    business_name?: true
    active?: true
    stage?: true
    created_at?: true
    business_owner_name?: true
  }

  export type Customer_recordsMaxAggregateInputType = {
    id?: true
    business_name?: true
    active?: true
    stage?: true
    created_at?: true
    business_owner_name?: true
  }

  export type Customer_recordsCountAggregateInputType = {
    id?: true
    business_name?: true
    active?: true
    stage?: true
    created_at?: true
    business_owner_name?: true
    _all?: true
  }

  export type Customer_recordsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which customer_records to aggregate.
     */
    where?: customer_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customer_records to fetch.
     */
    orderBy?: customer_recordsOrderByWithRelationInput | customer_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: customer_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customer_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customer_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned customer_records
    **/
    _count?: true | Customer_recordsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Customer_recordsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Customer_recordsMaxAggregateInputType
  }

  export type GetCustomer_recordsAggregateType<T extends Customer_recordsAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomer_records]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomer_records[P]>
      : GetScalarType<T[P], AggregateCustomer_records[P]>
  }




  export type customer_recordsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: customer_recordsWhereInput
    orderBy?: customer_recordsOrderByWithAggregationInput | customer_recordsOrderByWithAggregationInput[]
    by: Customer_recordsScalarFieldEnum[] | Customer_recordsScalarFieldEnum
    having?: customer_recordsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Customer_recordsCountAggregateInputType | true
    _min?: Customer_recordsMinAggregateInputType
    _max?: Customer_recordsMaxAggregateInputType
  }

  export type Customer_recordsGroupByOutputType = {
    id: string
    business_name: string
    active: boolean
    stage: string
    created_at: Date
    business_owner_name: string
    _count: Customer_recordsCountAggregateOutputType | null
    _min: Customer_recordsMinAggregateOutputType | null
    _max: Customer_recordsMaxAggregateOutputType | null
  }

  type GetCustomer_recordsGroupByPayload<T extends customer_recordsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Customer_recordsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Customer_recordsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Customer_recordsGroupByOutputType[P]>
            : GetScalarType<T[P], Customer_recordsGroupByOutputType[P]>
        }
      >
    >


  export type customer_recordsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    business_name?: boolean
    active?: boolean
    stage?: boolean
    created_at?: boolean
    business_owner_name?: boolean
    accounts?: boolean | customer_records$accountsArgs<ExtArgs>
    communications?: boolean | customer_records$communicationsArgs<ExtArgs>
    contacts?: boolean | customer_records$contactsArgs<ExtArgs>
    leads?: boolean | customer_records$leadsArgs<ExtArgs>
    notes?: boolean | customer_records$notesArgs<ExtArgs>
    opportunities?: boolean | customer_records$opportunitiesArgs<ExtArgs>
    _count?: boolean | Customer_recordsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer_records"]>

  export type customer_recordsSelectScalar = {
    id?: boolean
    business_name?: boolean
    active?: boolean
    stage?: boolean
    created_at?: boolean
    business_owner_name?: boolean
  }

  export type customer_recordsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | customer_records$accountsArgs<ExtArgs>
    communications?: boolean | customer_records$communicationsArgs<ExtArgs>
    contacts?: boolean | customer_records$contactsArgs<ExtArgs>
    leads?: boolean | customer_records$leadsArgs<ExtArgs>
    notes?: boolean | customer_records$notesArgs<ExtArgs>
    opportunities?: boolean | customer_records$opportunitiesArgs<ExtArgs>
    _count?: boolean | Customer_recordsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $customer_recordsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "customer_records"
    objects: {
      accounts: Prisma.$accountsPayload<ExtArgs> | null
      communications: Prisma.$communicationsPayload<ExtArgs>[]
      contacts: Prisma.$contactsPayload<ExtArgs>[]
      leads: Prisma.$leadsPayload<ExtArgs> | null
      notes: Prisma.$notesPayload<ExtArgs>[]
      opportunities: Prisma.$opportunitiesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      business_name: string
      active: boolean
      stage: string
      created_at: Date
      business_owner_name: string
    }, ExtArgs["result"]["customer_records"]>
    composites: {}
  }


  type customer_recordsGetPayload<S extends boolean | null | undefined | customer_recordsDefaultArgs> = $Result.GetResult<Prisma.$customer_recordsPayload, S>

  type customer_recordsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<customer_recordsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Customer_recordsCountAggregateInputType | true
    }

  export interface customer_recordsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['customer_records'], meta: { name: 'customer_records' } }
    /**
     * Find zero or one Customer_records that matches the filter.
     * @param {customer_recordsFindUniqueArgs} args - Arguments to find a Customer_records
     * @example
     * // Get one Customer_records
     * const customer_records = await prisma.customer_records.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends customer_recordsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, customer_recordsFindUniqueArgs<ExtArgs>>
    ): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Customer_records that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {customer_recordsFindUniqueOrThrowArgs} args - Arguments to find a Customer_records
     * @example
     * // Get one Customer_records
     * const customer_records = await prisma.customer_records.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends customer_recordsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, customer_recordsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Customer_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_recordsFindFirstArgs} args - Arguments to find a Customer_records
     * @example
     * // Get one Customer_records
     * const customer_records = await prisma.customer_records.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends customer_recordsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, customer_recordsFindFirstArgs<ExtArgs>>
    ): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Customer_records that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_recordsFindFirstOrThrowArgs} args - Arguments to find a Customer_records
     * @example
     * // Get one Customer_records
     * const customer_records = await prisma.customer_records.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends customer_recordsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, customer_recordsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Customer_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_recordsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customer_records
     * const customer_records = await prisma.customer_records.findMany()
     * 
     * // Get first 10 Customer_records
     * const customer_records = await prisma.customer_records.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customer_recordsWithIdOnly = await prisma.customer_records.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends customer_recordsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, customer_recordsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Customer_records.
     * @param {customer_recordsCreateArgs} args - Arguments to create a Customer_records.
     * @example
     * // Create one Customer_records
     * const Customer_records = await prisma.customer_records.create({
     *   data: {
     *     // ... data to create a Customer_records
     *   }
     * })
     * 
    **/
    create<T extends customer_recordsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, customer_recordsCreateArgs<ExtArgs>>
    ): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Customer_records.
     *     @param {customer_recordsCreateManyArgs} args - Arguments to create many Customer_records.
     *     @example
     *     // Create many Customer_records
     *     const customer_records = await prisma.customer_records.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends customer_recordsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, customer_recordsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Customer_records.
     * @param {customer_recordsDeleteArgs} args - Arguments to delete one Customer_records.
     * @example
     * // Delete one Customer_records
     * const Customer_records = await prisma.customer_records.delete({
     *   where: {
     *     // ... filter to delete one Customer_records
     *   }
     * })
     * 
    **/
    delete<T extends customer_recordsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, customer_recordsDeleteArgs<ExtArgs>>
    ): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Customer_records.
     * @param {customer_recordsUpdateArgs} args - Arguments to update one Customer_records.
     * @example
     * // Update one Customer_records
     * const customer_records = await prisma.customer_records.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends customer_recordsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, customer_recordsUpdateArgs<ExtArgs>>
    ): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Customer_records.
     * @param {customer_recordsDeleteManyArgs} args - Arguments to filter Customer_records to delete.
     * @example
     * // Delete a few Customer_records
     * const { count } = await prisma.customer_records.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends customer_recordsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, customer_recordsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customer_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_recordsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customer_records
     * const customer_records = await prisma.customer_records.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends customer_recordsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, customer_recordsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Customer_records.
     * @param {customer_recordsUpsertArgs} args - Arguments to update or create a Customer_records.
     * @example
     * // Update or create a Customer_records
     * const customer_records = await prisma.customer_records.upsert({
     *   create: {
     *     // ... data to create a Customer_records
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customer_records we want to update
     *   }
     * })
    **/
    upsert<T extends customer_recordsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, customer_recordsUpsertArgs<ExtArgs>>
    ): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Customer_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_recordsCountArgs} args - Arguments to filter Customer_records to count.
     * @example
     * // Count the number of Customer_records
     * const count = await prisma.customer_records.count({
     *   where: {
     *     // ... the filter for the Customer_records we want to count
     *   }
     * })
    **/
    count<T extends customer_recordsCountArgs>(
      args?: Subset<T, customer_recordsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Customer_recordsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customer_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Customer_recordsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Customer_recordsAggregateArgs>(args: Subset<T, Customer_recordsAggregateArgs>): Prisma.PrismaPromise<GetCustomer_recordsAggregateType<T>>

    /**
     * Group by Customer_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_recordsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends customer_recordsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: customer_recordsGroupByArgs['orderBy'] }
        : { orderBy?: customer_recordsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, customer_recordsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomer_recordsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the customer_records model
   */
  readonly fields: customer_recordsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for customer_records.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__customer_recordsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    accounts<T extends customer_records$accountsArgs<ExtArgs> = {}>(args?: Subset<T, customer_records$accountsArgs<ExtArgs>>): Prisma__accountsClient<$Result.GetResult<Prisma.$accountsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    communications<T extends customer_records$communicationsArgs<ExtArgs> = {}>(args?: Subset<T, customer_records$communicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'findMany'> | Null>;

    contacts<T extends customer_records$contactsArgs<ExtArgs> = {}>(args?: Subset<T, customer_records$contactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contactsPayload<ExtArgs>, T, 'findMany'> | Null>;

    leads<T extends customer_records$leadsArgs<ExtArgs> = {}>(args?: Subset<T, customer_records$leadsArgs<ExtArgs>>): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    notes<T extends customer_records$notesArgs<ExtArgs> = {}>(args?: Subset<T, customer_records$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'findMany'> | Null>;

    opportunities<T extends customer_records$opportunitiesArgs<ExtArgs> = {}>(args?: Subset<T, customer_records$opportunitiesArgs<ExtArgs>>): Prisma__opportunitiesClient<$Result.GetResult<Prisma.$opportunitiesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the customer_records model
   */ 
  interface customer_recordsFieldRefs {
    readonly id: FieldRef<"customer_records", 'String'>
    readonly business_name: FieldRef<"customer_records", 'String'>
    readonly active: FieldRef<"customer_records", 'Boolean'>
    readonly stage: FieldRef<"customer_records", 'String'>
    readonly created_at: FieldRef<"customer_records", 'DateTime'>
    readonly business_owner_name: FieldRef<"customer_records", 'String'>
  }
    

  // Custom InputTypes

  /**
   * customer_records findUnique
   */
  export type customer_recordsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
    /**
     * Filter, which customer_records to fetch.
     */
    where: customer_recordsWhereUniqueInput
  }


  /**
   * customer_records findUniqueOrThrow
   */
  export type customer_recordsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
    /**
     * Filter, which customer_records to fetch.
     */
    where: customer_recordsWhereUniqueInput
  }


  /**
   * customer_records findFirst
   */
  export type customer_recordsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
    /**
     * Filter, which customer_records to fetch.
     */
    where?: customer_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customer_records to fetch.
     */
    orderBy?: customer_recordsOrderByWithRelationInput | customer_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for customer_records.
     */
    cursor?: customer_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customer_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customer_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of customer_records.
     */
    distinct?: Customer_recordsScalarFieldEnum | Customer_recordsScalarFieldEnum[]
  }


  /**
   * customer_records findFirstOrThrow
   */
  export type customer_recordsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
    /**
     * Filter, which customer_records to fetch.
     */
    where?: customer_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customer_records to fetch.
     */
    orderBy?: customer_recordsOrderByWithRelationInput | customer_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for customer_records.
     */
    cursor?: customer_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customer_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customer_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of customer_records.
     */
    distinct?: Customer_recordsScalarFieldEnum | Customer_recordsScalarFieldEnum[]
  }


  /**
   * customer_records findMany
   */
  export type customer_recordsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
    /**
     * Filter, which customer_records to fetch.
     */
    where?: customer_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customer_records to fetch.
     */
    orderBy?: customer_recordsOrderByWithRelationInput | customer_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing customer_records.
     */
    cursor?: customer_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customer_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customer_records.
     */
    skip?: number
    distinct?: Customer_recordsScalarFieldEnum | Customer_recordsScalarFieldEnum[]
  }


  /**
   * customer_records create
   */
  export type customer_recordsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
    /**
     * The data needed to create a customer_records.
     */
    data: XOR<customer_recordsCreateInput, customer_recordsUncheckedCreateInput>
  }


  /**
   * customer_records createMany
   */
  export type customer_recordsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many customer_records.
     */
    data: customer_recordsCreateManyInput | customer_recordsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * customer_records update
   */
  export type customer_recordsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
    /**
     * The data needed to update a customer_records.
     */
    data: XOR<customer_recordsUpdateInput, customer_recordsUncheckedUpdateInput>
    /**
     * Choose, which customer_records to update.
     */
    where: customer_recordsWhereUniqueInput
  }


  /**
   * customer_records updateMany
   */
  export type customer_recordsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update customer_records.
     */
    data: XOR<customer_recordsUpdateManyMutationInput, customer_recordsUncheckedUpdateManyInput>
    /**
     * Filter which customer_records to update
     */
    where?: customer_recordsWhereInput
  }


  /**
   * customer_records upsert
   */
  export type customer_recordsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
    /**
     * The filter to search for the customer_records to update in case it exists.
     */
    where: customer_recordsWhereUniqueInput
    /**
     * In case the customer_records found by the `where` argument doesn't exist, create a new customer_records with this data.
     */
    create: XOR<customer_recordsCreateInput, customer_recordsUncheckedCreateInput>
    /**
     * In case the customer_records was found with the provided `where` argument, update it with this data.
     */
    update: XOR<customer_recordsUpdateInput, customer_recordsUncheckedUpdateInput>
  }


  /**
   * customer_records delete
   */
  export type customer_recordsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
    /**
     * Filter which customer_records to delete.
     */
    where: customer_recordsWhereUniqueInput
  }


  /**
   * customer_records deleteMany
   */
  export type customer_recordsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which customer_records to delete
     */
    where?: customer_recordsWhereInput
  }


  /**
   * customer_records.accounts
   */
  export type customer_records$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the accounts
     */
    select?: accountsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: accountsInclude<ExtArgs> | null
    where?: accountsWhereInput
  }


  /**
   * customer_records.communications
   */
  export type customer_records$communicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    where?: communicationsWhereInput
    orderBy?: communicationsOrderByWithRelationInput | communicationsOrderByWithRelationInput[]
    cursor?: communicationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunicationsScalarFieldEnum | CommunicationsScalarFieldEnum[]
  }


  /**
   * customer_records.contacts
   */
  export type customer_records$contactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contacts
     */
    select?: contactsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: contactsInclude<ExtArgs> | null
    where?: contactsWhereInput
    orderBy?: contactsOrderByWithRelationInput | contactsOrderByWithRelationInput[]
    cursor?: contactsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactsScalarFieldEnum | ContactsScalarFieldEnum[]
  }


  /**
   * customer_records.leads
   */
  export type customer_records$leadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
    where?: leadsWhereInput
  }


  /**
   * customer_records.notes
   */
  export type customer_records$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    where?: notesWhereInput
    orderBy?: notesOrderByWithRelationInput | notesOrderByWithRelationInput[]
    cursor?: notesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotesScalarFieldEnum | NotesScalarFieldEnum[]
  }


  /**
   * customer_records.opportunities
   */
  export type customer_records$opportunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
    where?: opportunitiesWhereInput
  }


  /**
   * customer_records without action
   */
  export type customer_recordsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_records
     */
    select?: customer_recordsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: customer_recordsInclude<ExtArgs> | null
  }



  /**
   * Model email_templates
   */

  export type AggregateEmail_templates = {
    _count: Email_templatesCountAggregateOutputType | null
    _min: Email_templatesMinAggregateOutputType | null
    _max: Email_templatesMaxAggregateOutputType | null
  }

  export type Email_templatesMinAggregateOutputType = {
    id: string | null
    name: string | null
    category: string | null
    created_at: Date | null
  }

  export type Email_templatesMaxAggregateOutputType = {
    id: string | null
    name: string | null
    category: string | null
    created_at: Date | null
  }

  export type Email_templatesCountAggregateOutputType = {
    id: number
    name: number
    category: number
    created_at: number
    _all: number
  }


  export type Email_templatesMinAggregateInputType = {
    id?: true
    name?: true
    category?: true
    created_at?: true
  }

  export type Email_templatesMaxAggregateInputType = {
    id?: true
    name?: true
    category?: true
    created_at?: true
  }

  export type Email_templatesCountAggregateInputType = {
    id?: true
    name?: true
    category?: true
    created_at?: true
    _all?: true
  }

  export type Email_templatesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email_templates to aggregate.
     */
    where?: email_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_templates to fetch.
     */
    orderBy?: email_templatesOrderByWithRelationInput | email_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: email_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned email_templates
    **/
    _count?: true | Email_templatesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Email_templatesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Email_templatesMaxAggregateInputType
  }

  export type GetEmail_templatesAggregateType<T extends Email_templatesAggregateArgs> = {
        [P in keyof T & keyof AggregateEmail_templates]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmail_templates[P]>
      : GetScalarType<T[P], AggregateEmail_templates[P]>
  }




  export type email_templatesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: email_templatesWhereInput
    orderBy?: email_templatesOrderByWithAggregationInput | email_templatesOrderByWithAggregationInput[]
    by: Email_templatesScalarFieldEnum[] | Email_templatesScalarFieldEnum
    having?: email_templatesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Email_templatesCountAggregateInputType | true
    _min?: Email_templatesMinAggregateInputType
    _max?: Email_templatesMaxAggregateInputType
  }

  export type Email_templatesGroupByOutputType = {
    id: string
    name: string
    category: string
    created_at: Date
    _count: Email_templatesCountAggregateOutputType | null
    _min: Email_templatesMinAggregateOutputType | null
    _max: Email_templatesMaxAggregateOutputType | null
  }

  type GetEmail_templatesGroupByPayload<T extends email_templatesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Email_templatesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Email_templatesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Email_templatesGroupByOutputType[P]>
            : GetScalarType<T[P], Email_templatesGroupByOutputType[P]>
        }
      >
    >


  export type email_templatesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    category?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["email_templates"]>

  export type email_templatesSelectScalar = {
    id?: boolean
    name?: boolean
    category?: boolean
    created_at?: boolean
  }


  export type $email_templatesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "email_templates"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      category: string
      created_at: Date
    }, ExtArgs["result"]["email_templates"]>
    composites: {}
  }


  type email_templatesGetPayload<S extends boolean | null | undefined | email_templatesDefaultArgs> = $Result.GetResult<Prisma.$email_templatesPayload, S>

  type email_templatesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<email_templatesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Email_templatesCountAggregateInputType | true
    }

  export interface email_templatesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['email_templates'], meta: { name: 'email_templates' } }
    /**
     * Find zero or one Email_templates that matches the filter.
     * @param {email_templatesFindUniqueArgs} args - Arguments to find a Email_templates
     * @example
     * // Get one Email_templates
     * const email_templates = await prisma.email_templates.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends email_templatesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, email_templatesFindUniqueArgs<ExtArgs>>
    ): Prisma__email_templatesClient<$Result.GetResult<Prisma.$email_templatesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Email_templates that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {email_templatesFindUniqueOrThrowArgs} args - Arguments to find a Email_templates
     * @example
     * // Get one Email_templates
     * const email_templates = await prisma.email_templates.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends email_templatesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, email_templatesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__email_templatesClient<$Result.GetResult<Prisma.$email_templatesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Email_templates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_templatesFindFirstArgs} args - Arguments to find a Email_templates
     * @example
     * // Get one Email_templates
     * const email_templates = await prisma.email_templates.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends email_templatesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, email_templatesFindFirstArgs<ExtArgs>>
    ): Prisma__email_templatesClient<$Result.GetResult<Prisma.$email_templatesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Email_templates that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_templatesFindFirstOrThrowArgs} args - Arguments to find a Email_templates
     * @example
     * // Get one Email_templates
     * const email_templates = await prisma.email_templates.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends email_templatesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, email_templatesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__email_templatesClient<$Result.GetResult<Prisma.$email_templatesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Email_templates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_templatesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Email_templates
     * const email_templates = await prisma.email_templates.findMany()
     * 
     * // Get first 10 Email_templates
     * const email_templates = await prisma.email_templates.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const email_templatesWithIdOnly = await prisma.email_templates.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends email_templatesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, email_templatesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$email_templatesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Email_templates.
     * @param {email_templatesCreateArgs} args - Arguments to create a Email_templates.
     * @example
     * // Create one Email_templates
     * const Email_templates = await prisma.email_templates.create({
     *   data: {
     *     // ... data to create a Email_templates
     *   }
     * })
     * 
    **/
    create<T extends email_templatesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, email_templatesCreateArgs<ExtArgs>>
    ): Prisma__email_templatesClient<$Result.GetResult<Prisma.$email_templatesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Email_templates.
     *     @param {email_templatesCreateManyArgs} args - Arguments to create many Email_templates.
     *     @example
     *     // Create many Email_templates
     *     const email_templates = await prisma.email_templates.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends email_templatesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, email_templatesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Email_templates.
     * @param {email_templatesDeleteArgs} args - Arguments to delete one Email_templates.
     * @example
     * // Delete one Email_templates
     * const Email_templates = await prisma.email_templates.delete({
     *   where: {
     *     // ... filter to delete one Email_templates
     *   }
     * })
     * 
    **/
    delete<T extends email_templatesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, email_templatesDeleteArgs<ExtArgs>>
    ): Prisma__email_templatesClient<$Result.GetResult<Prisma.$email_templatesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Email_templates.
     * @param {email_templatesUpdateArgs} args - Arguments to update one Email_templates.
     * @example
     * // Update one Email_templates
     * const email_templates = await prisma.email_templates.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends email_templatesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, email_templatesUpdateArgs<ExtArgs>>
    ): Prisma__email_templatesClient<$Result.GetResult<Prisma.$email_templatesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Email_templates.
     * @param {email_templatesDeleteManyArgs} args - Arguments to filter Email_templates to delete.
     * @example
     * // Delete a few Email_templates
     * const { count } = await prisma.email_templates.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends email_templatesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, email_templatesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Email_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_templatesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Email_templates
     * const email_templates = await prisma.email_templates.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends email_templatesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, email_templatesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Email_templates.
     * @param {email_templatesUpsertArgs} args - Arguments to update or create a Email_templates.
     * @example
     * // Update or create a Email_templates
     * const email_templates = await prisma.email_templates.upsert({
     *   create: {
     *     // ... data to create a Email_templates
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Email_templates we want to update
     *   }
     * })
    **/
    upsert<T extends email_templatesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, email_templatesUpsertArgs<ExtArgs>>
    ): Prisma__email_templatesClient<$Result.GetResult<Prisma.$email_templatesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Email_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_templatesCountArgs} args - Arguments to filter Email_templates to count.
     * @example
     * // Count the number of Email_templates
     * const count = await prisma.email_templates.count({
     *   where: {
     *     // ... the filter for the Email_templates we want to count
     *   }
     * })
    **/
    count<T extends email_templatesCountArgs>(
      args?: Subset<T, email_templatesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Email_templatesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Email_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Email_templatesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Email_templatesAggregateArgs>(args: Subset<T, Email_templatesAggregateArgs>): Prisma.PrismaPromise<GetEmail_templatesAggregateType<T>>

    /**
     * Group by Email_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_templatesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends email_templatesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: email_templatesGroupByArgs['orderBy'] }
        : { orderBy?: email_templatesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, email_templatesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmail_templatesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the email_templates model
   */
  readonly fields: email_templatesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for email_templates.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__email_templatesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the email_templates model
   */ 
  interface email_templatesFieldRefs {
    readonly id: FieldRef<"email_templates", 'String'>
    readonly name: FieldRef<"email_templates", 'String'>
    readonly category: FieldRef<"email_templates", 'String'>
    readonly created_at: FieldRef<"email_templates", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * email_templates findUnique
   */
  export type email_templatesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_templates
     */
    select?: email_templatesSelect<ExtArgs> | null
    /**
     * Filter, which email_templates to fetch.
     */
    where: email_templatesWhereUniqueInput
  }


  /**
   * email_templates findUniqueOrThrow
   */
  export type email_templatesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_templates
     */
    select?: email_templatesSelect<ExtArgs> | null
    /**
     * Filter, which email_templates to fetch.
     */
    where: email_templatesWhereUniqueInput
  }


  /**
   * email_templates findFirst
   */
  export type email_templatesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_templates
     */
    select?: email_templatesSelect<ExtArgs> | null
    /**
     * Filter, which email_templates to fetch.
     */
    where?: email_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_templates to fetch.
     */
    orderBy?: email_templatesOrderByWithRelationInput | email_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for email_templates.
     */
    cursor?: email_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of email_templates.
     */
    distinct?: Email_templatesScalarFieldEnum | Email_templatesScalarFieldEnum[]
  }


  /**
   * email_templates findFirstOrThrow
   */
  export type email_templatesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_templates
     */
    select?: email_templatesSelect<ExtArgs> | null
    /**
     * Filter, which email_templates to fetch.
     */
    where?: email_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_templates to fetch.
     */
    orderBy?: email_templatesOrderByWithRelationInput | email_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for email_templates.
     */
    cursor?: email_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of email_templates.
     */
    distinct?: Email_templatesScalarFieldEnum | Email_templatesScalarFieldEnum[]
  }


  /**
   * email_templates findMany
   */
  export type email_templatesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_templates
     */
    select?: email_templatesSelect<ExtArgs> | null
    /**
     * Filter, which email_templates to fetch.
     */
    where?: email_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_templates to fetch.
     */
    orderBy?: email_templatesOrderByWithRelationInput | email_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing email_templates.
     */
    cursor?: email_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_templates.
     */
    skip?: number
    distinct?: Email_templatesScalarFieldEnum | Email_templatesScalarFieldEnum[]
  }


  /**
   * email_templates create
   */
  export type email_templatesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_templates
     */
    select?: email_templatesSelect<ExtArgs> | null
    /**
     * The data needed to create a email_templates.
     */
    data: XOR<email_templatesCreateInput, email_templatesUncheckedCreateInput>
  }


  /**
   * email_templates createMany
   */
  export type email_templatesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many email_templates.
     */
    data: email_templatesCreateManyInput | email_templatesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * email_templates update
   */
  export type email_templatesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_templates
     */
    select?: email_templatesSelect<ExtArgs> | null
    /**
     * The data needed to update a email_templates.
     */
    data: XOR<email_templatesUpdateInput, email_templatesUncheckedUpdateInput>
    /**
     * Choose, which email_templates to update.
     */
    where: email_templatesWhereUniqueInput
  }


  /**
   * email_templates updateMany
   */
  export type email_templatesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update email_templates.
     */
    data: XOR<email_templatesUpdateManyMutationInput, email_templatesUncheckedUpdateManyInput>
    /**
     * Filter which email_templates to update
     */
    where?: email_templatesWhereInput
  }


  /**
   * email_templates upsert
   */
  export type email_templatesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_templates
     */
    select?: email_templatesSelect<ExtArgs> | null
    /**
     * The filter to search for the email_templates to update in case it exists.
     */
    where: email_templatesWhereUniqueInput
    /**
     * In case the email_templates found by the `where` argument doesn't exist, create a new email_templates with this data.
     */
    create: XOR<email_templatesCreateInput, email_templatesUncheckedCreateInput>
    /**
     * In case the email_templates was found with the provided `where` argument, update it with this data.
     */
    update: XOR<email_templatesUpdateInput, email_templatesUncheckedUpdateInput>
  }


  /**
   * email_templates delete
   */
  export type email_templatesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_templates
     */
    select?: email_templatesSelect<ExtArgs> | null
    /**
     * Filter which email_templates to delete.
     */
    where: email_templatesWhereUniqueInput
  }


  /**
   * email_templates deleteMany
   */
  export type email_templatesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email_templates to delete
     */
    where?: email_templatesWhereInput
  }


  /**
   * email_templates without action
   */
  export type email_templatesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_templates
     */
    select?: email_templatesSelect<ExtArgs> | null
  }



  /**
   * Model leads
   */

  export type AggregateLeads = {
    _count: LeadsCountAggregateOutputType | null
    _min: LeadsMinAggregateOutputType | null
    _max: LeadsMaxAggregateOutputType | null
  }

  export type LeadsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    stage: string | null
    active: boolean | null
    customer_record_id: string | null
  }

  export type LeadsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    stage: string | null
    active: boolean | null
    customer_record_id: string | null
  }

  export type LeadsCountAggregateOutputType = {
    id: number
    created_at: number
    stage: number
    active: number
    customer_record_id: number
    _all: number
  }


  export type LeadsMinAggregateInputType = {
    id?: true
    created_at?: true
    stage?: true
    active?: true
    customer_record_id?: true
  }

  export type LeadsMaxAggregateInputType = {
    id?: true
    created_at?: true
    stage?: true
    active?: true
    customer_record_id?: true
  }

  export type LeadsCountAggregateInputType = {
    id?: true
    created_at?: true
    stage?: true
    active?: true
    customer_record_id?: true
    _all?: true
  }

  export type LeadsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which leads to aggregate.
     */
    where?: leadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leads to fetch.
     */
    orderBy?: leadsOrderByWithRelationInput | leadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: leadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned leads
    **/
    _count?: true | LeadsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LeadsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LeadsMaxAggregateInputType
  }

  export type GetLeadsAggregateType<T extends LeadsAggregateArgs> = {
        [P in keyof T & keyof AggregateLeads]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLeads[P]>
      : GetScalarType<T[P], AggregateLeads[P]>
  }




  export type leadsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: leadsWhereInput
    orderBy?: leadsOrderByWithAggregationInput | leadsOrderByWithAggregationInput[]
    by: LeadsScalarFieldEnum[] | LeadsScalarFieldEnum
    having?: leadsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LeadsCountAggregateInputType | true
    _min?: LeadsMinAggregateInputType
    _max?: LeadsMaxAggregateInputType
  }

  export type LeadsGroupByOutputType = {
    id: string
    created_at: Date
    stage: string
    active: boolean
    customer_record_id: string
    _count: LeadsCountAggregateOutputType | null
    _min: LeadsMinAggregateOutputType | null
    _max: LeadsMaxAggregateOutputType | null
  }

  type GetLeadsGroupByPayload<T extends leadsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LeadsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LeadsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LeadsGroupByOutputType[P]>
            : GetScalarType<T[P], LeadsGroupByOutputType[P]>
        }
      >
    >


  export type leadsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    stage?: boolean
    active?: boolean
    customer_record_id?: boolean
    customer_records?: boolean | customer_recordsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leads"]>

  export type leadsSelectScalar = {
    id?: boolean
    created_at?: boolean
    stage?: boolean
    active?: boolean
    customer_record_id?: boolean
  }

  export type leadsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer_records?: boolean | customer_recordsDefaultArgs<ExtArgs>
  }


  export type $leadsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "leads"
    objects: {
      customer_records: Prisma.$customer_recordsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      stage: string
      active: boolean
      customer_record_id: string
    }, ExtArgs["result"]["leads"]>
    composites: {}
  }


  type leadsGetPayload<S extends boolean | null | undefined | leadsDefaultArgs> = $Result.GetResult<Prisma.$leadsPayload, S>

  type leadsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<leadsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: LeadsCountAggregateInputType | true
    }

  export interface leadsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['leads'], meta: { name: 'leads' } }
    /**
     * Find zero or one Leads that matches the filter.
     * @param {leadsFindUniqueArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends leadsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, leadsFindUniqueArgs<ExtArgs>>
    ): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Leads that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {leadsFindUniqueOrThrowArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends leadsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, leadsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Leads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsFindFirstArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends leadsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, leadsFindFirstArgs<ExtArgs>>
    ): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Leads that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsFindFirstOrThrowArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends leadsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, leadsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Leads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Leads
     * const leads = await prisma.leads.findMany()
     * 
     * // Get first 10 Leads
     * const leads = await prisma.leads.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leadsWithIdOnly = await prisma.leads.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends leadsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, leadsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Leads.
     * @param {leadsCreateArgs} args - Arguments to create a Leads.
     * @example
     * // Create one Leads
     * const Leads = await prisma.leads.create({
     *   data: {
     *     // ... data to create a Leads
     *   }
     * })
     * 
    **/
    create<T extends leadsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, leadsCreateArgs<ExtArgs>>
    ): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Leads.
     *     @param {leadsCreateManyArgs} args - Arguments to create many Leads.
     *     @example
     *     // Create many Leads
     *     const leads = await prisma.leads.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends leadsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, leadsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Leads.
     * @param {leadsDeleteArgs} args - Arguments to delete one Leads.
     * @example
     * // Delete one Leads
     * const Leads = await prisma.leads.delete({
     *   where: {
     *     // ... filter to delete one Leads
     *   }
     * })
     * 
    **/
    delete<T extends leadsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, leadsDeleteArgs<ExtArgs>>
    ): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Leads.
     * @param {leadsUpdateArgs} args - Arguments to update one Leads.
     * @example
     * // Update one Leads
     * const leads = await prisma.leads.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends leadsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, leadsUpdateArgs<ExtArgs>>
    ): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Leads.
     * @param {leadsDeleteManyArgs} args - Arguments to filter Leads to delete.
     * @example
     * // Delete a few Leads
     * const { count } = await prisma.leads.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends leadsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, leadsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Leads
     * const leads = await prisma.leads.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends leadsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, leadsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Leads.
     * @param {leadsUpsertArgs} args - Arguments to update or create a Leads.
     * @example
     * // Update or create a Leads
     * const leads = await prisma.leads.upsert({
     *   create: {
     *     // ... data to create a Leads
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Leads we want to update
     *   }
     * })
    **/
    upsert<T extends leadsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, leadsUpsertArgs<ExtArgs>>
    ): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsCountArgs} args - Arguments to filter Leads to count.
     * @example
     * // Count the number of Leads
     * const count = await prisma.leads.count({
     *   where: {
     *     // ... the filter for the Leads we want to count
     *   }
     * })
    **/
    count<T extends leadsCountArgs>(
      args?: Subset<T, leadsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LeadsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LeadsAggregateArgs>(args: Subset<T, LeadsAggregateArgs>): Prisma.PrismaPromise<GetLeadsAggregateType<T>>

    /**
     * Group by Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends leadsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: leadsGroupByArgs['orderBy'] }
        : { orderBy?: leadsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, leadsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeadsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the leads model
   */
  readonly fields: leadsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for leads.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__leadsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    customer_records<T extends customer_recordsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, customer_recordsDefaultArgs<ExtArgs>>): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the leads model
   */ 
  interface leadsFieldRefs {
    readonly id: FieldRef<"leads", 'String'>
    readonly created_at: FieldRef<"leads", 'DateTime'>
    readonly stage: FieldRef<"leads", 'String'>
    readonly active: FieldRef<"leads", 'Boolean'>
    readonly customer_record_id: FieldRef<"leads", 'String'>
  }
    

  // Custom InputTypes

  /**
   * leads findUnique
   */
  export type leadsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter, which leads to fetch.
     */
    where: leadsWhereUniqueInput
  }


  /**
   * leads findUniqueOrThrow
   */
  export type leadsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter, which leads to fetch.
     */
    where: leadsWhereUniqueInput
  }


  /**
   * leads findFirst
   */
  export type leadsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter, which leads to fetch.
     */
    where?: leadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leads to fetch.
     */
    orderBy?: leadsOrderByWithRelationInput | leadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for leads.
     */
    cursor?: leadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of leads.
     */
    distinct?: LeadsScalarFieldEnum | LeadsScalarFieldEnum[]
  }


  /**
   * leads findFirstOrThrow
   */
  export type leadsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter, which leads to fetch.
     */
    where?: leadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leads to fetch.
     */
    orderBy?: leadsOrderByWithRelationInput | leadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for leads.
     */
    cursor?: leadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of leads.
     */
    distinct?: LeadsScalarFieldEnum | LeadsScalarFieldEnum[]
  }


  /**
   * leads findMany
   */
  export type leadsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter, which leads to fetch.
     */
    where?: leadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leads to fetch.
     */
    orderBy?: leadsOrderByWithRelationInput | leadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing leads.
     */
    cursor?: leadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leads.
     */
    skip?: number
    distinct?: LeadsScalarFieldEnum | LeadsScalarFieldEnum[]
  }


  /**
   * leads create
   */
  export type leadsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * The data needed to create a leads.
     */
    data: XOR<leadsCreateInput, leadsUncheckedCreateInput>
  }


  /**
   * leads createMany
   */
  export type leadsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many leads.
     */
    data: leadsCreateManyInput | leadsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * leads update
   */
  export type leadsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * The data needed to update a leads.
     */
    data: XOR<leadsUpdateInput, leadsUncheckedUpdateInput>
    /**
     * Choose, which leads to update.
     */
    where: leadsWhereUniqueInput
  }


  /**
   * leads updateMany
   */
  export type leadsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update leads.
     */
    data: XOR<leadsUpdateManyMutationInput, leadsUncheckedUpdateManyInput>
    /**
     * Filter which leads to update
     */
    where?: leadsWhereInput
  }


  /**
   * leads upsert
   */
  export type leadsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * The filter to search for the leads to update in case it exists.
     */
    where: leadsWhereUniqueInput
    /**
     * In case the leads found by the `where` argument doesn't exist, create a new leads with this data.
     */
    create: XOR<leadsCreateInput, leadsUncheckedCreateInput>
    /**
     * In case the leads was found with the provided `where` argument, update it with this data.
     */
    update: XOR<leadsUpdateInput, leadsUncheckedUpdateInput>
  }


  /**
   * leads delete
   */
  export type leadsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter which leads to delete.
     */
    where: leadsWhereUniqueInput
  }


  /**
   * leads deleteMany
   */
  export type leadsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which leads to delete
     */
    where?: leadsWhereInput
  }


  /**
   * leads without action
   */
  export type leadsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: leadsInclude<ExtArgs> | null
  }



  /**
   * Model marketing_campaigns
   */

  export type AggregateMarketing_campaigns = {
    _count: Marketing_campaignsCountAggregateOutputType | null
    _min: Marketing_campaignsMinAggregateOutputType | null
    _max: Marketing_campaignsMaxAggregateOutputType | null
  }

  export type Marketing_campaignsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
  }

  export type Marketing_campaignsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
  }

  export type Marketing_campaignsCountAggregateOutputType = {
    id: number
    created_at: number
    _all: number
  }


  export type Marketing_campaignsMinAggregateInputType = {
    id?: true
    created_at?: true
  }

  export type Marketing_campaignsMaxAggregateInputType = {
    id?: true
    created_at?: true
  }

  export type Marketing_campaignsCountAggregateInputType = {
    id?: true
    created_at?: true
    _all?: true
  }

  export type Marketing_campaignsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which marketing_campaigns to aggregate.
     */
    where?: marketing_campaignsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of marketing_campaigns to fetch.
     */
    orderBy?: marketing_campaignsOrderByWithRelationInput | marketing_campaignsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: marketing_campaignsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` marketing_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` marketing_campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned marketing_campaigns
    **/
    _count?: true | Marketing_campaignsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Marketing_campaignsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Marketing_campaignsMaxAggregateInputType
  }

  export type GetMarketing_campaignsAggregateType<T extends Marketing_campaignsAggregateArgs> = {
        [P in keyof T & keyof AggregateMarketing_campaigns]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMarketing_campaigns[P]>
      : GetScalarType<T[P], AggregateMarketing_campaigns[P]>
  }




  export type marketing_campaignsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: marketing_campaignsWhereInput
    orderBy?: marketing_campaignsOrderByWithAggregationInput | marketing_campaignsOrderByWithAggregationInput[]
    by: Marketing_campaignsScalarFieldEnum[] | Marketing_campaignsScalarFieldEnum
    having?: marketing_campaignsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Marketing_campaignsCountAggregateInputType | true
    _min?: Marketing_campaignsMinAggregateInputType
    _max?: Marketing_campaignsMaxAggregateInputType
  }

  export type Marketing_campaignsGroupByOutputType = {
    id: string
    created_at: Date
    _count: Marketing_campaignsCountAggregateOutputType | null
    _min: Marketing_campaignsMinAggregateOutputType | null
    _max: Marketing_campaignsMaxAggregateOutputType | null
  }

  type GetMarketing_campaignsGroupByPayload<T extends marketing_campaignsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Marketing_campaignsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Marketing_campaignsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Marketing_campaignsGroupByOutputType[P]>
            : GetScalarType<T[P], Marketing_campaignsGroupByOutputType[P]>
        }
      >
    >


  export type marketing_campaignsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    communications?: boolean | marketing_campaigns$communicationsArgs<ExtArgs>
    _count?: boolean | Marketing_campaignsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marketing_campaigns"]>

  export type marketing_campaignsSelectScalar = {
    id?: boolean
    created_at?: boolean
  }

  export type marketing_campaignsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    communications?: boolean | marketing_campaigns$communicationsArgs<ExtArgs>
    _count?: boolean | Marketing_campaignsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $marketing_campaignsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "marketing_campaigns"
    objects: {
      communications: Prisma.$communicationsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
    }, ExtArgs["result"]["marketing_campaigns"]>
    composites: {}
  }


  type marketing_campaignsGetPayload<S extends boolean | null | undefined | marketing_campaignsDefaultArgs> = $Result.GetResult<Prisma.$marketing_campaignsPayload, S>

  type marketing_campaignsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<marketing_campaignsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Marketing_campaignsCountAggregateInputType | true
    }

  export interface marketing_campaignsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['marketing_campaigns'], meta: { name: 'marketing_campaigns' } }
    /**
     * Find zero or one Marketing_campaigns that matches the filter.
     * @param {marketing_campaignsFindUniqueArgs} args - Arguments to find a Marketing_campaigns
     * @example
     * // Get one Marketing_campaigns
     * const marketing_campaigns = await prisma.marketing_campaigns.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends marketing_campaignsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, marketing_campaignsFindUniqueArgs<ExtArgs>>
    ): Prisma__marketing_campaignsClient<$Result.GetResult<Prisma.$marketing_campaignsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Marketing_campaigns that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {marketing_campaignsFindUniqueOrThrowArgs} args - Arguments to find a Marketing_campaigns
     * @example
     * // Get one Marketing_campaigns
     * const marketing_campaigns = await prisma.marketing_campaigns.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends marketing_campaignsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, marketing_campaignsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__marketing_campaignsClient<$Result.GetResult<Prisma.$marketing_campaignsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Marketing_campaigns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {marketing_campaignsFindFirstArgs} args - Arguments to find a Marketing_campaigns
     * @example
     * // Get one Marketing_campaigns
     * const marketing_campaigns = await prisma.marketing_campaigns.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends marketing_campaignsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, marketing_campaignsFindFirstArgs<ExtArgs>>
    ): Prisma__marketing_campaignsClient<$Result.GetResult<Prisma.$marketing_campaignsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Marketing_campaigns that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {marketing_campaignsFindFirstOrThrowArgs} args - Arguments to find a Marketing_campaigns
     * @example
     * // Get one Marketing_campaigns
     * const marketing_campaigns = await prisma.marketing_campaigns.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends marketing_campaignsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, marketing_campaignsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__marketing_campaignsClient<$Result.GetResult<Prisma.$marketing_campaignsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Marketing_campaigns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {marketing_campaignsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Marketing_campaigns
     * const marketing_campaigns = await prisma.marketing_campaigns.findMany()
     * 
     * // Get first 10 Marketing_campaigns
     * const marketing_campaigns = await prisma.marketing_campaigns.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const marketing_campaignsWithIdOnly = await prisma.marketing_campaigns.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends marketing_campaignsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, marketing_campaignsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$marketing_campaignsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Marketing_campaigns.
     * @param {marketing_campaignsCreateArgs} args - Arguments to create a Marketing_campaigns.
     * @example
     * // Create one Marketing_campaigns
     * const Marketing_campaigns = await prisma.marketing_campaigns.create({
     *   data: {
     *     // ... data to create a Marketing_campaigns
     *   }
     * })
     * 
    **/
    create<T extends marketing_campaignsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, marketing_campaignsCreateArgs<ExtArgs>>
    ): Prisma__marketing_campaignsClient<$Result.GetResult<Prisma.$marketing_campaignsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Marketing_campaigns.
     *     @param {marketing_campaignsCreateManyArgs} args - Arguments to create many Marketing_campaigns.
     *     @example
     *     // Create many Marketing_campaigns
     *     const marketing_campaigns = await prisma.marketing_campaigns.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends marketing_campaignsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, marketing_campaignsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Marketing_campaigns.
     * @param {marketing_campaignsDeleteArgs} args - Arguments to delete one Marketing_campaigns.
     * @example
     * // Delete one Marketing_campaigns
     * const Marketing_campaigns = await prisma.marketing_campaigns.delete({
     *   where: {
     *     // ... filter to delete one Marketing_campaigns
     *   }
     * })
     * 
    **/
    delete<T extends marketing_campaignsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, marketing_campaignsDeleteArgs<ExtArgs>>
    ): Prisma__marketing_campaignsClient<$Result.GetResult<Prisma.$marketing_campaignsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Marketing_campaigns.
     * @param {marketing_campaignsUpdateArgs} args - Arguments to update one Marketing_campaigns.
     * @example
     * // Update one Marketing_campaigns
     * const marketing_campaigns = await prisma.marketing_campaigns.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends marketing_campaignsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, marketing_campaignsUpdateArgs<ExtArgs>>
    ): Prisma__marketing_campaignsClient<$Result.GetResult<Prisma.$marketing_campaignsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Marketing_campaigns.
     * @param {marketing_campaignsDeleteManyArgs} args - Arguments to filter Marketing_campaigns to delete.
     * @example
     * // Delete a few Marketing_campaigns
     * const { count } = await prisma.marketing_campaigns.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends marketing_campaignsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, marketing_campaignsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Marketing_campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {marketing_campaignsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Marketing_campaigns
     * const marketing_campaigns = await prisma.marketing_campaigns.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends marketing_campaignsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, marketing_campaignsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Marketing_campaigns.
     * @param {marketing_campaignsUpsertArgs} args - Arguments to update or create a Marketing_campaigns.
     * @example
     * // Update or create a Marketing_campaigns
     * const marketing_campaigns = await prisma.marketing_campaigns.upsert({
     *   create: {
     *     // ... data to create a Marketing_campaigns
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Marketing_campaigns we want to update
     *   }
     * })
    **/
    upsert<T extends marketing_campaignsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, marketing_campaignsUpsertArgs<ExtArgs>>
    ): Prisma__marketing_campaignsClient<$Result.GetResult<Prisma.$marketing_campaignsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Marketing_campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {marketing_campaignsCountArgs} args - Arguments to filter Marketing_campaigns to count.
     * @example
     * // Count the number of Marketing_campaigns
     * const count = await prisma.marketing_campaigns.count({
     *   where: {
     *     // ... the filter for the Marketing_campaigns we want to count
     *   }
     * })
    **/
    count<T extends marketing_campaignsCountArgs>(
      args?: Subset<T, marketing_campaignsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Marketing_campaignsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Marketing_campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Marketing_campaignsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Marketing_campaignsAggregateArgs>(args: Subset<T, Marketing_campaignsAggregateArgs>): Prisma.PrismaPromise<GetMarketing_campaignsAggregateType<T>>

    /**
     * Group by Marketing_campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {marketing_campaignsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends marketing_campaignsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: marketing_campaignsGroupByArgs['orderBy'] }
        : { orderBy?: marketing_campaignsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, marketing_campaignsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMarketing_campaignsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the marketing_campaigns model
   */
  readonly fields: marketing_campaignsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for marketing_campaigns.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__marketing_campaignsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    communications<T extends marketing_campaigns$communicationsArgs<ExtArgs> = {}>(args?: Subset<T, marketing_campaigns$communicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communicationsPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the marketing_campaigns model
   */ 
  interface marketing_campaignsFieldRefs {
    readonly id: FieldRef<"marketing_campaigns", 'String'>
    readonly created_at: FieldRef<"marketing_campaigns", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * marketing_campaigns findUnique
   */
  export type marketing_campaignsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
    /**
     * Filter, which marketing_campaigns to fetch.
     */
    where: marketing_campaignsWhereUniqueInput
  }


  /**
   * marketing_campaigns findUniqueOrThrow
   */
  export type marketing_campaignsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
    /**
     * Filter, which marketing_campaigns to fetch.
     */
    where: marketing_campaignsWhereUniqueInput
  }


  /**
   * marketing_campaigns findFirst
   */
  export type marketing_campaignsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
    /**
     * Filter, which marketing_campaigns to fetch.
     */
    where?: marketing_campaignsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of marketing_campaigns to fetch.
     */
    orderBy?: marketing_campaignsOrderByWithRelationInput | marketing_campaignsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for marketing_campaigns.
     */
    cursor?: marketing_campaignsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` marketing_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` marketing_campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of marketing_campaigns.
     */
    distinct?: Marketing_campaignsScalarFieldEnum | Marketing_campaignsScalarFieldEnum[]
  }


  /**
   * marketing_campaigns findFirstOrThrow
   */
  export type marketing_campaignsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
    /**
     * Filter, which marketing_campaigns to fetch.
     */
    where?: marketing_campaignsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of marketing_campaigns to fetch.
     */
    orderBy?: marketing_campaignsOrderByWithRelationInput | marketing_campaignsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for marketing_campaigns.
     */
    cursor?: marketing_campaignsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` marketing_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` marketing_campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of marketing_campaigns.
     */
    distinct?: Marketing_campaignsScalarFieldEnum | Marketing_campaignsScalarFieldEnum[]
  }


  /**
   * marketing_campaigns findMany
   */
  export type marketing_campaignsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
    /**
     * Filter, which marketing_campaigns to fetch.
     */
    where?: marketing_campaignsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of marketing_campaigns to fetch.
     */
    orderBy?: marketing_campaignsOrderByWithRelationInput | marketing_campaignsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing marketing_campaigns.
     */
    cursor?: marketing_campaignsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` marketing_campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` marketing_campaigns.
     */
    skip?: number
    distinct?: Marketing_campaignsScalarFieldEnum | Marketing_campaignsScalarFieldEnum[]
  }


  /**
   * marketing_campaigns create
   */
  export type marketing_campaignsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
    /**
     * The data needed to create a marketing_campaigns.
     */
    data?: XOR<marketing_campaignsCreateInput, marketing_campaignsUncheckedCreateInput>
  }


  /**
   * marketing_campaigns createMany
   */
  export type marketing_campaignsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many marketing_campaigns.
     */
    data: marketing_campaignsCreateManyInput | marketing_campaignsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * marketing_campaigns update
   */
  export type marketing_campaignsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
    /**
     * The data needed to update a marketing_campaigns.
     */
    data: XOR<marketing_campaignsUpdateInput, marketing_campaignsUncheckedUpdateInput>
    /**
     * Choose, which marketing_campaigns to update.
     */
    where: marketing_campaignsWhereUniqueInput
  }


  /**
   * marketing_campaigns updateMany
   */
  export type marketing_campaignsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update marketing_campaigns.
     */
    data: XOR<marketing_campaignsUpdateManyMutationInput, marketing_campaignsUncheckedUpdateManyInput>
    /**
     * Filter which marketing_campaigns to update
     */
    where?: marketing_campaignsWhereInput
  }


  /**
   * marketing_campaigns upsert
   */
  export type marketing_campaignsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
    /**
     * The filter to search for the marketing_campaigns to update in case it exists.
     */
    where: marketing_campaignsWhereUniqueInput
    /**
     * In case the marketing_campaigns found by the `where` argument doesn't exist, create a new marketing_campaigns with this data.
     */
    create: XOR<marketing_campaignsCreateInput, marketing_campaignsUncheckedCreateInput>
    /**
     * In case the marketing_campaigns was found with the provided `where` argument, update it with this data.
     */
    update: XOR<marketing_campaignsUpdateInput, marketing_campaignsUncheckedUpdateInput>
  }


  /**
   * marketing_campaigns delete
   */
  export type marketing_campaignsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
    /**
     * Filter which marketing_campaigns to delete.
     */
    where: marketing_campaignsWhereUniqueInput
  }


  /**
   * marketing_campaigns deleteMany
   */
  export type marketing_campaignsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which marketing_campaigns to delete
     */
    where?: marketing_campaignsWhereInput
  }


  /**
   * marketing_campaigns.communications
   */
  export type marketing_campaigns$communicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the communications
     */
    select?: communicationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: communicationsInclude<ExtArgs> | null
    where?: communicationsWhereInput
    orderBy?: communicationsOrderByWithRelationInput | communicationsOrderByWithRelationInput[]
    cursor?: communicationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunicationsScalarFieldEnum | CommunicationsScalarFieldEnum[]
  }


  /**
   * marketing_campaigns without action
   */
  export type marketing_campaignsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the marketing_campaigns
     */
    select?: marketing_campaignsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: marketing_campaignsInclude<ExtArgs> | null
  }



  /**
   * Model notes
   */

  export type AggregateNotes = {
    _count: NotesCountAggregateOutputType | null
    _min: NotesMinAggregateOutputType | null
    _max: NotesMaxAggregateOutputType | null
  }

  export type NotesMinAggregateOutputType = {
    id: string | null
    author: string | null
    note: string | null
    created_at: Date | null
    customer_record_id: string | null
  }

  export type NotesMaxAggregateOutputType = {
    id: string | null
    author: string | null
    note: string | null
    created_at: Date | null
    customer_record_id: string | null
  }

  export type NotesCountAggregateOutputType = {
    id: number
    author: number
    note: number
    created_at: number
    customer_record_id: number
    _all: number
  }


  export type NotesMinAggregateInputType = {
    id?: true
    author?: true
    note?: true
    created_at?: true
    customer_record_id?: true
  }

  export type NotesMaxAggregateInputType = {
    id?: true
    author?: true
    note?: true
    created_at?: true
    customer_record_id?: true
  }

  export type NotesCountAggregateInputType = {
    id?: true
    author?: true
    note?: true
    created_at?: true
    customer_record_id?: true
    _all?: true
  }

  export type NotesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notes to aggregate.
     */
    where?: notesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notes to fetch.
     */
    orderBy?: notesOrderByWithRelationInput | notesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notes
    **/
    _count?: true | NotesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotesMaxAggregateInputType
  }

  export type GetNotesAggregateType<T extends NotesAggregateArgs> = {
        [P in keyof T & keyof AggregateNotes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotes[P]>
      : GetScalarType<T[P], AggregateNotes[P]>
  }




  export type notesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notesWhereInput
    orderBy?: notesOrderByWithAggregationInput | notesOrderByWithAggregationInput[]
    by: NotesScalarFieldEnum[] | NotesScalarFieldEnum
    having?: notesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotesCountAggregateInputType | true
    _min?: NotesMinAggregateInputType
    _max?: NotesMaxAggregateInputType
  }

  export type NotesGroupByOutputType = {
    id: string
    author: string | null
    note: string
    created_at: Date
    customer_record_id: string
    _count: NotesCountAggregateOutputType | null
    _min: NotesMinAggregateOutputType | null
    _max: NotesMaxAggregateOutputType | null
  }

  type GetNotesGroupByPayload<T extends notesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotesGroupByOutputType[P]>
            : GetScalarType<T[P], NotesGroupByOutputType[P]>
        }
      >
    >


  export type notesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    author?: boolean
    note?: boolean
    created_at?: boolean
    customer_record_id?: boolean
    reps?: boolean | notes$repsArgs<ExtArgs>
    customer_records?: boolean | customer_recordsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notes"]>

  export type notesSelectScalar = {
    id?: boolean
    author?: boolean
    note?: boolean
    created_at?: boolean
    customer_record_id?: boolean
  }

  export type notesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reps?: boolean | notes$repsArgs<ExtArgs>
    customer_records?: boolean | customer_recordsDefaultArgs<ExtArgs>
  }


  export type $notesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notes"
    objects: {
      reps: Prisma.$repsPayload<ExtArgs> | null
      customer_records: Prisma.$customer_recordsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      author: string | null
      note: string
      created_at: Date
      customer_record_id: string
    }, ExtArgs["result"]["notes"]>
    composites: {}
  }


  type notesGetPayload<S extends boolean | null | undefined | notesDefaultArgs> = $Result.GetResult<Prisma.$notesPayload, S>

  type notesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<notesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: NotesCountAggregateInputType | true
    }

  export interface notesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notes'], meta: { name: 'notes' } }
    /**
     * Find zero or one Notes that matches the filter.
     * @param {notesFindUniqueArgs} args - Arguments to find a Notes
     * @example
     * // Get one Notes
     * const notes = await prisma.notes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends notesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, notesFindUniqueArgs<ExtArgs>>
    ): Prisma__notesClient<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Notes that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {notesFindUniqueOrThrowArgs} args - Arguments to find a Notes
     * @example
     * // Get one Notes
     * const notes = await prisma.notes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends notesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, notesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__notesClient<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Notes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notesFindFirstArgs} args - Arguments to find a Notes
     * @example
     * // Get one Notes
     * const notes = await prisma.notes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends notesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, notesFindFirstArgs<ExtArgs>>
    ): Prisma__notesClient<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Notes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notesFindFirstOrThrowArgs} args - Arguments to find a Notes
     * @example
     * // Get one Notes
     * const notes = await prisma.notes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends notesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, notesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__notesClient<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Notes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notes
     * const notes = await prisma.notes.findMany()
     * 
     * // Get first 10 Notes
     * const notes = await prisma.notes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notesWithIdOnly = await prisma.notes.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends notesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, notesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Notes.
     * @param {notesCreateArgs} args - Arguments to create a Notes.
     * @example
     * // Create one Notes
     * const Notes = await prisma.notes.create({
     *   data: {
     *     // ... data to create a Notes
     *   }
     * })
     * 
    **/
    create<T extends notesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, notesCreateArgs<ExtArgs>>
    ): Prisma__notesClient<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Notes.
     *     @param {notesCreateManyArgs} args - Arguments to create many Notes.
     *     @example
     *     // Create many Notes
     *     const notes = await prisma.notes.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends notesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, notesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Notes.
     * @param {notesDeleteArgs} args - Arguments to delete one Notes.
     * @example
     * // Delete one Notes
     * const Notes = await prisma.notes.delete({
     *   where: {
     *     // ... filter to delete one Notes
     *   }
     * })
     * 
    **/
    delete<T extends notesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, notesDeleteArgs<ExtArgs>>
    ): Prisma__notesClient<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Notes.
     * @param {notesUpdateArgs} args - Arguments to update one Notes.
     * @example
     * // Update one Notes
     * const notes = await prisma.notes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends notesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, notesUpdateArgs<ExtArgs>>
    ): Prisma__notesClient<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Notes.
     * @param {notesDeleteManyArgs} args - Arguments to filter Notes to delete.
     * @example
     * // Delete a few Notes
     * const { count } = await prisma.notes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends notesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, notesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notes
     * const notes = await prisma.notes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends notesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, notesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notes.
     * @param {notesUpsertArgs} args - Arguments to update or create a Notes.
     * @example
     * // Update or create a Notes
     * const notes = await prisma.notes.upsert({
     *   create: {
     *     // ... data to create a Notes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notes we want to update
     *   }
     * })
    **/
    upsert<T extends notesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, notesUpsertArgs<ExtArgs>>
    ): Prisma__notesClient<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notesCountArgs} args - Arguments to filter Notes to count.
     * @example
     * // Count the number of Notes
     * const count = await prisma.notes.count({
     *   where: {
     *     // ... the filter for the Notes we want to count
     *   }
     * })
    **/
    count<T extends notesCountArgs>(
      args?: Subset<T, notesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotesAggregateArgs>(args: Subset<T, NotesAggregateArgs>): Prisma.PrismaPromise<GetNotesAggregateType<T>>

    /**
     * Group by Notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notesGroupByArgs['orderBy'] }
        : { orderBy?: notesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notes model
   */
  readonly fields: notesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    reps<T extends notes$repsArgs<ExtArgs> = {}>(args?: Subset<T, notes$repsArgs<ExtArgs>>): Prisma__repsClient<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    customer_records<T extends customer_recordsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, customer_recordsDefaultArgs<ExtArgs>>): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the notes model
   */ 
  interface notesFieldRefs {
    readonly id: FieldRef<"notes", 'String'>
    readonly author: FieldRef<"notes", 'String'>
    readonly note: FieldRef<"notes", 'String'>
    readonly created_at: FieldRef<"notes", 'DateTime'>
    readonly customer_record_id: FieldRef<"notes", 'String'>
  }
    

  // Custom InputTypes

  /**
   * notes findUnique
   */
  export type notesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    /**
     * Filter, which notes to fetch.
     */
    where: notesWhereUniqueInput
  }


  /**
   * notes findUniqueOrThrow
   */
  export type notesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    /**
     * Filter, which notes to fetch.
     */
    where: notesWhereUniqueInput
  }


  /**
   * notes findFirst
   */
  export type notesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    /**
     * Filter, which notes to fetch.
     */
    where?: notesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notes to fetch.
     */
    orderBy?: notesOrderByWithRelationInput | notesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notes.
     */
    cursor?: notesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notes.
     */
    distinct?: NotesScalarFieldEnum | NotesScalarFieldEnum[]
  }


  /**
   * notes findFirstOrThrow
   */
  export type notesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    /**
     * Filter, which notes to fetch.
     */
    where?: notesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notes to fetch.
     */
    orderBy?: notesOrderByWithRelationInput | notesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notes.
     */
    cursor?: notesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notes.
     */
    distinct?: NotesScalarFieldEnum | NotesScalarFieldEnum[]
  }


  /**
   * notes findMany
   */
  export type notesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    /**
     * Filter, which notes to fetch.
     */
    where?: notesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notes to fetch.
     */
    orderBy?: notesOrderByWithRelationInput | notesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notes.
     */
    cursor?: notesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notes.
     */
    skip?: number
    distinct?: NotesScalarFieldEnum | NotesScalarFieldEnum[]
  }


  /**
   * notes create
   */
  export type notesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    /**
     * The data needed to create a notes.
     */
    data: XOR<notesCreateInput, notesUncheckedCreateInput>
  }


  /**
   * notes createMany
   */
  export type notesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notes.
     */
    data: notesCreateManyInput | notesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * notes update
   */
  export type notesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    /**
     * The data needed to update a notes.
     */
    data: XOR<notesUpdateInput, notesUncheckedUpdateInput>
    /**
     * Choose, which notes to update.
     */
    where: notesWhereUniqueInput
  }


  /**
   * notes updateMany
   */
  export type notesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notes.
     */
    data: XOR<notesUpdateManyMutationInput, notesUncheckedUpdateManyInput>
    /**
     * Filter which notes to update
     */
    where?: notesWhereInput
  }


  /**
   * notes upsert
   */
  export type notesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    /**
     * The filter to search for the notes to update in case it exists.
     */
    where: notesWhereUniqueInput
    /**
     * In case the notes found by the `where` argument doesn't exist, create a new notes with this data.
     */
    create: XOR<notesCreateInput, notesUncheckedCreateInput>
    /**
     * In case the notes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notesUpdateInput, notesUncheckedUpdateInput>
  }


  /**
   * notes delete
   */
  export type notesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    /**
     * Filter which notes to delete.
     */
    where: notesWhereUniqueInput
  }


  /**
   * notes deleteMany
   */
  export type notesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notes to delete
     */
    where?: notesWhereInput
  }


  /**
   * notes.reps
   */
  export type notes$repsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    where?: repsWhereInput
  }


  /**
   * notes without action
   */
  export type notesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
  }



  /**
   * Model opportunities
   */

  export type AggregateOpportunities = {
    _count: OpportunitiesCountAggregateOutputType | null
    _min: OpportunitiesMinAggregateOutputType | null
    _max: OpportunitiesMaxAggregateOutputType | null
  }

  export type OpportunitiesMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    stage: string | null
    active: boolean | null
    customer_record_id: string | null
  }

  export type OpportunitiesMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    stage: string | null
    active: boolean | null
    customer_record_id: string | null
  }

  export type OpportunitiesCountAggregateOutputType = {
    id: number
    created_at: number
    stage: number
    active: number
    customer_record_id: number
    _all: number
  }


  export type OpportunitiesMinAggregateInputType = {
    id?: true
    created_at?: true
    stage?: true
    active?: true
    customer_record_id?: true
  }

  export type OpportunitiesMaxAggregateInputType = {
    id?: true
    created_at?: true
    stage?: true
    active?: true
    customer_record_id?: true
  }

  export type OpportunitiesCountAggregateInputType = {
    id?: true
    created_at?: true
    stage?: true
    active?: true
    customer_record_id?: true
    _all?: true
  }

  export type OpportunitiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which opportunities to aggregate.
     */
    where?: opportunitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opportunities to fetch.
     */
    orderBy?: opportunitiesOrderByWithRelationInput | opportunitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: opportunitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opportunities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opportunities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned opportunities
    **/
    _count?: true | OpportunitiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OpportunitiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OpportunitiesMaxAggregateInputType
  }

  export type GetOpportunitiesAggregateType<T extends OpportunitiesAggregateArgs> = {
        [P in keyof T & keyof AggregateOpportunities]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOpportunities[P]>
      : GetScalarType<T[P], AggregateOpportunities[P]>
  }




  export type opportunitiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: opportunitiesWhereInput
    orderBy?: opportunitiesOrderByWithAggregationInput | opportunitiesOrderByWithAggregationInput[]
    by: OpportunitiesScalarFieldEnum[] | OpportunitiesScalarFieldEnum
    having?: opportunitiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OpportunitiesCountAggregateInputType | true
    _min?: OpportunitiesMinAggregateInputType
    _max?: OpportunitiesMaxAggregateInputType
  }

  export type OpportunitiesGroupByOutputType = {
    id: string
    created_at: Date
    stage: string
    active: boolean
    customer_record_id: string
    _count: OpportunitiesCountAggregateOutputType | null
    _min: OpportunitiesMinAggregateOutputType | null
    _max: OpportunitiesMaxAggregateOutputType | null
  }

  type GetOpportunitiesGroupByPayload<T extends opportunitiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OpportunitiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OpportunitiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OpportunitiesGroupByOutputType[P]>
            : GetScalarType<T[P], OpportunitiesGroupByOutputType[P]>
        }
      >
    >


  export type opportunitiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    stage?: boolean
    active?: boolean
    customer_record_id?: boolean
    customer_records?: boolean | customer_recordsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["opportunities"]>

  export type opportunitiesSelectScalar = {
    id?: boolean
    created_at?: boolean
    stage?: boolean
    active?: boolean
    customer_record_id?: boolean
  }

  export type opportunitiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer_records?: boolean | customer_recordsDefaultArgs<ExtArgs>
  }


  export type $opportunitiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "opportunities"
    objects: {
      customer_records: Prisma.$customer_recordsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      stage: string
      active: boolean
      customer_record_id: string
    }, ExtArgs["result"]["opportunities"]>
    composites: {}
  }


  type opportunitiesGetPayload<S extends boolean | null | undefined | opportunitiesDefaultArgs> = $Result.GetResult<Prisma.$opportunitiesPayload, S>

  type opportunitiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<opportunitiesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: OpportunitiesCountAggregateInputType | true
    }

  export interface opportunitiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['opportunities'], meta: { name: 'opportunities' } }
    /**
     * Find zero or one Opportunities that matches the filter.
     * @param {opportunitiesFindUniqueArgs} args - Arguments to find a Opportunities
     * @example
     * // Get one Opportunities
     * const opportunities = await prisma.opportunities.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends opportunitiesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, opportunitiesFindUniqueArgs<ExtArgs>>
    ): Prisma__opportunitiesClient<$Result.GetResult<Prisma.$opportunitiesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Opportunities that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {opportunitiesFindUniqueOrThrowArgs} args - Arguments to find a Opportunities
     * @example
     * // Get one Opportunities
     * const opportunities = await prisma.opportunities.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends opportunitiesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, opportunitiesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__opportunitiesClient<$Result.GetResult<Prisma.$opportunitiesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Opportunities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opportunitiesFindFirstArgs} args - Arguments to find a Opportunities
     * @example
     * // Get one Opportunities
     * const opportunities = await prisma.opportunities.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends opportunitiesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, opportunitiesFindFirstArgs<ExtArgs>>
    ): Prisma__opportunitiesClient<$Result.GetResult<Prisma.$opportunitiesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Opportunities that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opportunitiesFindFirstOrThrowArgs} args - Arguments to find a Opportunities
     * @example
     * // Get one Opportunities
     * const opportunities = await prisma.opportunities.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends opportunitiesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, opportunitiesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__opportunitiesClient<$Result.GetResult<Prisma.$opportunitiesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Opportunities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opportunitiesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Opportunities
     * const opportunities = await prisma.opportunities.findMany()
     * 
     * // Get first 10 Opportunities
     * const opportunities = await prisma.opportunities.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const opportunitiesWithIdOnly = await prisma.opportunities.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends opportunitiesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, opportunitiesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$opportunitiesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Opportunities.
     * @param {opportunitiesCreateArgs} args - Arguments to create a Opportunities.
     * @example
     * // Create one Opportunities
     * const Opportunities = await prisma.opportunities.create({
     *   data: {
     *     // ... data to create a Opportunities
     *   }
     * })
     * 
    **/
    create<T extends opportunitiesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, opportunitiesCreateArgs<ExtArgs>>
    ): Prisma__opportunitiesClient<$Result.GetResult<Prisma.$opportunitiesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Opportunities.
     *     @param {opportunitiesCreateManyArgs} args - Arguments to create many Opportunities.
     *     @example
     *     // Create many Opportunities
     *     const opportunities = await prisma.opportunities.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends opportunitiesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, opportunitiesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Opportunities.
     * @param {opportunitiesDeleteArgs} args - Arguments to delete one Opportunities.
     * @example
     * // Delete one Opportunities
     * const Opportunities = await prisma.opportunities.delete({
     *   where: {
     *     // ... filter to delete one Opportunities
     *   }
     * })
     * 
    **/
    delete<T extends opportunitiesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, opportunitiesDeleteArgs<ExtArgs>>
    ): Prisma__opportunitiesClient<$Result.GetResult<Prisma.$opportunitiesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Opportunities.
     * @param {opportunitiesUpdateArgs} args - Arguments to update one Opportunities.
     * @example
     * // Update one Opportunities
     * const opportunities = await prisma.opportunities.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends opportunitiesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, opportunitiesUpdateArgs<ExtArgs>>
    ): Prisma__opportunitiesClient<$Result.GetResult<Prisma.$opportunitiesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Opportunities.
     * @param {opportunitiesDeleteManyArgs} args - Arguments to filter Opportunities to delete.
     * @example
     * // Delete a few Opportunities
     * const { count } = await prisma.opportunities.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends opportunitiesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, opportunitiesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Opportunities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opportunitiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Opportunities
     * const opportunities = await prisma.opportunities.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends opportunitiesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, opportunitiesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Opportunities.
     * @param {opportunitiesUpsertArgs} args - Arguments to update or create a Opportunities.
     * @example
     * // Update or create a Opportunities
     * const opportunities = await prisma.opportunities.upsert({
     *   create: {
     *     // ... data to create a Opportunities
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Opportunities we want to update
     *   }
     * })
    **/
    upsert<T extends opportunitiesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, opportunitiesUpsertArgs<ExtArgs>>
    ): Prisma__opportunitiesClient<$Result.GetResult<Prisma.$opportunitiesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Opportunities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opportunitiesCountArgs} args - Arguments to filter Opportunities to count.
     * @example
     * // Count the number of Opportunities
     * const count = await prisma.opportunities.count({
     *   where: {
     *     // ... the filter for the Opportunities we want to count
     *   }
     * })
    **/
    count<T extends opportunitiesCountArgs>(
      args?: Subset<T, opportunitiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OpportunitiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Opportunities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpportunitiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OpportunitiesAggregateArgs>(args: Subset<T, OpportunitiesAggregateArgs>): Prisma.PrismaPromise<GetOpportunitiesAggregateType<T>>

    /**
     * Group by Opportunities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opportunitiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends opportunitiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: opportunitiesGroupByArgs['orderBy'] }
        : { orderBy?: opportunitiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, opportunitiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOpportunitiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the opportunities model
   */
  readonly fields: opportunitiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for opportunities.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__opportunitiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    customer_records<T extends customer_recordsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, customer_recordsDefaultArgs<ExtArgs>>): Prisma__customer_recordsClient<$Result.GetResult<Prisma.$customer_recordsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the opportunities model
   */ 
  interface opportunitiesFieldRefs {
    readonly id: FieldRef<"opportunities", 'String'>
    readonly created_at: FieldRef<"opportunities", 'DateTime'>
    readonly stage: FieldRef<"opportunities", 'String'>
    readonly active: FieldRef<"opportunities", 'Boolean'>
    readonly customer_record_id: FieldRef<"opportunities", 'String'>
  }
    

  // Custom InputTypes

  /**
   * opportunities findUnique
   */
  export type opportunitiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
    /**
     * Filter, which opportunities to fetch.
     */
    where: opportunitiesWhereUniqueInput
  }


  /**
   * opportunities findUniqueOrThrow
   */
  export type opportunitiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
    /**
     * Filter, which opportunities to fetch.
     */
    where: opportunitiesWhereUniqueInput
  }


  /**
   * opportunities findFirst
   */
  export type opportunitiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
    /**
     * Filter, which opportunities to fetch.
     */
    where?: opportunitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opportunities to fetch.
     */
    orderBy?: opportunitiesOrderByWithRelationInput | opportunitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for opportunities.
     */
    cursor?: opportunitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opportunities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opportunities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of opportunities.
     */
    distinct?: OpportunitiesScalarFieldEnum | OpportunitiesScalarFieldEnum[]
  }


  /**
   * opportunities findFirstOrThrow
   */
  export type opportunitiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
    /**
     * Filter, which opportunities to fetch.
     */
    where?: opportunitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opportunities to fetch.
     */
    orderBy?: opportunitiesOrderByWithRelationInput | opportunitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for opportunities.
     */
    cursor?: opportunitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opportunities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opportunities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of opportunities.
     */
    distinct?: OpportunitiesScalarFieldEnum | OpportunitiesScalarFieldEnum[]
  }


  /**
   * opportunities findMany
   */
  export type opportunitiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
    /**
     * Filter, which opportunities to fetch.
     */
    where?: opportunitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opportunities to fetch.
     */
    orderBy?: opportunitiesOrderByWithRelationInput | opportunitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing opportunities.
     */
    cursor?: opportunitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opportunities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opportunities.
     */
    skip?: number
    distinct?: OpportunitiesScalarFieldEnum | OpportunitiesScalarFieldEnum[]
  }


  /**
   * opportunities create
   */
  export type opportunitiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
    /**
     * The data needed to create a opportunities.
     */
    data: XOR<opportunitiesCreateInput, opportunitiesUncheckedCreateInput>
  }


  /**
   * opportunities createMany
   */
  export type opportunitiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many opportunities.
     */
    data: opportunitiesCreateManyInput | opportunitiesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * opportunities update
   */
  export type opportunitiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
    /**
     * The data needed to update a opportunities.
     */
    data: XOR<opportunitiesUpdateInput, opportunitiesUncheckedUpdateInput>
    /**
     * Choose, which opportunities to update.
     */
    where: opportunitiesWhereUniqueInput
  }


  /**
   * opportunities updateMany
   */
  export type opportunitiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update opportunities.
     */
    data: XOR<opportunitiesUpdateManyMutationInput, opportunitiesUncheckedUpdateManyInput>
    /**
     * Filter which opportunities to update
     */
    where?: opportunitiesWhereInput
  }


  /**
   * opportunities upsert
   */
  export type opportunitiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
    /**
     * The filter to search for the opportunities to update in case it exists.
     */
    where: opportunitiesWhereUniqueInput
    /**
     * In case the opportunities found by the `where` argument doesn't exist, create a new opportunities with this data.
     */
    create: XOR<opportunitiesCreateInput, opportunitiesUncheckedCreateInput>
    /**
     * In case the opportunities was found with the provided `where` argument, update it with this data.
     */
    update: XOR<opportunitiesUpdateInput, opportunitiesUncheckedUpdateInput>
  }


  /**
   * opportunities delete
   */
  export type opportunitiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
    /**
     * Filter which opportunities to delete.
     */
    where: opportunitiesWhereUniqueInput
  }


  /**
   * opportunities deleteMany
   */
  export type opportunitiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which opportunities to delete
     */
    where?: opportunitiesWhereInput
  }


  /**
   * opportunities without action
   */
  export type opportunitiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opportunities
     */
    select?: opportunitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opportunitiesInclude<ExtArgs> | null
  }



  /**
   * Model plans
   */

  export type AggregatePlans = {
    _count: PlansCountAggregateOutputType | null
    _min: PlansMinAggregateOutputType | null
    _max: PlansMaxAggregateOutputType | null
  }

  export type PlansMinAggregateOutputType = {
    id: string | null
    plan_name: string | null
    created_at: Date | null
  }

  export type PlansMaxAggregateOutputType = {
    id: string | null
    plan_name: string | null
    created_at: Date | null
  }

  export type PlansCountAggregateOutputType = {
    id: number
    plan_name: number
    created_at: number
    _all: number
  }


  export type PlansMinAggregateInputType = {
    id?: true
    plan_name?: true
    created_at?: true
  }

  export type PlansMaxAggregateInputType = {
    id?: true
    plan_name?: true
    created_at?: true
  }

  export type PlansCountAggregateInputType = {
    id?: true
    plan_name?: true
    created_at?: true
    _all?: true
  }

  export type PlansAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which plans to aggregate.
     */
    where?: plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of plans to fetch.
     */
    orderBy?: plansOrderByWithRelationInput | plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned plans
    **/
    _count?: true | PlansCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlansMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlansMaxAggregateInputType
  }

  export type GetPlansAggregateType<T extends PlansAggregateArgs> = {
        [P in keyof T & keyof AggregatePlans]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlans[P]>
      : GetScalarType<T[P], AggregatePlans[P]>
  }




  export type plansGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: plansWhereInput
    orderBy?: plansOrderByWithAggregationInput | plansOrderByWithAggregationInput[]
    by: PlansScalarFieldEnum[] | PlansScalarFieldEnum
    having?: plansScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlansCountAggregateInputType | true
    _min?: PlansMinAggregateInputType
    _max?: PlansMaxAggregateInputType
  }

  export type PlansGroupByOutputType = {
    id: string
    plan_name: string
    created_at: Date
    _count: PlansCountAggregateOutputType | null
    _min: PlansMinAggregateOutputType | null
    _max: PlansMaxAggregateOutputType | null
  }

  type GetPlansGroupByPayload<T extends plansGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PlansGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlansGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlansGroupByOutputType[P]>
            : GetScalarType<T[P], PlansGroupByOutputType[P]>
        }
      >
    >


  export type plansSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    plan_name?: boolean
    created_at?: boolean
    account_ai_chat?: boolean | plans$account_ai_chatArgs<ExtArgs>
    account_blog_post_instances?: boolean | plans$account_blog_post_instancesArgs<ExtArgs>
    account_blog_posts?: boolean | plans$account_blog_postsArgs<ExtArgs>
    account_plans?: boolean | plans$account_plansArgs<ExtArgs>
    account_review_generator?: boolean | plans$account_review_generatorArgs<ExtArgs>
    account_social_media?: boolean | plans$account_social_mediaArgs<ExtArgs>
    _count?: boolean | PlansCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["plans"]>

  export type plansSelectScalar = {
    id?: boolean
    plan_name?: boolean
    created_at?: boolean
  }

  export type plansInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    account_ai_chat?: boolean | plans$account_ai_chatArgs<ExtArgs>
    account_blog_post_instances?: boolean | plans$account_blog_post_instancesArgs<ExtArgs>
    account_blog_posts?: boolean | plans$account_blog_postsArgs<ExtArgs>
    account_plans?: boolean | plans$account_plansArgs<ExtArgs>
    account_review_generator?: boolean | plans$account_review_generatorArgs<ExtArgs>
    account_social_media?: boolean | plans$account_social_mediaArgs<ExtArgs>
    _count?: boolean | PlansCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $plansPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "plans"
    objects: {
      account_ai_chat: Prisma.$account_ai_chatPayload<ExtArgs>[]
      account_blog_post_instances: Prisma.$account_blog_post_instancesPayload<ExtArgs>[]
      account_blog_posts: Prisma.$account_blog_postsPayload<ExtArgs>[]
      account_plans: Prisma.$account_plansPayload<ExtArgs>[]
      account_review_generator: Prisma.$account_review_generatorPayload<ExtArgs>[]
      account_social_media: Prisma.$account_social_mediaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      plan_name: string
      created_at: Date
    }, ExtArgs["result"]["plans"]>
    composites: {}
  }


  type plansGetPayload<S extends boolean | null | undefined | plansDefaultArgs> = $Result.GetResult<Prisma.$plansPayload, S>

  type plansCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<plansFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: PlansCountAggregateInputType | true
    }

  export interface plansDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['plans'], meta: { name: 'plans' } }
    /**
     * Find zero or one Plans that matches the filter.
     * @param {plansFindUniqueArgs} args - Arguments to find a Plans
     * @example
     * // Get one Plans
     * const plans = await prisma.plans.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends plansFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, plansFindUniqueArgs<ExtArgs>>
    ): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Plans that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {plansFindUniqueOrThrowArgs} args - Arguments to find a Plans
     * @example
     * // Get one Plans
     * const plans = await prisma.plans.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends plansFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, plansFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Plans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {plansFindFirstArgs} args - Arguments to find a Plans
     * @example
     * // Get one Plans
     * const plans = await prisma.plans.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends plansFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, plansFindFirstArgs<ExtArgs>>
    ): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Plans that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {plansFindFirstOrThrowArgs} args - Arguments to find a Plans
     * @example
     * // Get one Plans
     * const plans = await prisma.plans.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends plansFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, plansFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Plans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {plansFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Plans
     * const plans = await prisma.plans.findMany()
     * 
     * // Get first 10 Plans
     * const plans = await prisma.plans.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const plansWithIdOnly = await prisma.plans.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends plansFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, plansFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Plans.
     * @param {plansCreateArgs} args - Arguments to create a Plans.
     * @example
     * // Create one Plans
     * const Plans = await prisma.plans.create({
     *   data: {
     *     // ... data to create a Plans
     *   }
     * })
     * 
    **/
    create<T extends plansCreateArgs<ExtArgs>>(
      args: SelectSubset<T, plansCreateArgs<ExtArgs>>
    ): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Plans.
     *     @param {plansCreateManyArgs} args - Arguments to create many Plans.
     *     @example
     *     // Create many Plans
     *     const plans = await prisma.plans.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends plansCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, plansCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Plans.
     * @param {plansDeleteArgs} args - Arguments to delete one Plans.
     * @example
     * // Delete one Plans
     * const Plans = await prisma.plans.delete({
     *   where: {
     *     // ... filter to delete one Plans
     *   }
     * })
     * 
    **/
    delete<T extends plansDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, plansDeleteArgs<ExtArgs>>
    ): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Plans.
     * @param {plansUpdateArgs} args - Arguments to update one Plans.
     * @example
     * // Update one Plans
     * const plans = await prisma.plans.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends plansUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, plansUpdateArgs<ExtArgs>>
    ): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Plans.
     * @param {plansDeleteManyArgs} args - Arguments to filter Plans to delete.
     * @example
     * // Delete a few Plans
     * const { count } = await prisma.plans.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends plansDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, plansDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {plansUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Plans
     * const plans = await prisma.plans.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends plansUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, plansUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Plans.
     * @param {plansUpsertArgs} args - Arguments to update or create a Plans.
     * @example
     * // Update or create a Plans
     * const plans = await prisma.plans.upsert({
     *   create: {
     *     // ... data to create a Plans
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Plans we want to update
     *   }
     * })
    **/
    upsert<T extends plansUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, plansUpsertArgs<ExtArgs>>
    ): Prisma__plansClient<$Result.GetResult<Prisma.$plansPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {plansCountArgs} args - Arguments to filter Plans to count.
     * @example
     * // Count the number of Plans
     * const count = await prisma.plans.count({
     *   where: {
     *     // ... the filter for the Plans we want to count
     *   }
     * })
    **/
    count<T extends plansCountArgs>(
      args?: Subset<T, plansCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlansCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlansAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlansAggregateArgs>(args: Subset<T, PlansAggregateArgs>): Prisma.PrismaPromise<GetPlansAggregateType<T>>

    /**
     * Group by Plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {plansGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends plansGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: plansGroupByArgs['orderBy'] }
        : { orderBy?: plansGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, plansGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlansGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the plans model
   */
  readonly fields: plansFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for plans.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__plansClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    account_ai_chat<T extends plans$account_ai_chatArgs<ExtArgs> = {}>(args?: Subset<T, plans$account_ai_chatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_ai_chatPayload<ExtArgs>, T, 'findMany'> | Null>;

    account_blog_post_instances<T extends plans$account_blog_post_instancesArgs<ExtArgs> = {}>(args?: Subset<T, plans$account_blog_post_instancesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_blog_post_instancesPayload<ExtArgs>, T, 'findMany'> | Null>;

    account_blog_posts<T extends plans$account_blog_postsArgs<ExtArgs> = {}>(args?: Subset<T, plans$account_blog_postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_blog_postsPayload<ExtArgs>, T, 'findMany'> | Null>;

    account_plans<T extends plans$account_plansArgs<ExtArgs> = {}>(args?: Subset<T, plans$account_plansArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_plansPayload<ExtArgs>, T, 'findMany'> | Null>;

    account_review_generator<T extends plans$account_review_generatorArgs<ExtArgs> = {}>(args?: Subset<T, plans$account_review_generatorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_review_generatorPayload<ExtArgs>, T, 'findMany'> | Null>;

    account_social_media<T extends plans$account_social_mediaArgs<ExtArgs> = {}>(args?: Subset<T, plans$account_social_mediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$account_social_mediaPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the plans model
   */ 
  interface plansFieldRefs {
    readonly id: FieldRef<"plans", 'String'>
    readonly plan_name: FieldRef<"plans", 'String'>
    readonly created_at: FieldRef<"plans", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * plans findUnique
   */
  export type plansFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the plans
     */
    select?: plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: plansInclude<ExtArgs> | null
    /**
     * Filter, which plans to fetch.
     */
    where: plansWhereUniqueInput
  }


  /**
   * plans findUniqueOrThrow
   */
  export type plansFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the plans
     */
    select?: plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: plansInclude<ExtArgs> | null
    /**
     * Filter, which plans to fetch.
     */
    where: plansWhereUniqueInput
  }


  /**
   * plans findFirst
   */
  export type plansFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the plans
     */
    select?: plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: plansInclude<ExtArgs> | null
    /**
     * Filter, which plans to fetch.
     */
    where?: plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of plans to fetch.
     */
    orderBy?: plansOrderByWithRelationInput | plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for plans.
     */
    cursor?: plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of plans.
     */
    distinct?: PlansScalarFieldEnum | PlansScalarFieldEnum[]
  }


  /**
   * plans findFirstOrThrow
   */
  export type plansFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the plans
     */
    select?: plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: plansInclude<ExtArgs> | null
    /**
     * Filter, which plans to fetch.
     */
    where?: plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of plans to fetch.
     */
    orderBy?: plansOrderByWithRelationInput | plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for plans.
     */
    cursor?: plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of plans.
     */
    distinct?: PlansScalarFieldEnum | PlansScalarFieldEnum[]
  }


  /**
   * plans findMany
   */
  export type plansFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the plans
     */
    select?: plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: plansInclude<ExtArgs> | null
    /**
     * Filter, which plans to fetch.
     */
    where?: plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of plans to fetch.
     */
    orderBy?: plansOrderByWithRelationInput | plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing plans.
     */
    cursor?: plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` plans.
     */
    skip?: number
    distinct?: PlansScalarFieldEnum | PlansScalarFieldEnum[]
  }


  /**
   * plans create
   */
  export type plansCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the plans
     */
    select?: plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: plansInclude<ExtArgs> | null
    /**
     * The data needed to create a plans.
     */
    data: XOR<plansCreateInput, plansUncheckedCreateInput>
  }


  /**
   * plans createMany
   */
  export type plansCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many plans.
     */
    data: plansCreateManyInput | plansCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * plans update
   */
  export type plansUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the plans
     */
    select?: plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: plansInclude<ExtArgs> | null
    /**
     * The data needed to update a plans.
     */
    data: XOR<plansUpdateInput, plansUncheckedUpdateInput>
    /**
     * Choose, which plans to update.
     */
    where: plansWhereUniqueInput
  }


  /**
   * plans updateMany
   */
  export type plansUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update plans.
     */
    data: XOR<plansUpdateManyMutationInput, plansUncheckedUpdateManyInput>
    /**
     * Filter which plans to update
     */
    where?: plansWhereInput
  }


  /**
   * plans upsert
   */
  export type plansUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the plans
     */
    select?: plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: plansInclude<ExtArgs> | null
    /**
     * The filter to search for the plans to update in case it exists.
     */
    where: plansWhereUniqueInput
    /**
     * In case the plans found by the `where` argument doesn't exist, create a new plans with this data.
     */
    create: XOR<plansCreateInput, plansUncheckedCreateInput>
    /**
     * In case the plans was found with the provided `where` argument, update it with this data.
     */
    update: XOR<plansUpdateInput, plansUncheckedUpdateInput>
  }


  /**
   * plans delete
   */
  export type plansDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the plans
     */
    select?: plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: plansInclude<ExtArgs> | null
    /**
     * Filter which plans to delete.
     */
    where: plansWhereUniqueInput
  }


  /**
   * plans deleteMany
   */
  export type plansDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which plans to delete
     */
    where?: plansWhereInput
  }


  /**
   * plans.account_ai_chat
   */
  export type plans$account_ai_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_ai_chat
     */
    select?: account_ai_chatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_ai_chatInclude<ExtArgs> | null
    where?: account_ai_chatWhereInput
    orderBy?: account_ai_chatOrderByWithRelationInput | account_ai_chatOrderByWithRelationInput[]
    cursor?: account_ai_chatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_ai_chatScalarFieldEnum | Account_ai_chatScalarFieldEnum[]
  }


  /**
   * plans.account_blog_post_instances
   */
  export type plans$account_blog_post_instancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_post_instances
     */
    select?: account_blog_post_instancesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_post_instancesInclude<ExtArgs> | null
    where?: account_blog_post_instancesWhereInput
    orderBy?: account_blog_post_instancesOrderByWithRelationInput | account_blog_post_instancesOrderByWithRelationInput[]
    cursor?: account_blog_post_instancesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_blog_post_instancesScalarFieldEnum | Account_blog_post_instancesScalarFieldEnum[]
  }


  /**
   * plans.account_blog_posts
   */
  export type plans$account_blog_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_blog_posts
     */
    select?: account_blog_postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_blog_postsInclude<ExtArgs> | null
    where?: account_blog_postsWhereInput
    orderBy?: account_blog_postsOrderByWithRelationInput | account_blog_postsOrderByWithRelationInput[]
    cursor?: account_blog_postsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_blog_postsScalarFieldEnum | Account_blog_postsScalarFieldEnum[]
  }


  /**
   * plans.account_plans
   */
  export type plans$account_plansArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_plans
     */
    select?: account_plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_plansInclude<ExtArgs> | null
    where?: account_plansWhereInput
    orderBy?: account_plansOrderByWithRelationInput | account_plansOrderByWithRelationInput[]
    cursor?: account_plansWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_plansScalarFieldEnum | Account_plansScalarFieldEnum[]
  }


  /**
   * plans.account_review_generator
   */
  export type plans$account_review_generatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_review_generator
     */
    select?: account_review_generatorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_review_generatorInclude<ExtArgs> | null
    where?: account_review_generatorWhereInput
    orderBy?: account_review_generatorOrderByWithRelationInput | account_review_generatorOrderByWithRelationInput[]
    cursor?: account_review_generatorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_review_generatorScalarFieldEnum | Account_review_generatorScalarFieldEnum[]
  }


  /**
   * plans.account_social_media
   */
  export type plans$account_social_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the account_social_media
     */
    select?: account_social_mediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: account_social_mediaInclude<ExtArgs> | null
    where?: account_social_mediaWhereInput
    orderBy?: account_social_mediaOrderByWithRelationInput | account_social_mediaOrderByWithRelationInput[]
    cursor?: account_social_mediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Account_social_mediaScalarFieldEnum | Account_social_mediaScalarFieldEnum[]
  }


  /**
   * plans without action
   */
  export type plansDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the plans
     */
    select?: plansSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: plansInclude<ExtArgs> | null
  }



  /**
   * Model reps
   */

  export type AggregateReps = {
    _count: RepsCountAggregateOutputType | null
    _min: RepsMinAggregateOutputType | null
    _max: RepsMaxAggregateOutputType | null
  }

  export type RepsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    name: string | null
    role: string | null
    status: string | null
  }

  export type RepsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    name: string | null
    role: string | null
    status: string | null
  }

  export type RepsCountAggregateOutputType = {
    id: number
    created_at: number
    name: number
    role: number
    status: number
    _all: number
  }


  export type RepsMinAggregateInputType = {
    id?: true
    created_at?: true
    name?: true
    role?: true
    status?: true
  }

  export type RepsMaxAggregateInputType = {
    id?: true
    created_at?: true
    name?: true
    role?: true
    status?: true
  }

  export type RepsCountAggregateInputType = {
    id?: true
    created_at?: true
    name?: true
    role?: true
    status?: true
    _all?: true
  }

  export type RepsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reps to aggregate.
     */
    where?: repsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reps to fetch.
     */
    orderBy?: repsOrderByWithRelationInput | repsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: repsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reps
    **/
    _count?: true | RepsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RepsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RepsMaxAggregateInputType
  }

  export type GetRepsAggregateType<T extends RepsAggregateArgs> = {
        [P in keyof T & keyof AggregateReps]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReps[P]>
      : GetScalarType<T[P], AggregateReps[P]>
  }




  export type repsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: repsWhereInput
    orderBy?: repsOrderByWithAggregationInput | repsOrderByWithAggregationInput[]
    by: RepsScalarFieldEnum[] | RepsScalarFieldEnum
    having?: repsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RepsCountAggregateInputType | true
    _min?: RepsMinAggregateInputType
    _max?: RepsMaxAggregateInputType
  }

  export type RepsGroupByOutputType = {
    id: string
    created_at: Date
    name: string
    role: string | null
    status: string
    _count: RepsCountAggregateOutputType | null
    _min: RepsMinAggregateOutputType | null
    _max: RepsMaxAggregateOutputType | null
  }

  type GetRepsGroupByPayload<T extends repsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RepsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RepsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RepsGroupByOutputType[P]>
            : GetScalarType<T[P], RepsGroupByOutputType[P]>
        }
      >
    >


  export type repsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    name?: boolean
    role?: boolean
    status?: boolean
    notes?: boolean | reps$notesArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | RepsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reps"]>

  export type repsSelectScalar = {
    id?: boolean
    created_at?: boolean
    name?: boolean
    role?: boolean
    status?: boolean
  }

  export type repsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notes?: boolean | reps$notesArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | RepsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $repsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reps"
    objects: {
      notes: Prisma.$notesPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      name: string
      role: string | null
      status: string
    }, ExtArgs["result"]["reps"]>
    composites: {}
  }


  type repsGetPayload<S extends boolean | null | undefined | repsDefaultArgs> = $Result.GetResult<Prisma.$repsPayload, S>

  type repsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<repsFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: RepsCountAggregateInputType | true
    }

  export interface repsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reps'], meta: { name: 'reps' } }
    /**
     * Find zero or one Reps that matches the filter.
     * @param {repsFindUniqueArgs} args - Arguments to find a Reps
     * @example
     * // Get one Reps
     * const reps = await prisma.reps.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends repsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, repsFindUniqueArgs<ExtArgs>>
    ): Prisma__repsClient<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Reps that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {repsFindUniqueOrThrowArgs} args - Arguments to find a Reps
     * @example
     * // Get one Reps
     * const reps = await prisma.reps.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends repsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, repsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__repsClient<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Reps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repsFindFirstArgs} args - Arguments to find a Reps
     * @example
     * // Get one Reps
     * const reps = await prisma.reps.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends repsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, repsFindFirstArgs<ExtArgs>>
    ): Prisma__repsClient<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Reps that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repsFindFirstOrThrowArgs} args - Arguments to find a Reps
     * @example
     * // Get one Reps
     * const reps = await prisma.reps.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends repsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, repsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__repsClient<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Reps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reps
     * const reps = await prisma.reps.findMany()
     * 
     * // Get first 10 Reps
     * const reps = await prisma.reps.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const repsWithIdOnly = await prisma.reps.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends repsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, repsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Reps.
     * @param {repsCreateArgs} args - Arguments to create a Reps.
     * @example
     * // Create one Reps
     * const Reps = await prisma.reps.create({
     *   data: {
     *     // ... data to create a Reps
     *   }
     * })
     * 
    **/
    create<T extends repsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, repsCreateArgs<ExtArgs>>
    ): Prisma__repsClient<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Reps.
     *     @param {repsCreateManyArgs} args - Arguments to create many Reps.
     *     @example
     *     // Create many Reps
     *     const reps = await prisma.reps.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends repsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, repsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Reps.
     * @param {repsDeleteArgs} args - Arguments to delete one Reps.
     * @example
     * // Delete one Reps
     * const Reps = await prisma.reps.delete({
     *   where: {
     *     // ... filter to delete one Reps
     *   }
     * })
     * 
    **/
    delete<T extends repsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, repsDeleteArgs<ExtArgs>>
    ): Prisma__repsClient<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Reps.
     * @param {repsUpdateArgs} args - Arguments to update one Reps.
     * @example
     * // Update one Reps
     * const reps = await prisma.reps.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends repsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, repsUpdateArgs<ExtArgs>>
    ): Prisma__repsClient<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Reps.
     * @param {repsDeleteManyArgs} args - Arguments to filter Reps to delete.
     * @example
     * // Delete a few Reps
     * const { count } = await prisma.reps.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends repsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, repsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reps
     * const reps = await prisma.reps.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends repsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, repsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reps.
     * @param {repsUpsertArgs} args - Arguments to update or create a Reps.
     * @example
     * // Update or create a Reps
     * const reps = await prisma.reps.upsert({
     *   create: {
     *     // ... data to create a Reps
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reps we want to update
     *   }
     * })
    **/
    upsert<T extends repsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, repsUpsertArgs<ExtArgs>>
    ): Prisma__repsClient<$Result.GetResult<Prisma.$repsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Reps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repsCountArgs} args - Arguments to filter Reps to count.
     * @example
     * // Count the number of Reps
     * const count = await prisma.reps.count({
     *   where: {
     *     // ... the filter for the Reps we want to count
     *   }
     * })
    **/
    count<T extends repsCountArgs>(
      args?: Subset<T, repsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RepsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RepsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RepsAggregateArgs>(args: Subset<T, RepsAggregateArgs>): Prisma.PrismaPromise<GetRepsAggregateType<T>>

    /**
     * Group by Reps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends repsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: repsGroupByArgs['orderBy'] }
        : { orderBy?: repsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, repsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRepsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reps model
   */
  readonly fields: repsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reps.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__repsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    notes<T extends reps$notesArgs<ExtArgs> = {}>(args?: Subset<T, reps$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notesPayload<ExtArgs>, T, 'findMany'> | Null>;

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the reps model
   */ 
  interface repsFieldRefs {
    readonly id: FieldRef<"reps", 'String'>
    readonly created_at: FieldRef<"reps", 'DateTime'>
    readonly name: FieldRef<"reps", 'String'>
    readonly role: FieldRef<"reps", 'String'>
    readonly status: FieldRef<"reps", 'String'>
  }
    

  // Custom InputTypes

  /**
   * reps findUnique
   */
  export type repsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    /**
     * Filter, which reps to fetch.
     */
    where: repsWhereUniqueInput
  }


  /**
   * reps findUniqueOrThrow
   */
  export type repsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    /**
     * Filter, which reps to fetch.
     */
    where: repsWhereUniqueInput
  }


  /**
   * reps findFirst
   */
  export type repsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    /**
     * Filter, which reps to fetch.
     */
    where?: repsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reps to fetch.
     */
    orderBy?: repsOrderByWithRelationInput | repsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reps.
     */
    cursor?: repsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reps.
     */
    distinct?: RepsScalarFieldEnum | RepsScalarFieldEnum[]
  }


  /**
   * reps findFirstOrThrow
   */
  export type repsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    /**
     * Filter, which reps to fetch.
     */
    where?: repsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reps to fetch.
     */
    orderBy?: repsOrderByWithRelationInput | repsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reps.
     */
    cursor?: repsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reps.
     */
    distinct?: RepsScalarFieldEnum | RepsScalarFieldEnum[]
  }


  /**
   * reps findMany
   */
  export type repsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    /**
     * Filter, which reps to fetch.
     */
    where?: repsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reps to fetch.
     */
    orderBy?: repsOrderByWithRelationInput | repsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reps.
     */
    cursor?: repsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reps.
     */
    skip?: number
    distinct?: RepsScalarFieldEnum | RepsScalarFieldEnum[]
  }


  /**
   * reps create
   */
  export type repsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    /**
     * The data needed to create a reps.
     */
    data: XOR<repsCreateInput, repsUncheckedCreateInput>
  }


  /**
   * reps createMany
   */
  export type repsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reps.
     */
    data: repsCreateManyInput | repsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * reps update
   */
  export type repsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    /**
     * The data needed to update a reps.
     */
    data: XOR<repsUpdateInput, repsUncheckedUpdateInput>
    /**
     * Choose, which reps to update.
     */
    where: repsWhereUniqueInput
  }


  /**
   * reps updateMany
   */
  export type repsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reps.
     */
    data: XOR<repsUpdateManyMutationInput, repsUncheckedUpdateManyInput>
    /**
     * Filter which reps to update
     */
    where?: repsWhereInput
  }


  /**
   * reps upsert
   */
  export type repsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    /**
     * The filter to search for the reps to update in case it exists.
     */
    where: repsWhereUniqueInput
    /**
     * In case the reps found by the `where` argument doesn't exist, create a new reps with this data.
     */
    create: XOR<repsCreateInput, repsUncheckedCreateInput>
    /**
     * In case the reps was found with the provided `where` argument, update it with this data.
     */
    update: XOR<repsUpdateInput, repsUncheckedUpdateInput>
  }


  /**
   * reps delete
   */
  export type repsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
    /**
     * Filter which reps to delete.
     */
    where: repsWhereUniqueInput
  }


  /**
   * reps deleteMany
   */
  export type repsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reps to delete
     */
    where?: repsWhereInput
  }


  /**
   * reps.notes
   */
  export type reps$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notes
     */
    select?: notesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: notesInclude<ExtArgs> | null
    where?: notesWhereInput
    orderBy?: notesOrderByWithRelationInput | notesOrderByWithRelationInput[]
    cursor?: notesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotesScalarFieldEnum | NotesScalarFieldEnum[]
  }


  /**
   * reps without action
   */
  export type repsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reps
     */
    select?: repsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: repsInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Audit_log_entriesScalarFieldEnum: {
    instance_id: 'instance_id',
    id: 'id',
    payload: 'payload',
    created_at: 'created_at',
    ip_address: 'ip_address'
  };

  export type Audit_log_entriesScalarFieldEnum = (typeof Audit_log_entriesScalarFieldEnum)[keyof typeof Audit_log_entriesScalarFieldEnum]


  export const Flow_stateScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    auth_code: 'auth_code',
    code_challenge_method: 'code_challenge_method',
    code_challenge: 'code_challenge',
    provider_type: 'provider_type',
    provider_access_token: 'provider_access_token',
    provider_refresh_token: 'provider_refresh_token',
    created_at: 'created_at',
    updated_at: 'updated_at',
    authentication_method: 'authentication_method'
  };

  export type Flow_stateScalarFieldEnum = (typeof Flow_stateScalarFieldEnum)[keyof typeof Flow_stateScalarFieldEnum]


  export const IdentitiesScalarFieldEnum: {
    provider_id: 'provider_id',
    user_id: 'user_id',
    identity_data: 'identity_data',
    provider: 'provider',
    last_sign_in_at: 'last_sign_in_at',
    created_at: 'created_at',
    updated_at: 'updated_at',
    email: 'email',
    id: 'id'
  };

  export type IdentitiesScalarFieldEnum = (typeof IdentitiesScalarFieldEnum)[keyof typeof IdentitiesScalarFieldEnum]


  export const InstancesScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    raw_base_config: 'raw_base_config',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type InstancesScalarFieldEnum = (typeof InstancesScalarFieldEnum)[keyof typeof InstancesScalarFieldEnum]


  export const Mfa_amr_claimsScalarFieldEnum: {
    session_id: 'session_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    authentication_method: 'authentication_method',
    id: 'id'
  };

  export type Mfa_amr_claimsScalarFieldEnum = (typeof Mfa_amr_claimsScalarFieldEnum)[keyof typeof Mfa_amr_claimsScalarFieldEnum]


  export const Mfa_challengesScalarFieldEnum: {
    id: 'id',
    factor_id: 'factor_id',
    created_at: 'created_at',
    verified_at: 'verified_at',
    ip_address: 'ip_address'
  };

  export type Mfa_challengesScalarFieldEnum = (typeof Mfa_challengesScalarFieldEnum)[keyof typeof Mfa_challengesScalarFieldEnum]


  export const Mfa_factorsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    friendly_name: 'friendly_name',
    factor_type: 'factor_type',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    secret: 'secret'
  };

  export type Mfa_factorsScalarFieldEnum = (typeof Mfa_factorsScalarFieldEnum)[keyof typeof Mfa_factorsScalarFieldEnum]


  export const Refresh_tokensScalarFieldEnum: {
    instance_id: 'instance_id',
    id: 'id',
    token: 'token',
    user_id: 'user_id',
    revoked: 'revoked',
    created_at: 'created_at',
    updated_at: 'updated_at',
    parent: 'parent',
    session_id: 'session_id'
  };

  export type Refresh_tokensScalarFieldEnum = (typeof Refresh_tokensScalarFieldEnum)[keyof typeof Refresh_tokensScalarFieldEnum]


  export const Saml_providersScalarFieldEnum: {
    id: 'id',
    sso_provider_id: 'sso_provider_id',
    entity_id: 'entity_id',
    metadata_xml: 'metadata_xml',
    metadata_url: 'metadata_url',
    attribute_mapping: 'attribute_mapping',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Saml_providersScalarFieldEnum = (typeof Saml_providersScalarFieldEnum)[keyof typeof Saml_providersScalarFieldEnum]


  export const Saml_relay_statesScalarFieldEnum: {
    id: 'id',
    sso_provider_id: 'sso_provider_id',
    request_id: 'request_id',
    for_email: 'for_email',
    redirect_to: 'redirect_to',
    from_ip_address: 'from_ip_address',
    created_at: 'created_at',
    updated_at: 'updated_at',
    flow_state_id: 'flow_state_id'
  };

  export type Saml_relay_statesScalarFieldEnum = (typeof Saml_relay_statesScalarFieldEnum)[keyof typeof Saml_relay_statesScalarFieldEnum]


  export const Schema_migrationsScalarFieldEnum: {
    version: 'version'
  };

  export type Schema_migrationsScalarFieldEnum = (typeof Schema_migrationsScalarFieldEnum)[keyof typeof Schema_migrationsScalarFieldEnum]


  export const SessionsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    factor_id: 'factor_id',
    aal: 'aal',
    not_after: 'not_after',
    refreshed_at: 'refreshed_at',
    user_agent: 'user_agent',
    ip: 'ip',
    tag: 'tag'
  };

  export type SessionsScalarFieldEnum = (typeof SessionsScalarFieldEnum)[keyof typeof SessionsScalarFieldEnum]


  export const Sso_domainsScalarFieldEnum: {
    id: 'id',
    sso_provider_id: 'sso_provider_id',
    domain: 'domain',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Sso_domainsScalarFieldEnum = (typeof Sso_domainsScalarFieldEnum)[keyof typeof Sso_domainsScalarFieldEnum]


  export const Sso_providersScalarFieldEnum: {
    id: 'id',
    resource_id: 'resource_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Sso_providersScalarFieldEnum = (typeof Sso_providersScalarFieldEnum)[keyof typeof Sso_providersScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    instance_id: 'instance_id',
    id: 'id',
    aud: 'aud',
    role: 'role',
    email: 'email',
    encrypted_password: 'encrypted_password',
    email_confirmed_at: 'email_confirmed_at',
    invited_at: 'invited_at',
    confirmation_token: 'confirmation_token',
    confirmation_sent_at: 'confirmation_sent_at',
    recovery_token: 'recovery_token',
    recovery_sent_at: 'recovery_sent_at',
    email_change_token_new: 'email_change_token_new',
    email_change: 'email_change',
    email_change_sent_at: 'email_change_sent_at',
    last_sign_in_at: 'last_sign_in_at',
    raw_app_meta_data: 'raw_app_meta_data',
    raw_user_meta_data: 'raw_user_meta_data',
    is_super_admin: 'is_super_admin',
    created_at: 'created_at',
    updated_at: 'updated_at',
    phone: 'phone',
    phone_confirmed_at: 'phone_confirmed_at',
    phone_change: 'phone_change',
    phone_change_token: 'phone_change_token',
    phone_change_sent_at: 'phone_change_sent_at',
    confirmed_at: 'confirmed_at',
    email_change_token_current: 'email_change_token_current',
    email_change_confirm_status: 'email_change_confirm_status',
    banned_until: 'banned_until',
    reauthentication_token: 'reauthentication_token',
    reauthentication_sent_at: 'reauthentication_sent_at',
    is_sso_user: 'is_sso_user',
    deleted_at: 'deleted_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Account_ai_chatScalarFieldEnum: {
    account_id: 'account_id',
    plan_id: 'plan_id',
    created_at: 'created_at'
  };

  export type Account_ai_chatScalarFieldEnum = (typeof Account_ai_chatScalarFieldEnum)[keyof typeof Account_ai_chatScalarFieldEnum]


  export const Account_blog_post_instancesScalarFieldEnum: {
    blog_post_id: 'blog_post_id',
    account_id: 'account_id',
    plan_id: 'plan_id',
    post_content: 'post_content',
    created_at: 'created_at'
  };

  export type Account_blog_post_instancesScalarFieldEnum = (typeof Account_blog_post_instancesScalarFieldEnum)[keyof typeof Account_blog_post_instancesScalarFieldEnum]


  export const Account_blog_postsScalarFieldEnum: {
    account_id: 'account_id',
    plan_id: 'plan_id',
    created_at: 'created_at'
  };

  export type Account_blog_postsScalarFieldEnum = (typeof Account_blog_postsScalarFieldEnum)[keyof typeof Account_blog_postsScalarFieldEnum]


  export const Account_plansScalarFieldEnum: {
    account_id: 'account_id',
    plan_id: 'plan_id',
    created_at: 'created_at'
  };

  export type Account_plansScalarFieldEnum = (typeof Account_plansScalarFieldEnum)[keyof typeof Account_plansScalarFieldEnum]


  export const Account_review_generatorScalarFieldEnum: {
    account_id: 'account_id',
    plan_id: 'plan_id',
    created_at: 'created_at'
  };

  export type Account_review_generatorScalarFieldEnum = (typeof Account_review_generatorScalarFieldEnum)[keyof typeof Account_review_generatorScalarFieldEnum]


  export const Account_social_mediaScalarFieldEnum: {
    account_id: 'account_id',
    plan_id: 'plan_id',
    created_at: 'created_at'
  };

  export type Account_social_mediaScalarFieldEnum = (typeof Account_social_mediaScalarFieldEnum)[keyof typeof Account_social_mediaScalarFieldEnum]


  export const AccountsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    stage: 'stage',
    active: 'active',
    customer_record_id: 'customer_record_id'
  };

  export type AccountsScalarFieldEnum = (typeof AccountsScalarFieldEnum)[keyof typeof AccountsScalarFieldEnum]


  export const CommunicationsScalarFieldEnum: {
    id: 'id',
    customer_record_id: 'customer_record_id',
    type: 'type',
    created_at: 'created_at',
    marketing_campaign_id: 'marketing_campaign_id'
  };

  export type CommunicationsScalarFieldEnum = (typeof CommunicationsScalarFieldEnum)[keyof typeof CommunicationsScalarFieldEnum]


  export const Communications_emailsScalarFieldEnum: {
    id: 'id',
    communications_id: 'communications_id',
    created_at: 'created_at',
    email_id: 'email_id'
  };

  export type Communications_emailsScalarFieldEnum = (typeof Communications_emailsScalarFieldEnum)[keyof typeof Communications_emailsScalarFieldEnum]


  export const Communications_emails_status_updatesScalarFieldEnum: {
    id: 'id',
    communications_emails: 'communications_emails',
    status: 'status',
    created_at: 'created_at'
  };

  export type Communications_emails_status_updatesScalarFieldEnum = (typeof Communications_emails_status_updatesScalarFieldEnum)[keyof typeof Communications_emails_status_updatesScalarFieldEnum]


  export const Communications_textsScalarFieldEnum: {
    id: 'id',
    communications_id: 'communications_id',
    status: 'status',
    created_at: 'created_at'
  };

  export type Communications_textsScalarFieldEnum = (typeof Communications_textsScalarFieldEnum)[keyof typeof Communications_textsScalarFieldEnum]


  export const Contact_info_emailsScalarFieldEnum: {
    id: 'id',
    contact_id: 'contact_id',
    value: 'value',
    priority: 'priority',
    created_at: 'created_at',
    email_id: 'email_id'
  };

  export type Contact_info_emailsScalarFieldEnum = (typeof Contact_info_emailsScalarFieldEnum)[keyof typeof Contact_info_emailsScalarFieldEnum]


  export const Contact_info_phonesScalarFieldEnum: {
    id: 'id',
    contact_id: 'contact_id',
    type: 'type',
    value: 'value',
    priority: 'priority',
    created_at: 'created_at'
  };

  export type Contact_info_phonesScalarFieldEnum = (typeof Contact_info_phonesScalarFieldEnum)[keyof typeof Contact_info_phonesScalarFieldEnum]


  export const ContactsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    position: 'position',
    priority: 'priority',
    created_at: 'created_at',
    customer_record_id: 'customer_record_id'
  };

  export type ContactsScalarFieldEnum = (typeof ContactsScalarFieldEnum)[keyof typeof ContactsScalarFieldEnum]


  export const Customer_recordsScalarFieldEnum: {
    id: 'id',
    business_name: 'business_name',
    active: 'active',
    stage: 'stage',
    created_at: 'created_at',
    business_owner_name: 'business_owner_name'
  };

  export type Customer_recordsScalarFieldEnum = (typeof Customer_recordsScalarFieldEnum)[keyof typeof Customer_recordsScalarFieldEnum]


  export const Email_templatesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    category: 'category',
    created_at: 'created_at'
  };

  export type Email_templatesScalarFieldEnum = (typeof Email_templatesScalarFieldEnum)[keyof typeof Email_templatesScalarFieldEnum]


  export const LeadsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    stage: 'stage',
    active: 'active',
    customer_record_id: 'customer_record_id'
  };

  export type LeadsScalarFieldEnum = (typeof LeadsScalarFieldEnum)[keyof typeof LeadsScalarFieldEnum]


  export const Marketing_campaignsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at'
  };

  export type Marketing_campaignsScalarFieldEnum = (typeof Marketing_campaignsScalarFieldEnum)[keyof typeof Marketing_campaignsScalarFieldEnum]


  export const NotesScalarFieldEnum: {
    id: 'id',
    author: 'author',
    note: 'note',
    created_at: 'created_at',
    customer_record_id: 'customer_record_id'
  };

  export type NotesScalarFieldEnum = (typeof NotesScalarFieldEnum)[keyof typeof NotesScalarFieldEnum]


  export const OpportunitiesScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    stage: 'stage',
    active: 'active',
    customer_record_id: 'customer_record_id'
  };

  export type OpportunitiesScalarFieldEnum = (typeof OpportunitiesScalarFieldEnum)[keyof typeof OpportunitiesScalarFieldEnum]


  export const PlansScalarFieldEnum: {
    id: 'id',
    plan_name: 'plan_name',
    created_at: 'created_at'
  };

  export type PlansScalarFieldEnum = (typeof PlansScalarFieldEnum)[keyof typeof PlansScalarFieldEnum]


  export const RepsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    name: 'name',
    role: 'role',
    status: 'status'
  };

  export type RepsScalarFieldEnum = (typeof RepsScalarFieldEnum)[keyof typeof RepsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'code_challenge_method'
   */
  export type Enumcode_challenge_methodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'code_challenge_method'>
    


  /**
   * Reference to a field of type 'code_challenge_method[]'
   */
  export type ListEnumcode_challenge_methodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'code_challenge_method[]'>
    


  /**
   * Reference to a field of type 'factor_type'
   */
  export type Enumfactor_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_type'>
    


  /**
   * Reference to a field of type 'factor_type[]'
   */
  export type ListEnumfactor_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_type[]'>
    


  /**
   * Reference to a field of type 'factor_status'
   */
  export type Enumfactor_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_status'>
    


  /**
   * Reference to a field of type 'factor_status[]'
   */
  export type ListEnumfactor_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_status[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'aal_level'
   */
  export type Enumaal_levelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'aal_level'>
    


  /**
   * Reference to a field of type 'aal_level[]'
   */
  export type ListEnumaal_levelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'aal_level[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type audit_log_entriesWhereInput = {
    AND?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    OR?: audit_log_entriesWhereInput[]
    NOT?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    instance_id?: UuidNullableFilter<"audit_log_entries"> | string | null
    id?: UuidFilter<"audit_log_entries"> | string
    payload?: JsonNullableFilter<"audit_log_entries">
    created_at?: DateTimeNullableFilter<"audit_log_entries"> | Date | string | null
    ip_address?: StringFilter<"audit_log_entries"> | string
  }

  export type audit_log_entriesOrderByWithRelationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    payload?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
  }

  export type audit_log_entriesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    OR?: audit_log_entriesWhereInput[]
    NOT?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    instance_id?: UuidNullableFilter<"audit_log_entries"> | string | null
    payload?: JsonNullableFilter<"audit_log_entries">
    created_at?: DateTimeNullableFilter<"audit_log_entries"> | Date | string | null
    ip_address?: StringFilter<"audit_log_entries"> | string
  }, "id">

  export type audit_log_entriesOrderByWithAggregationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    payload?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
    _count?: audit_log_entriesCountOrderByAggregateInput
    _max?: audit_log_entriesMaxOrderByAggregateInput
    _min?: audit_log_entriesMinOrderByAggregateInput
  }

  export type audit_log_entriesScalarWhereWithAggregatesInput = {
    AND?: audit_log_entriesScalarWhereWithAggregatesInput | audit_log_entriesScalarWhereWithAggregatesInput[]
    OR?: audit_log_entriesScalarWhereWithAggregatesInput[]
    NOT?: audit_log_entriesScalarWhereWithAggregatesInput | audit_log_entriesScalarWhereWithAggregatesInput[]
    instance_id?: UuidNullableWithAggregatesFilter<"audit_log_entries"> | string | null
    id?: UuidWithAggregatesFilter<"audit_log_entries"> | string
    payload?: JsonNullableWithAggregatesFilter<"audit_log_entries">
    created_at?: DateTimeNullableWithAggregatesFilter<"audit_log_entries"> | Date | string | null
    ip_address?: StringWithAggregatesFilter<"audit_log_entries"> | string
  }

  export type flow_stateWhereInput = {
    AND?: flow_stateWhereInput | flow_stateWhereInput[]
    OR?: flow_stateWhereInput[]
    NOT?: flow_stateWhereInput | flow_stateWhereInput[]
    id?: UuidFilter<"flow_state"> | string
    user_id?: UuidNullableFilter<"flow_state"> | string | null
    auth_code?: StringFilter<"flow_state"> | string
    code_challenge_method?: Enumcode_challenge_methodFilter<"flow_state"> | $Enums.code_challenge_method
    code_challenge?: StringFilter<"flow_state"> | string
    provider_type?: StringFilter<"flow_state"> | string
    provider_access_token?: StringNullableFilter<"flow_state"> | string | null
    provider_refresh_token?: StringNullableFilter<"flow_state"> | string | null
    created_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    authentication_method?: StringFilter<"flow_state"> | string
    saml_relay_states?: Saml_relay_statesListRelationFilter
  }

  export type flow_stateOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrderInput | SortOrder
    provider_refresh_token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    authentication_method?: SortOrder
    saml_relay_states?: saml_relay_statesOrderByRelationAggregateInput
  }

  export type flow_stateWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: flow_stateWhereInput | flow_stateWhereInput[]
    OR?: flow_stateWhereInput[]
    NOT?: flow_stateWhereInput | flow_stateWhereInput[]
    user_id?: UuidNullableFilter<"flow_state"> | string | null
    auth_code?: StringFilter<"flow_state"> | string
    code_challenge_method?: Enumcode_challenge_methodFilter<"flow_state"> | $Enums.code_challenge_method
    code_challenge?: StringFilter<"flow_state"> | string
    provider_type?: StringFilter<"flow_state"> | string
    provider_access_token?: StringNullableFilter<"flow_state"> | string | null
    provider_refresh_token?: StringNullableFilter<"flow_state"> | string | null
    created_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    authentication_method?: StringFilter<"flow_state"> | string
    saml_relay_states?: Saml_relay_statesListRelationFilter
  }, "id">

  export type flow_stateOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrderInput | SortOrder
    provider_refresh_token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    authentication_method?: SortOrder
    _count?: flow_stateCountOrderByAggregateInput
    _max?: flow_stateMaxOrderByAggregateInput
    _min?: flow_stateMinOrderByAggregateInput
  }

  export type flow_stateScalarWhereWithAggregatesInput = {
    AND?: flow_stateScalarWhereWithAggregatesInput | flow_stateScalarWhereWithAggregatesInput[]
    OR?: flow_stateScalarWhereWithAggregatesInput[]
    NOT?: flow_stateScalarWhereWithAggregatesInput | flow_stateScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"flow_state"> | string
    user_id?: UuidNullableWithAggregatesFilter<"flow_state"> | string | null
    auth_code?: StringWithAggregatesFilter<"flow_state"> | string
    code_challenge_method?: Enumcode_challenge_methodWithAggregatesFilter<"flow_state"> | $Enums.code_challenge_method
    code_challenge?: StringWithAggregatesFilter<"flow_state"> | string
    provider_type?: StringWithAggregatesFilter<"flow_state"> | string
    provider_access_token?: StringNullableWithAggregatesFilter<"flow_state"> | string | null
    provider_refresh_token?: StringNullableWithAggregatesFilter<"flow_state"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"flow_state"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"flow_state"> | Date | string | null
    authentication_method?: StringWithAggregatesFilter<"flow_state"> | string
  }

  export type identitiesWhereInput = {
    AND?: identitiesWhereInput | identitiesWhereInput[]
    OR?: identitiesWhereInput[]
    NOT?: identitiesWhereInput | identitiesWhereInput[]
    provider_id?: StringFilter<"identities"> | string
    user_id?: UuidFilter<"identities"> | string
    identity_data?: JsonFilter<"identities">
    provider?: StringFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    email?: StringNullableFilter<"identities"> | string | null
    id?: UuidFilter<"identities"> | string
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type identitiesOrderByWithRelationInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    identity_data?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    id?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type identitiesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_id_provider?: identitiesProvider_idProviderCompoundUniqueInput
    AND?: identitiesWhereInput | identitiesWhereInput[]
    OR?: identitiesWhereInput[]
    NOT?: identitiesWhereInput | identitiesWhereInput[]
    provider_id?: StringFilter<"identities"> | string
    user_id?: UuidFilter<"identities"> | string
    identity_data?: JsonFilter<"identities">
    provider?: StringFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    email?: StringNullableFilter<"identities"> | string | null
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id" | "provider_id_provider">

  export type identitiesOrderByWithAggregationInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    identity_data?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    id?: SortOrder
    _count?: identitiesCountOrderByAggregateInput
    _max?: identitiesMaxOrderByAggregateInput
    _min?: identitiesMinOrderByAggregateInput
  }

  export type identitiesScalarWhereWithAggregatesInput = {
    AND?: identitiesScalarWhereWithAggregatesInput | identitiesScalarWhereWithAggregatesInput[]
    OR?: identitiesScalarWhereWithAggregatesInput[]
    NOT?: identitiesScalarWhereWithAggregatesInput | identitiesScalarWhereWithAggregatesInput[]
    provider_id?: StringWithAggregatesFilter<"identities"> | string
    user_id?: UuidWithAggregatesFilter<"identities"> | string
    identity_data?: JsonWithAggregatesFilter<"identities">
    provider?: StringWithAggregatesFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableWithAggregatesFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"identities"> | Date | string | null
    email?: StringNullableWithAggregatesFilter<"identities"> | string | null
    id?: UuidWithAggregatesFilter<"identities"> | string
  }

  export type instancesWhereInput = {
    AND?: instancesWhereInput | instancesWhereInput[]
    OR?: instancesWhereInput[]
    NOT?: instancesWhereInput | instancesWhereInput[]
    id?: UuidFilter<"instances"> | string
    uuid?: UuidNullableFilter<"instances"> | string | null
    raw_base_config?: StringNullableFilter<"instances"> | string | null
    created_at?: DateTimeNullableFilter<"instances"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"instances"> | Date | string | null
  }

  export type instancesOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrderInput | SortOrder
    raw_base_config?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
  }

  export type instancesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: instancesWhereInput | instancesWhereInput[]
    OR?: instancesWhereInput[]
    NOT?: instancesWhereInput | instancesWhereInput[]
    uuid?: UuidNullableFilter<"instances"> | string | null
    raw_base_config?: StringNullableFilter<"instances"> | string | null
    created_at?: DateTimeNullableFilter<"instances"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"instances"> | Date | string | null
  }, "id">

  export type instancesOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrderInput | SortOrder
    raw_base_config?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: instancesCountOrderByAggregateInput
    _max?: instancesMaxOrderByAggregateInput
    _min?: instancesMinOrderByAggregateInput
  }

  export type instancesScalarWhereWithAggregatesInput = {
    AND?: instancesScalarWhereWithAggregatesInput | instancesScalarWhereWithAggregatesInput[]
    OR?: instancesScalarWhereWithAggregatesInput[]
    NOT?: instancesScalarWhereWithAggregatesInput | instancesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"instances"> | string
    uuid?: UuidNullableWithAggregatesFilter<"instances"> | string | null
    raw_base_config?: StringNullableWithAggregatesFilter<"instances"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"instances"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"instances"> | Date | string | null
  }

  export type mfa_amr_claimsWhereInput = {
    AND?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    OR?: mfa_amr_claimsWhereInput[]
    NOT?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    session_id?: UuidFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringFilter<"mfa_amr_claims"> | string
    id?: UuidFilter<"mfa_amr_claims"> | string
    sessions?: XOR<SessionsRelationFilter, sessionsWhereInput>
  }

  export type mfa_amr_claimsOrderByWithRelationInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
    sessions?: sessionsOrderByWithRelationInput
  }

  export type mfa_amr_claimsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    session_id_authentication_method?: mfa_amr_claimsSession_idAuthentication_methodCompoundUniqueInput
    AND?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    OR?: mfa_amr_claimsWhereInput[]
    NOT?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    session_id?: UuidFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringFilter<"mfa_amr_claims"> | string
    sessions?: XOR<SessionsRelationFilter, sessionsWhereInput>
  }, "id" | "session_id_authentication_method">

  export type mfa_amr_claimsOrderByWithAggregationInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
    _count?: mfa_amr_claimsCountOrderByAggregateInput
    _max?: mfa_amr_claimsMaxOrderByAggregateInput
    _min?: mfa_amr_claimsMinOrderByAggregateInput
  }

  export type mfa_amr_claimsScalarWhereWithAggregatesInput = {
    AND?: mfa_amr_claimsScalarWhereWithAggregatesInput | mfa_amr_claimsScalarWhereWithAggregatesInput[]
    OR?: mfa_amr_claimsScalarWhereWithAggregatesInput[]
    NOT?: mfa_amr_claimsScalarWhereWithAggregatesInput | mfa_amr_claimsScalarWhereWithAggregatesInput[]
    session_id?: UuidWithAggregatesFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeWithAggregatesFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringWithAggregatesFilter<"mfa_amr_claims"> | string
    id?: UuidWithAggregatesFilter<"mfa_amr_claims"> | string
  }

  export type mfa_challengesWhereInput = {
    AND?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    OR?: mfa_challengesWhereInput[]
    NOT?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    id?: UuidFilter<"mfa_challenges"> | string
    factor_id?: UuidFilter<"mfa_challenges"> | string
    created_at?: DateTimeFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringFilter<"mfa_challenges"> | string
    mfa_factors?: XOR<Mfa_factorsRelationFilter, mfa_factorsWhereInput>
  }

  export type mfa_challengesOrderByWithRelationInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
    mfa_factors?: mfa_factorsOrderByWithRelationInput
  }

  export type mfa_challengesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    OR?: mfa_challengesWhereInput[]
    NOT?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    factor_id?: UuidFilter<"mfa_challenges"> | string
    created_at?: DateTimeFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringFilter<"mfa_challenges"> | string
    mfa_factors?: XOR<Mfa_factorsRelationFilter, mfa_factorsWhereInput>
  }, "id">

  export type mfa_challengesOrderByWithAggregationInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
    _count?: mfa_challengesCountOrderByAggregateInput
    _max?: mfa_challengesMaxOrderByAggregateInput
    _min?: mfa_challengesMinOrderByAggregateInput
  }

  export type mfa_challengesScalarWhereWithAggregatesInput = {
    AND?: mfa_challengesScalarWhereWithAggregatesInput | mfa_challengesScalarWhereWithAggregatesInput[]
    OR?: mfa_challengesScalarWhereWithAggregatesInput[]
    NOT?: mfa_challengesScalarWhereWithAggregatesInput | mfa_challengesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"mfa_challenges"> | string
    factor_id?: UuidWithAggregatesFilter<"mfa_challenges"> | string
    created_at?: DateTimeWithAggregatesFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableWithAggregatesFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringWithAggregatesFilter<"mfa_challenges"> | string
  }

  export type mfa_factorsWhereInput = {
    AND?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    OR?: mfa_factorsWhereInput[]
    NOT?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    id?: UuidFilter<"mfa_factors"> | string
    user_id?: UuidFilter<"mfa_factors"> | string
    friendly_name?: StringNullableFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeFilter<"mfa_factors"> | Date | string
    secret?: StringNullableFilter<"mfa_factors"> | string | null
    mfa_challenges?: Mfa_challengesListRelationFilter
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type mfa_factorsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrderInput | SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrderInput | SortOrder
    mfa_challenges?: mfa_challengesOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type mfa_factorsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    OR?: mfa_factorsWhereInput[]
    NOT?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    user_id?: UuidFilter<"mfa_factors"> | string
    friendly_name?: StringNullableFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeFilter<"mfa_factors"> | Date | string
    secret?: StringNullableFilter<"mfa_factors"> | string | null
    mfa_challenges?: Mfa_challengesListRelationFilter
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id">

  export type mfa_factorsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrderInput | SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrderInput | SortOrder
    _count?: mfa_factorsCountOrderByAggregateInput
    _max?: mfa_factorsMaxOrderByAggregateInput
    _min?: mfa_factorsMinOrderByAggregateInput
  }

  export type mfa_factorsScalarWhereWithAggregatesInput = {
    AND?: mfa_factorsScalarWhereWithAggregatesInput | mfa_factorsScalarWhereWithAggregatesInput[]
    OR?: mfa_factorsScalarWhereWithAggregatesInput[]
    NOT?: mfa_factorsScalarWhereWithAggregatesInput | mfa_factorsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"mfa_factors"> | string
    user_id?: UuidWithAggregatesFilter<"mfa_factors"> | string
    friendly_name?: StringNullableWithAggregatesFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeWithAggregatesFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusWithAggregatesFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeWithAggregatesFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"mfa_factors"> | Date | string
    secret?: StringNullableWithAggregatesFilter<"mfa_factors"> | string | null
  }

  export type refresh_tokensWhereInput = {
    AND?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    OR?: refresh_tokensWhereInput[]
    NOT?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    instance_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    id?: BigIntFilter<"refresh_tokens"> | bigint | number
    token?: StringNullableFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    sessions?: XOR<SessionsNullableRelationFilter, sessionsWhereInput> | null
  }

  export type refresh_tokensOrderByWithRelationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    token?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    revoked?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    parent?: SortOrderInput | SortOrder
    session_id?: SortOrderInput | SortOrder
    sessions?: sessionsOrderByWithRelationInput
  }

  export type refresh_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    token?: string
    AND?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    OR?: refresh_tokensWhereInput[]
    NOT?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    instance_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    sessions?: XOR<SessionsNullableRelationFilter, sessionsWhereInput> | null
  }, "id" | "token">

  export type refresh_tokensOrderByWithAggregationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    token?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    revoked?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    parent?: SortOrderInput | SortOrder
    session_id?: SortOrderInput | SortOrder
    _count?: refresh_tokensCountOrderByAggregateInput
    _avg?: refresh_tokensAvgOrderByAggregateInput
    _max?: refresh_tokensMaxOrderByAggregateInput
    _min?: refresh_tokensMinOrderByAggregateInput
    _sum?: refresh_tokensSumOrderByAggregateInput
  }

  export type refresh_tokensScalarWhereWithAggregatesInput = {
    AND?: refresh_tokensScalarWhereWithAggregatesInput | refresh_tokensScalarWhereWithAggregatesInput[]
    OR?: refresh_tokensScalarWhereWithAggregatesInput[]
    NOT?: refresh_tokensScalarWhereWithAggregatesInput | refresh_tokensScalarWhereWithAggregatesInput[]
    instance_id?: UuidNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    id?: BigIntWithAggregatesFilter<"refresh_tokens"> | bigint | number
    token?: StringNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableWithAggregatesFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableWithAggregatesFilter<"refresh_tokens"> | string | null
  }

  export type saml_providersWhereInput = {
    AND?: saml_providersWhereInput | saml_providersWhereInput[]
    OR?: saml_providersWhereInput[]
    NOT?: saml_providersWhereInput | saml_providersWhereInput[]
    id?: UuidFilter<"saml_providers"> | string
    sso_provider_id?: UuidFilter<"saml_providers"> | string
    entity_id?: StringFilter<"saml_providers"> | string
    metadata_xml?: StringFilter<"saml_providers"> | string
    metadata_url?: StringNullableFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableFilter<"saml_providers">
    created_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    sso_providers?: XOR<Sso_providersRelationFilter, sso_providersWhereInput>
  }

  export type saml_providersOrderByWithRelationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrderInput | SortOrder
    attribute_mapping?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    sso_providers?: sso_providersOrderByWithRelationInput
  }

  export type saml_providersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    entity_id?: string
    AND?: saml_providersWhereInput | saml_providersWhereInput[]
    OR?: saml_providersWhereInput[]
    NOT?: saml_providersWhereInput | saml_providersWhereInput[]
    sso_provider_id?: UuidFilter<"saml_providers"> | string
    metadata_xml?: StringFilter<"saml_providers"> | string
    metadata_url?: StringNullableFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableFilter<"saml_providers">
    created_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    sso_providers?: XOR<Sso_providersRelationFilter, sso_providersWhereInput>
  }, "id" | "entity_id">

  export type saml_providersOrderByWithAggregationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrderInput | SortOrder
    attribute_mapping?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: saml_providersCountOrderByAggregateInput
    _max?: saml_providersMaxOrderByAggregateInput
    _min?: saml_providersMinOrderByAggregateInput
  }

  export type saml_providersScalarWhereWithAggregatesInput = {
    AND?: saml_providersScalarWhereWithAggregatesInput | saml_providersScalarWhereWithAggregatesInput[]
    OR?: saml_providersScalarWhereWithAggregatesInput[]
    NOT?: saml_providersScalarWhereWithAggregatesInput | saml_providersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"saml_providers"> | string
    sso_provider_id?: UuidWithAggregatesFilter<"saml_providers"> | string
    entity_id?: StringWithAggregatesFilter<"saml_providers"> | string
    metadata_xml?: StringWithAggregatesFilter<"saml_providers"> | string
    metadata_url?: StringNullableWithAggregatesFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableWithAggregatesFilter<"saml_providers">
    created_at?: DateTimeNullableWithAggregatesFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"saml_providers"> | Date | string | null
  }

  export type saml_relay_statesWhereInput = {
    AND?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    OR?: saml_relay_statesWhereInput[]
    NOT?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    id?: UuidFilter<"saml_relay_states"> | string
    sso_provider_id?: UuidFilter<"saml_relay_states"> | string
    request_id?: StringFilter<"saml_relay_states"> | string
    for_email?: StringNullableFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableFilter<"saml_relay_states"> | string | null
    from_ip_address?: StringNullableFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableFilter<"saml_relay_states"> | string | null
    flow_state?: XOR<Flow_stateNullableRelationFilter, flow_stateWhereInput> | null
    sso_providers?: XOR<Sso_providersRelationFilter, sso_providersWhereInput>
  }

  export type saml_relay_statesOrderByWithRelationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrderInput | SortOrder
    redirect_to?: SortOrderInput | SortOrder
    from_ip_address?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    flow_state_id?: SortOrderInput | SortOrder
    flow_state?: flow_stateOrderByWithRelationInput
    sso_providers?: sso_providersOrderByWithRelationInput
  }

  export type saml_relay_statesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    OR?: saml_relay_statesWhereInput[]
    NOT?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    sso_provider_id?: UuidFilter<"saml_relay_states"> | string
    request_id?: StringFilter<"saml_relay_states"> | string
    for_email?: StringNullableFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableFilter<"saml_relay_states"> | string | null
    from_ip_address?: StringNullableFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableFilter<"saml_relay_states"> | string | null
    flow_state?: XOR<Flow_stateNullableRelationFilter, flow_stateWhereInput> | null
    sso_providers?: XOR<Sso_providersRelationFilter, sso_providersWhereInput>
  }, "id">

  export type saml_relay_statesOrderByWithAggregationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrderInput | SortOrder
    redirect_to?: SortOrderInput | SortOrder
    from_ip_address?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    flow_state_id?: SortOrderInput | SortOrder
    _count?: saml_relay_statesCountOrderByAggregateInput
    _max?: saml_relay_statesMaxOrderByAggregateInput
    _min?: saml_relay_statesMinOrderByAggregateInput
  }

  export type saml_relay_statesScalarWhereWithAggregatesInput = {
    AND?: saml_relay_statesScalarWhereWithAggregatesInput | saml_relay_statesScalarWhereWithAggregatesInput[]
    OR?: saml_relay_statesScalarWhereWithAggregatesInput[]
    NOT?: saml_relay_statesScalarWhereWithAggregatesInput | saml_relay_statesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"saml_relay_states"> | string
    sso_provider_id?: UuidWithAggregatesFilter<"saml_relay_states"> | string
    request_id?: StringWithAggregatesFilter<"saml_relay_states"> | string
    for_email?: StringNullableWithAggregatesFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableWithAggregatesFilter<"saml_relay_states"> | string | null
    from_ip_address?: StringNullableWithAggregatesFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableWithAggregatesFilter<"saml_relay_states"> | string | null
  }

  export type schema_migrationsWhereInput = {
    AND?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    OR?: schema_migrationsWhereInput[]
    NOT?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    version?: StringFilter<"schema_migrations"> | string
  }

  export type schema_migrationsOrderByWithRelationInput = {
    version?: SortOrder
  }

  export type schema_migrationsWhereUniqueInput = Prisma.AtLeast<{
    version?: string
    AND?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    OR?: schema_migrationsWhereInput[]
    NOT?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
  }, "version">

  export type schema_migrationsOrderByWithAggregationInput = {
    version?: SortOrder
    _count?: schema_migrationsCountOrderByAggregateInput
    _max?: schema_migrationsMaxOrderByAggregateInput
    _min?: schema_migrationsMinOrderByAggregateInput
  }

  export type schema_migrationsScalarWhereWithAggregatesInput = {
    AND?: schema_migrationsScalarWhereWithAggregatesInput | schema_migrationsScalarWhereWithAggregatesInput[]
    OR?: schema_migrationsScalarWhereWithAggregatesInput[]
    NOT?: schema_migrationsScalarWhereWithAggregatesInput | schema_migrationsScalarWhereWithAggregatesInput[]
    version?: StringWithAggregatesFilter<"schema_migrations"> | string
  }

  export type sessionsWhereInput = {
    AND?: sessionsWhereInput | sessionsWhereInput[]
    OR?: sessionsWhereInput[]
    NOT?: sessionsWhereInput | sessionsWhereInput[]
    id?: UuidFilter<"sessions"> | string
    user_id?: UuidFilter<"sessions"> | string
    created_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableFilter<"sessions"> | string | null
    ip?: StringNullableFilter<"sessions"> | string | null
    tag?: StringNullableFilter<"sessions"> | string | null
    mfa_amr_claims?: Mfa_amr_claimsListRelationFilter
    refresh_tokens?: Refresh_tokensListRelationFilter
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type sessionsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    factor_id?: SortOrderInput | SortOrder
    aal?: SortOrderInput | SortOrder
    not_after?: SortOrderInput | SortOrder
    refreshed_at?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    ip?: SortOrderInput | SortOrder
    tag?: SortOrderInput | SortOrder
    mfa_amr_claims?: mfa_amr_claimsOrderByRelationAggregateInput
    refresh_tokens?: refresh_tokensOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type sessionsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sessionsWhereInput | sessionsWhereInput[]
    OR?: sessionsWhereInput[]
    NOT?: sessionsWhereInput | sessionsWhereInput[]
    user_id?: UuidFilter<"sessions"> | string
    created_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableFilter<"sessions"> | string | null
    ip?: StringNullableFilter<"sessions"> | string | null
    tag?: StringNullableFilter<"sessions"> | string | null
    mfa_amr_claims?: Mfa_amr_claimsListRelationFilter
    refresh_tokens?: Refresh_tokensListRelationFilter
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id">

  export type sessionsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    factor_id?: SortOrderInput | SortOrder
    aal?: SortOrderInput | SortOrder
    not_after?: SortOrderInput | SortOrder
    refreshed_at?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    ip?: SortOrderInput | SortOrder
    tag?: SortOrderInput | SortOrder
    _count?: sessionsCountOrderByAggregateInput
    _max?: sessionsMaxOrderByAggregateInput
    _min?: sessionsMinOrderByAggregateInput
  }

  export type sessionsScalarWhereWithAggregatesInput = {
    AND?: sessionsScalarWhereWithAggregatesInput | sessionsScalarWhereWithAggregatesInput[]
    OR?: sessionsScalarWhereWithAggregatesInput[]
    NOT?: sessionsScalarWhereWithAggregatesInput | sessionsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sessions"> | string
    user_id?: UuidWithAggregatesFilter<"sessions"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableWithAggregatesFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableWithAggregatesFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableWithAggregatesFilter<"sessions"> | string | null
    ip?: StringNullableWithAggregatesFilter<"sessions"> | string | null
    tag?: StringNullableWithAggregatesFilter<"sessions"> | string | null
  }

  export type sso_domainsWhereInput = {
    AND?: sso_domainsWhereInput | sso_domainsWhereInput[]
    OR?: sso_domainsWhereInput[]
    NOT?: sso_domainsWhereInput | sso_domainsWhereInput[]
    id?: UuidFilter<"sso_domains"> | string
    sso_provider_id?: UuidFilter<"sso_domains"> | string
    domain?: StringFilter<"sso_domains"> | string
    created_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    sso_providers?: XOR<Sso_providersRelationFilter, sso_providersWhereInput>
  }

  export type sso_domainsOrderByWithRelationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    sso_providers?: sso_providersOrderByWithRelationInput
  }

  export type sso_domainsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sso_domainsWhereInput | sso_domainsWhereInput[]
    OR?: sso_domainsWhereInput[]
    NOT?: sso_domainsWhereInput | sso_domainsWhereInput[]
    sso_provider_id?: UuidFilter<"sso_domains"> | string
    domain?: StringFilter<"sso_domains"> | string
    created_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    sso_providers?: XOR<Sso_providersRelationFilter, sso_providersWhereInput>
  }, "id">

  export type sso_domainsOrderByWithAggregationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: sso_domainsCountOrderByAggregateInput
    _max?: sso_domainsMaxOrderByAggregateInput
    _min?: sso_domainsMinOrderByAggregateInput
  }

  export type sso_domainsScalarWhereWithAggregatesInput = {
    AND?: sso_domainsScalarWhereWithAggregatesInput | sso_domainsScalarWhereWithAggregatesInput[]
    OR?: sso_domainsScalarWhereWithAggregatesInput[]
    NOT?: sso_domainsScalarWhereWithAggregatesInput | sso_domainsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sso_domains"> | string
    sso_provider_id?: UuidWithAggregatesFilter<"sso_domains"> | string
    domain?: StringWithAggregatesFilter<"sso_domains"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sso_domains"> | Date | string | null
  }

  export type sso_providersWhereInput = {
    AND?: sso_providersWhereInput | sso_providersWhereInput[]
    OR?: sso_providersWhereInput[]
    NOT?: sso_providersWhereInput | sso_providersWhereInput[]
    id?: UuidFilter<"sso_providers"> | string
    resource_id?: StringNullableFilter<"sso_providers"> | string | null
    created_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    saml_providers?: Saml_providersListRelationFilter
    saml_relay_states?: Saml_relay_statesListRelationFilter
    sso_domains?: Sso_domainsListRelationFilter
  }

  export type sso_providersOrderByWithRelationInput = {
    id?: SortOrder
    resource_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    saml_providers?: saml_providersOrderByRelationAggregateInput
    saml_relay_states?: saml_relay_statesOrderByRelationAggregateInput
    sso_domains?: sso_domainsOrderByRelationAggregateInput
  }

  export type sso_providersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sso_providersWhereInput | sso_providersWhereInput[]
    OR?: sso_providersWhereInput[]
    NOT?: sso_providersWhereInput | sso_providersWhereInput[]
    resource_id?: StringNullableFilter<"sso_providers"> | string | null
    created_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    saml_providers?: Saml_providersListRelationFilter
    saml_relay_states?: Saml_relay_statesListRelationFilter
    sso_domains?: Sso_domainsListRelationFilter
  }, "id">

  export type sso_providersOrderByWithAggregationInput = {
    id?: SortOrder
    resource_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: sso_providersCountOrderByAggregateInput
    _max?: sso_providersMaxOrderByAggregateInput
    _min?: sso_providersMinOrderByAggregateInput
  }

  export type sso_providersScalarWhereWithAggregatesInput = {
    AND?: sso_providersScalarWhereWithAggregatesInput | sso_providersScalarWhereWithAggregatesInput[]
    OR?: sso_providersScalarWhereWithAggregatesInput[]
    NOT?: sso_providersScalarWhereWithAggregatesInput | sso_providersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sso_providers"> | string
    resource_id?: StringNullableWithAggregatesFilter<"sso_providers"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"sso_providers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sso_providers"> | Date | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    instance_id?: UuidNullableFilter<"users"> | string | null
    id?: UuidFilter<"users"> | string
    aud?: StringNullableFilter<"users"> | string | null
    role?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    encrypted_password?: StringNullableFilter<"users"> | string | null
    email_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    invited_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmation_token?: StringNullableFilter<"users"> | string | null
    confirmation_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    recovery_token?: StringNullableFilter<"users"> | string | null
    recovery_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_new?: StringNullableFilter<"users"> | string | null
    email_change?: StringNullableFilter<"users"> | string | null
    email_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    last_sign_in_at?: DateTimeNullableFilter<"users"> | Date | string | null
    raw_app_meta_data?: JsonNullableFilter<"users">
    raw_user_meta_data?: JsonNullableFilter<"users">
    is_super_admin?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone?: StringNullableFilter<"users"> | string | null
    phone_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone_change?: StringNullableFilter<"users"> | string | null
    phone_change_token?: StringNullableFilter<"users"> | string | null
    phone_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_current?: StringNullableFilter<"users"> | string | null
    email_change_confirm_status?: IntNullableFilter<"users"> | number | null
    banned_until?: DateTimeNullableFilter<"users"> | Date | string | null
    reauthentication_token?: StringNullableFilter<"users"> | string | null
    reauthentication_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    is_sso_user?: BoolFilter<"users"> | boolean
    deleted_at?: DateTimeNullableFilter<"users"> | Date | string | null
    identities?: IdentitiesListRelationFilter
    mfa_factors?: Mfa_factorsListRelationFilter
    sessions?: SessionsListRelationFilter
    reps?: XOR<RepsNullableRelationFilter, repsWhereInput> | null
  }

  export type usersOrderByWithRelationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    aud?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    encrypted_password?: SortOrderInput | SortOrder
    email_confirmed_at?: SortOrderInput | SortOrder
    invited_at?: SortOrderInput | SortOrder
    confirmation_token?: SortOrderInput | SortOrder
    confirmation_sent_at?: SortOrderInput | SortOrder
    recovery_token?: SortOrderInput | SortOrder
    recovery_sent_at?: SortOrderInput | SortOrder
    email_change_token_new?: SortOrderInput | SortOrder
    email_change?: SortOrderInput | SortOrder
    email_change_sent_at?: SortOrderInput | SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    raw_app_meta_data?: SortOrderInput | SortOrder
    raw_user_meta_data?: SortOrderInput | SortOrder
    is_super_admin?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    phone_confirmed_at?: SortOrderInput | SortOrder
    phone_change?: SortOrderInput | SortOrder
    phone_change_token?: SortOrderInput | SortOrder
    phone_change_sent_at?: SortOrderInput | SortOrder
    confirmed_at?: SortOrderInput | SortOrder
    email_change_token_current?: SortOrderInput | SortOrder
    email_change_confirm_status?: SortOrderInput | SortOrder
    banned_until?: SortOrderInput | SortOrder
    reauthentication_token?: SortOrderInput | SortOrder
    reauthentication_sent_at?: SortOrderInput | SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    identities?: identitiesOrderByRelationAggregateInput
    mfa_factors?: mfa_factorsOrderByRelationAggregateInput
    sessions?: sessionsOrderByRelationAggregateInput
    reps?: repsOrderByWithRelationInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    phone?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    instance_id?: UuidNullableFilter<"users"> | string | null
    aud?: StringNullableFilter<"users"> | string | null
    role?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    encrypted_password?: StringNullableFilter<"users"> | string | null
    email_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    invited_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmation_token?: StringNullableFilter<"users"> | string | null
    confirmation_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    recovery_token?: StringNullableFilter<"users"> | string | null
    recovery_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_new?: StringNullableFilter<"users"> | string | null
    email_change?: StringNullableFilter<"users"> | string | null
    email_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    last_sign_in_at?: DateTimeNullableFilter<"users"> | Date | string | null
    raw_app_meta_data?: JsonNullableFilter<"users">
    raw_user_meta_data?: JsonNullableFilter<"users">
    is_super_admin?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone_change?: StringNullableFilter<"users"> | string | null
    phone_change_token?: StringNullableFilter<"users"> | string | null
    phone_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_current?: StringNullableFilter<"users"> | string | null
    email_change_confirm_status?: IntNullableFilter<"users"> | number | null
    banned_until?: DateTimeNullableFilter<"users"> | Date | string | null
    reauthentication_token?: StringNullableFilter<"users"> | string | null
    reauthentication_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    is_sso_user?: BoolFilter<"users"> | boolean
    deleted_at?: DateTimeNullableFilter<"users"> | Date | string | null
    identities?: IdentitiesListRelationFilter
    mfa_factors?: Mfa_factorsListRelationFilter
    sessions?: SessionsListRelationFilter
    reps?: XOR<RepsNullableRelationFilter, repsWhereInput> | null
  }, "id" | "phone">

  export type usersOrderByWithAggregationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    aud?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    encrypted_password?: SortOrderInput | SortOrder
    email_confirmed_at?: SortOrderInput | SortOrder
    invited_at?: SortOrderInput | SortOrder
    confirmation_token?: SortOrderInput | SortOrder
    confirmation_sent_at?: SortOrderInput | SortOrder
    recovery_token?: SortOrderInput | SortOrder
    recovery_sent_at?: SortOrderInput | SortOrder
    email_change_token_new?: SortOrderInput | SortOrder
    email_change?: SortOrderInput | SortOrder
    email_change_sent_at?: SortOrderInput | SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    raw_app_meta_data?: SortOrderInput | SortOrder
    raw_user_meta_data?: SortOrderInput | SortOrder
    is_super_admin?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    phone_confirmed_at?: SortOrderInput | SortOrder
    phone_change?: SortOrderInput | SortOrder
    phone_change_token?: SortOrderInput | SortOrder
    phone_change_sent_at?: SortOrderInput | SortOrder
    confirmed_at?: SortOrderInput | SortOrder
    email_change_token_current?: SortOrderInput | SortOrder
    email_change_confirm_status?: SortOrderInput | SortOrder
    banned_until?: SortOrderInput | SortOrder
    reauthentication_token?: SortOrderInput | SortOrder
    reauthentication_sent_at?: SortOrderInput | SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    instance_id?: UuidNullableWithAggregatesFilter<"users"> | string | null
    id?: UuidWithAggregatesFilter<"users"> | string
    aud?: StringNullableWithAggregatesFilter<"users"> | string | null
    role?: StringNullableWithAggregatesFilter<"users"> | string | null
    email?: StringNullableWithAggregatesFilter<"users"> | string | null
    encrypted_password?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_confirmed_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    invited_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    confirmation_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    confirmation_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    recovery_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    recovery_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    email_change_token_new?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_change?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_change_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    last_sign_in_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    raw_app_meta_data?: JsonNullableWithAggregatesFilter<"users">
    raw_user_meta_data?: JsonNullableWithAggregatesFilter<"users">
    is_super_admin?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    phone?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone_confirmed_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    phone_change?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone_change_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone_change_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    confirmed_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    email_change_token_current?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_change_confirm_status?: IntNullableWithAggregatesFilter<"users"> | number | null
    banned_until?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    reauthentication_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    reauthentication_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    is_sso_user?: BoolWithAggregatesFilter<"users"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
  }

  export type account_ai_chatWhereInput = {
    AND?: account_ai_chatWhereInput | account_ai_chatWhereInput[]
    OR?: account_ai_chatWhereInput[]
    NOT?: account_ai_chatWhereInput | account_ai_chatWhereInput[]
    account_id?: UuidFilter<"account_ai_chat"> | string
    plan_id?: UuidFilter<"account_ai_chat"> | string
    created_at?: DateTimeFilter<"account_ai_chat"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }

  export type account_ai_chatOrderByWithRelationInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
    accounts?: accountsOrderByWithRelationInput
    plans?: plansOrderByWithRelationInput
  }

  export type account_ai_chatWhereUniqueInput = Prisma.AtLeast<{
    account_id_plan_id?: account_ai_chatAccount_idPlan_idCompoundUniqueInput
    AND?: account_ai_chatWhereInput | account_ai_chatWhereInput[]
    OR?: account_ai_chatWhereInput[]
    NOT?: account_ai_chatWhereInput | account_ai_chatWhereInput[]
    account_id?: UuidFilter<"account_ai_chat"> | string
    plan_id?: UuidFilter<"account_ai_chat"> | string
    created_at?: DateTimeFilter<"account_ai_chat"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }, "account_id_plan_id">

  export type account_ai_chatOrderByWithAggregationInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
    _count?: account_ai_chatCountOrderByAggregateInput
    _max?: account_ai_chatMaxOrderByAggregateInput
    _min?: account_ai_chatMinOrderByAggregateInput
  }

  export type account_ai_chatScalarWhereWithAggregatesInput = {
    AND?: account_ai_chatScalarWhereWithAggregatesInput | account_ai_chatScalarWhereWithAggregatesInput[]
    OR?: account_ai_chatScalarWhereWithAggregatesInput[]
    NOT?: account_ai_chatScalarWhereWithAggregatesInput | account_ai_chatScalarWhereWithAggregatesInput[]
    account_id?: UuidWithAggregatesFilter<"account_ai_chat"> | string
    plan_id?: UuidWithAggregatesFilter<"account_ai_chat"> | string
    created_at?: DateTimeWithAggregatesFilter<"account_ai_chat"> | Date | string
  }

  export type account_blog_post_instancesWhereInput = {
    AND?: account_blog_post_instancesWhereInput | account_blog_post_instancesWhereInput[]
    OR?: account_blog_post_instancesWhereInput[]
    NOT?: account_blog_post_instancesWhereInput | account_blog_post_instancesWhereInput[]
    blog_post_id?: UuidFilter<"account_blog_post_instances"> | string
    account_id?: UuidFilter<"account_blog_post_instances"> | string
    plan_id?: UuidFilter<"account_blog_post_instances"> | string
    post_content?: StringFilter<"account_blog_post_instances"> | string
    created_at?: DateTimeFilter<"account_blog_post_instances"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }

  export type account_blog_post_instancesOrderByWithRelationInput = {
    blog_post_id?: SortOrder
    account_id?: SortOrder
    plan_id?: SortOrder
    post_content?: SortOrder
    created_at?: SortOrder
    accounts?: accountsOrderByWithRelationInput
    plans?: plansOrderByWithRelationInput
  }

  export type account_blog_post_instancesWhereUniqueInput = Prisma.AtLeast<{
    blog_post_id?: string
    AND?: account_blog_post_instancesWhereInput | account_blog_post_instancesWhereInput[]
    OR?: account_blog_post_instancesWhereInput[]
    NOT?: account_blog_post_instancesWhereInput | account_blog_post_instancesWhereInput[]
    account_id?: UuidFilter<"account_blog_post_instances"> | string
    plan_id?: UuidFilter<"account_blog_post_instances"> | string
    post_content?: StringFilter<"account_blog_post_instances"> | string
    created_at?: DateTimeFilter<"account_blog_post_instances"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }, "blog_post_id">

  export type account_blog_post_instancesOrderByWithAggregationInput = {
    blog_post_id?: SortOrder
    account_id?: SortOrder
    plan_id?: SortOrder
    post_content?: SortOrder
    created_at?: SortOrder
    _count?: account_blog_post_instancesCountOrderByAggregateInput
    _max?: account_blog_post_instancesMaxOrderByAggregateInput
    _min?: account_blog_post_instancesMinOrderByAggregateInput
  }

  export type account_blog_post_instancesScalarWhereWithAggregatesInput = {
    AND?: account_blog_post_instancesScalarWhereWithAggregatesInput | account_blog_post_instancesScalarWhereWithAggregatesInput[]
    OR?: account_blog_post_instancesScalarWhereWithAggregatesInput[]
    NOT?: account_blog_post_instancesScalarWhereWithAggregatesInput | account_blog_post_instancesScalarWhereWithAggregatesInput[]
    blog_post_id?: UuidWithAggregatesFilter<"account_blog_post_instances"> | string
    account_id?: UuidWithAggregatesFilter<"account_blog_post_instances"> | string
    plan_id?: UuidWithAggregatesFilter<"account_blog_post_instances"> | string
    post_content?: StringWithAggregatesFilter<"account_blog_post_instances"> | string
    created_at?: DateTimeWithAggregatesFilter<"account_blog_post_instances"> | Date | string
  }

  export type account_blog_postsWhereInput = {
    AND?: account_blog_postsWhereInput | account_blog_postsWhereInput[]
    OR?: account_blog_postsWhereInput[]
    NOT?: account_blog_postsWhereInput | account_blog_postsWhereInput[]
    account_id?: UuidFilter<"account_blog_posts"> | string
    plan_id?: UuidFilter<"account_blog_posts"> | string
    created_at?: DateTimeFilter<"account_blog_posts"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }

  export type account_blog_postsOrderByWithRelationInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
    accounts?: accountsOrderByWithRelationInput
    plans?: plansOrderByWithRelationInput
  }

  export type account_blog_postsWhereUniqueInput = Prisma.AtLeast<{
    account_id_plan_id?: account_blog_postsAccount_idPlan_idCompoundUniqueInput
    AND?: account_blog_postsWhereInput | account_blog_postsWhereInput[]
    OR?: account_blog_postsWhereInput[]
    NOT?: account_blog_postsWhereInput | account_blog_postsWhereInput[]
    account_id?: UuidFilter<"account_blog_posts"> | string
    plan_id?: UuidFilter<"account_blog_posts"> | string
    created_at?: DateTimeFilter<"account_blog_posts"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }, "account_id_plan_id">

  export type account_blog_postsOrderByWithAggregationInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
    _count?: account_blog_postsCountOrderByAggregateInput
    _max?: account_blog_postsMaxOrderByAggregateInput
    _min?: account_blog_postsMinOrderByAggregateInput
  }

  export type account_blog_postsScalarWhereWithAggregatesInput = {
    AND?: account_blog_postsScalarWhereWithAggregatesInput | account_blog_postsScalarWhereWithAggregatesInput[]
    OR?: account_blog_postsScalarWhereWithAggregatesInput[]
    NOT?: account_blog_postsScalarWhereWithAggregatesInput | account_blog_postsScalarWhereWithAggregatesInput[]
    account_id?: UuidWithAggregatesFilter<"account_blog_posts"> | string
    plan_id?: UuidWithAggregatesFilter<"account_blog_posts"> | string
    created_at?: DateTimeWithAggregatesFilter<"account_blog_posts"> | Date | string
  }

  export type account_plansWhereInput = {
    AND?: account_plansWhereInput | account_plansWhereInput[]
    OR?: account_plansWhereInput[]
    NOT?: account_plansWhereInput | account_plansWhereInput[]
    account_id?: UuidFilter<"account_plans"> | string
    plan_id?: UuidFilter<"account_plans"> | string
    created_at?: DateTimeFilter<"account_plans"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }

  export type account_plansOrderByWithRelationInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
    accounts?: accountsOrderByWithRelationInput
    plans?: plansOrderByWithRelationInput
  }

  export type account_plansWhereUniqueInput = Prisma.AtLeast<{
    account_id_plan_id?: account_plansAccount_idPlan_idCompoundUniqueInput
    AND?: account_plansWhereInput | account_plansWhereInput[]
    OR?: account_plansWhereInput[]
    NOT?: account_plansWhereInput | account_plansWhereInput[]
    account_id?: UuidFilter<"account_plans"> | string
    plan_id?: UuidFilter<"account_plans"> | string
    created_at?: DateTimeFilter<"account_plans"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }, "account_id_plan_id">

  export type account_plansOrderByWithAggregationInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
    _count?: account_plansCountOrderByAggregateInput
    _max?: account_plansMaxOrderByAggregateInput
    _min?: account_plansMinOrderByAggregateInput
  }

  export type account_plansScalarWhereWithAggregatesInput = {
    AND?: account_plansScalarWhereWithAggregatesInput | account_plansScalarWhereWithAggregatesInput[]
    OR?: account_plansScalarWhereWithAggregatesInput[]
    NOT?: account_plansScalarWhereWithAggregatesInput | account_plansScalarWhereWithAggregatesInput[]
    account_id?: UuidWithAggregatesFilter<"account_plans"> | string
    plan_id?: UuidWithAggregatesFilter<"account_plans"> | string
    created_at?: DateTimeWithAggregatesFilter<"account_plans"> | Date | string
  }

  export type account_review_generatorWhereInput = {
    AND?: account_review_generatorWhereInput | account_review_generatorWhereInput[]
    OR?: account_review_generatorWhereInput[]
    NOT?: account_review_generatorWhereInput | account_review_generatorWhereInput[]
    account_id?: UuidFilter<"account_review_generator"> | string
    plan_id?: UuidFilter<"account_review_generator"> | string
    created_at?: DateTimeFilter<"account_review_generator"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }

  export type account_review_generatorOrderByWithRelationInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
    accounts?: accountsOrderByWithRelationInput
    plans?: plansOrderByWithRelationInput
  }

  export type account_review_generatorWhereUniqueInput = Prisma.AtLeast<{
    account_id_plan_id?: account_review_generatorAccount_idPlan_idCompoundUniqueInput
    AND?: account_review_generatorWhereInput | account_review_generatorWhereInput[]
    OR?: account_review_generatorWhereInput[]
    NOT?: account_review_generatorWhereInput | account_review_generatorWhereInput[]
    account_id?: UuidFilter<"account_review_generator"> | string
    plan_id?: UuidFilter<"account_review_generator"> | string
    created_at?: DateTimeFilter<"account_review_generator"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }, "account_id_plan_id">

  export type account_review_generatorOrderByWithAggregationInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
    _count?: account_review_generatorCountOrderByAggregateInput
    _max?: account_review_generatorMaxOrderByAggregateInput
    _min?: account_review_generatorMinOrderByAggregateInput
  }

  export type account_review_generatorScalarWhereWithAggregatesInput = {
    AND?: account_review_generatorScalarWhereWithAggregatesInput | account_review_generatorScalarWhereWithAggregatesInput[]
    OR?: account_review_generatorScalarWhereWithAggregatesInput[]
    NOT?: account_review_generatorScalarWhereWithAggregatesInput | account_review_generatorScalarWhereWithAggregatesInput[]
    account_id?: UuidWithAggregatesFilter<"account_review_generator"> | string
    plan_id?: UuidWithAggregatesFilter<"account_review_generator"> | string
    created_at?: DateTimeWithAggregatesFilter<"account_review_generator"> | Date | string
  }

  export type account_social_mediaWhereInput = {
    AND?: account_social_mediaWhereInput | account_social_mediaWhereInput[]
    OR?: account_social_mediaWhereInput[]
    NOT?: account_social_mediaWhereInput | account_social_mediaWhereInput[]
    account_id?: UuidFilter<"account_social_media"> | string
    plan_id?: UuidFilter<"account_social_media"> | string
    created_at?: DateTimeFilter<"account_social_media"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }

  export type account_social_mediaOrderByWithRelationInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
    accounts?: accountsOrderByWithRelationInput
    plans?: plansOrderByWithRelationInput
  }

  export type account_social_mediaWhereUniqueInput = Prisma.AtLeast<{
    account_id_plan_id?: account_social_mediaAccount_idPlan_idCompoundUniqueInput
    AND?: account_social_mediaWhereInput | account_social_mediaWhereInput[]
    OR?: account_social_mediaWhereInput[]
    NOT?: account_social_mediaWhereInput | account_social_mediaWhereInput[]
    account_id?: UuidFilter<"account_social_media"> | string
    plan_id?: UuidFilter<"account_social_media"> | string
    created_at?: DateTimeFilter<"account_social_media"> | Date | string
    accounts?: XOR<AccountsRelationFilter, accountsWhereInput>
    plans?: XOR<PlansRelationFilter, plansWhereInput>
  }, "account_id_plan_id">

  export type account_social_mediaOrderByWithAggregationInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
    _count?: account_social_mediaCountOrderByAggregateInput
    _max?: account_social_mediaMaxOrderByAggregateInput
    _min?: account_social_mediaMinOrderByAggregateInput
  }

  export type account_social_mediaScalarWhereWithAggregatesInput = {
    AND?: account_social_mediaScalarWhereWithAggregatesInput | account_social_mediaScalarWhereWithAggregatesInput[]
    OR?: account_social_mediaScalarWhereWithAggregatesInput[]
    NOT?: account_social_mediaScalarWhereWithAggregatesInput | account_social_mediaScalarWhereWithAggregatesInput[]
    account_id?: UuidWithAggregatesFilter<"account_social_media"> | string
    plan_id?: UuidWithAggregatesFilter<"account_social_media"> | string
    created_at?: DateTimeWithAggregatesFilter<"account_social_media"> | Date | string
  }

  export type accountsWhereInput = {
    AND?: accountsWhereInput | accountsWhereInput[]
    OR?: accountsWhereInput[]
    NOT?: accountsWhereInput | accountsWhereInput[]
    id?: UuidFilter<"accounts"> | string
    created_at?: DateTimeFilter<"accounts"> | Date | string
    stage?: StringFilter<"accounts"> | string
    active?: BoolFilter<"accounts"> | boolean
    customer_record_id?: UuidFilter<"accounts"> | string
    account_ai_chat?: Account_ai_chatListRelationFilter
    account_blog_post_instances?: Account_blog_post_instancesListRelationFilter
    account_blog_posts?: Account_blog_postsListRelationFilter
    account_plans?: Account_plansListRelationFilter
    account_review_generator?: Account_review_generatorListRelationFilter
    account_social_media?: Account_social_mediaListRelationFilter
    customer_records?: XOR<Customer_recordsRelationFilter, customer_recordsWhereInput>
  }

  export type accountsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
    account_ai_chat?: account_ai_chatOrderByRelationAggregateInput
    account_blog_post_instances?: account_blog_post_instancesOrderByRelationAggregateInput
    account_blog_posts?: account_blog_postsOrderByRelationAggregateInput
    account_plans?: account_plansOrderByRelationAggregateInput
    account_review_generator?: account_review_generatorOrderByRelationAggregateInput
    account_social_media?: account_social_mediaOrderByRelationAggregateInput
    customer_records?: customer_recordsOrderByWithRelationInput
  }

  export type accountsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    customer_record_id?: string
    AND?: accountsWhereInput | accountsWhereInput[]
    OR?: accountsWhereInput[]
    NOT?: accountsWhereInput | accountsWhereInput[]
    created_at?: DateTimeFilter<"accounts"> | Date | string
    stage?: StringFilter<"accounts"> | string
    active?: BoolFilter<"accounts"> | boolean
    account_ai_chat?: Account_ai_chatListRelationFilter
    account_blog_post_instances?: Account_blog_post_instancesListRelationFilter
    account_blog_posts?: Account_blog_postsListRelationFilter
    account_plans?: Account_plansListRelationFilter
    account_review_generator?: Account_review_generatorListRelationFilter
    account_social_media?: Account_social_mediaListRelationFilter
    customer_records?: XOR<Customer_recordsRelationFilter, customer_recordsWhereInput>
  }, "id" | "customer_record_id">

  export type accountsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
    _count?: accountsCountOrderByAggregateInput
    _max?: accountsMaxOrderByAggregateInput
    _min?: accountsMinOrderByAggregateInput
  }

  export type accountsScalarWhereWithAggregatesInput = {
    AND?: accountsScalarWhereWithAggregatesInput | accountsScalarWhereWithAggregatesInput[]
    OR?: accountsScalarWhereWithAggregatesInput[]
    NOT?: accountsScalarWhereWithAggregatesInput | accountsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"accounts"> | string
    created_at?: DateTimeWithAggregatesFilter<"accounts"> | Date | string
    stage?: StringWithAggregatesFilter<"accounts"> | string
    active?: BoolWithAggregatesFilter<"accounts"> | boolean
    customer_record_id?: UuidWithAggregatesFilter<"accounts"> | string
  }

  export type communicationsWhereInput = {
    AND?: communicationsWhereInput | communicationsWhereInput[]
    OR?: communicationsWhereInput[]
    NOT?: communicationsWhereInput | communicationsWhereInput[]
    id?: UuidFilter<"communications"> | string
    customer_record_id?: UuidNullableFilter<"communications"> | string | null
    type?: StringFilter<"communications"> | string
    created_at?: DateTimeFilter<"communications"> | Date | string
    marketing_campaign_id?: UuidNullableFilter<"communications"> | string | null
    customer_records?: XOR<Customer_recordsNullableRelationFilter, customer_recordsWhereInput> | null
    marketing_campaigns?: XOR<Marketing_campaignsNullableRelationFilter, marketing_campaignsWhereInput> | null
    communications_emails?: XOR<Communications_emailsNullableRelationFilter, communications_emailsWhereInput> | null
    communications_texts?: XOR<Communications_textsNullableRelationFilter, communications_textsWhereInput> | null
  }

  export type communicationsOrderByWithRelationInput = {
    id?: SortOrder
    customer_record_id?: SortOrderInput | SortOrder
    type?: SortOrder
    created_at?: SortOrder
    marketing_campaign_id?: SortOrderInput | SortOrder
    customer_records?: customer_recordsOrderByWithRelationInput
    marketing_campaigns?: marketing_campaignsOrderByWithRelationInput
    communications_emails?: communications_emailsOrderByWithRelationInput
    communications_texts?: communications_textsOrderByWithRelationInput
  }

  export type communicationsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: communicationsWhereInput | communicationsWhereInput[]
    OR?: communicationsWhereInput[]
    NOT?: communicationsWhereInput | communicationsWhereInput[]
    customer_record_id?: UuidNullableFilter<"communications"> | string | null
    type?: StringFilter<"communications"> | string
    created_at?: DateTimeFilter<"communications"> | Date | string
    marketing_campaign_id?: UuidNullableFilter<"communications"> | string | null
    customer_records?: XOR<Customer_recordsNullableRelationFilter, customer_recordsWhereInput> | null
    marketing_campaigns?: XOR<Marketing_campaignsNullableRelationFilter, marketing_campaignsWhereInput> | null
    communications_emails?: XOR<Communications_emailsNullableRelationFilter, communications_emailsWhereInput> | null
    communications_texts?: XOR<Communications_textsNullableRelationFilter, communications_textsWhereInput> | null
  }, "id">

  export type communicationsOrderByWithAggregationInput = {
    id?: SortOrder
    customer_record_id?: SortOrderInput | SortOrder
    type?: SortOrder
    created_at?: SortOrder
    marketing_campaign_id?: SortOrderInput | SortOrder
    _count?: communicationsCountOrderByAggregateInput
    _max?: communicationsMaxOrderByAggregateInput
    _min?: communicationsMinOrderByAggregateInput
  }

  export type communicationsScalarWhereWithAggregatesInput = {
    AND?: communicationsScalarWhereWithAggregatesInput | communicationsScalarWhereWithAggregatesInput[]
    OR?: communicationsScalarWhereWithAggregatesInput[]
    NOT?: communicationsScalarWhereWithAggregatesInput | communicationsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"communications"> | string
    customer_record_id?: UuidNullableWithAggregatesFilter<"communications"> | string | null
    type?: StringWithAggregatesFilter<"communications"> | string
    created_at?: DateTimeWithAggregatesFilter<"communications"> | Date | string
    marketing_campaign_id?: UuidNullableWithAggregatesFilter<"communications"> | string | null
  }

  export type communications_emailsWhereInput = {
    AND?: communications_emailsWhereInput | communications_emailsWhereInput[]
    OR?: communications_emailsWhereInput[]
    NOT?: communications_emailsWhereInput | communications_emailsWhereInput[]
    id?: UuidFilter<"communications_emails"> | string
    communications_id?: UuidFilter<"communications_emails"> | string
    created_at?: DateTimeFilter<"communications_emails"> | Date | string
    email_id?: UuidFilter<"communications_emails"> | string
    communications?: XOR<CommunicationsRelationFilter, communicationsWhereInput>
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: Communications_emails_status_updatesListRelationFilter
  }

  export type communications_emailsOrderByWithRelationInput = {
    id?: SortOrder
    communications_id?: SortOrder
    created_at?: SortOrder
    email_id?: SortOrder
    communications?: communicationsOrderByWithRelationInput
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emails_status_updatesOrderByRelationAggregateInput
  }

  export type communications_emailsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    communications_id?: string
    email_id?: string
    AND?: communications_emailsWhereInput | communications_emailsWhereInput[]
    OR?: communications_emailsWhereInput[]
    NOT?: communications_emailsWhereInput | communications_emailsWhereInput[]
    created_at?: DateTimeFilter<"communications_emails"> | Date | string
    communications?: XOR<CommunicationsRelationFilter, communicationsWhereInput>
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: Communications_emails_status_updatesListRelationFilter
  }, "id" | "communications_id" | "email_id">

  export type communications_emailsOrderByWithAggregationInput = {
    id?: SortOrder
    communications_id?: SortOrder
    created_at?: SortOrder
    email_id?: SortOrder
    _count?: communications_emailsCountOrderByAggregateInput
    _max?: communications_emailsMaxOrderByAggregateInput
    _min?: communications_emailsMinOrderByAggregateInput
  }

  export type communications_emailsScalarWhereWithAggregatesInput = {
    AND?: communications_emailsScalarWhereWithAggregatesInput | communications_emailsScalarWhereWithAggregatesInput[]
    OR?: communications_emailsScalarWhereWithAggregatesInput[]
    NOT?: communications_emailsScalarWhereWithAggregatesInput | communications_emailsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"communications_emails"> | string
    communications_id?: UuidWithAggregatesFilter<"communications_emails"> | string
    created_at?: DateTimeWithAggregatesFilter<"communications_emails"> | Date | string
    email_id?: UuidWithAggregatesFilter<"communications_emails"> | string
  }

  export type communications_emails_status_updatesWhereInput = {
    AND?: communications_emails_status_updatesWhereInput | communications_emails_status_updatesWhereInput[]
    OR?: communications_emails_status_updatesWhereInput[]
    NOT?: communications_emails_status_updatesWhereInput | communications_emails_status_updatesWhereInput[]
    id?: UuidFilter<"communications_emails_status_updates"> | string
    communications_emails?: UuidFilter<"communications_emails_status_updates"> | string
    status?: StringFilter<"communications_emails_status_updates"> | string
    created_at?: DateTimeFilter<"communications_emails_status_updates"> | Date | string
    communications_emails_communications_emails_status_updates_communications_emailsTocommunications_emails?: XOR<Communications_emailsRelationFilter, communications_emailsWhereInput>
  }

  export type communications_emails_status_updatesOrderByWithRelationInput = {
    id?: SortOrder
    communications_emails?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    communications_emails_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emailsOrderByWithRelationInput
  }

  export type communications_emails_status_updatesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: communications_emails_status_updatesWhereInput | communications_emails_status_updatesWhereInput[]
    OR?: communications_emails_status_updatesWhereInput[]
    NOT?: communications_emails_status_updatesWhereInput | communications_emails_status_updatesWhereInput[]
    communications_emails?: UuidFilter<"communications_emails_status_updates"> | string
    status?: StringFilter<"communications_emails_status_updates"> | string
    created_at?: DateTimeFilter<"communications_emails_status_updates"> | Date | string
    communications_emails_communications_emails_status_updates_communications_emailsTocommunications_emails?: XOR<Communications_emailsRelationFilter, communications_emailsWhereInput>
  }, "id">

  export type communications_emails_status_updatesOrderByWithAggregationInput = {
    id?: SortOrder
    communications_emails?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    _count?: communications_emails_status_updatesCountOrderByAggregateInput
    _max?: communications_emails_status_updatesMaxOrderByAggregateInput
    _min?: communications_emails_status_updatesMinOrderByAggregateInput
  }

  export type communications_emails_status_updatesScalarWhereWithAggregatesInput = {
    AND?: communications_emails_status_updatesScalarWhereWithAggregatesInput | communications_emails_status_updatesScalarWhereWithAggregatesInput[]
    OR?: communications_emails_status_updatesScalarWhereWithAggregatesInput[]
    NOT?: communications_emails_status_updatesScalarWhereWithAggregatesInput | communications_emails_status_updatesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"communications_emails_status_updates"> | string
    communications_emails?: UuidWithAggregatesFilter<"communications_emails_status_updates"> | string
    status?: StringWithAggregatesFilter<"communications_emails_status_updates"> | string
    created_at?: DateTimeWithAggregatesFilter<"communications_emails_status_updates"> | Date | string
  }

  export type communications_textsWhereInput = {
    AND?: communications_textsWhereInput | communications_textsWhereInput[]
    OR?: communications_textsWhereInput[]
    NOT?: communications_textsWhereInput | communications_textsWhereInput[]
    id?: UuidFilter<"communications_texts"> | string
    communications_id?: UuidFilter<"communications_texts"> | string
    status?: StringFilter<"communications_texts"> | string
    created_at?: DateTimeFilter<"communications_texts"> | Date | string
    communications?: XOR<CommunicationsRelationFilter, communicationsWhereInput>
  }

  export type communications_textsOrderByWithRelationInput = {
    id?: SortOrder
    communications_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    communications?: communicationsOrderByWithRelationInput
  }

  export type communications_textsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    communications_id?: string
    AND?: communications_textsWhereInput | communications_textsWhereInput[]
    OR?: communications_textsWhereInput[]
    NOT?: communications_textsWhereInput | communications_textsWhereInput[]
    status?: StringFilter<"communications_texts"> | string
    created_at?: DateTimeFilter<"communications_texts"> | Date | string
    communications?: XOR<CommunicationsRelationFilter, communicationsWhereInput>
  }, "id" | "communications_id">

  export type communications_textsOrderByWithAggregationInput = {
    id?: SortOrder
    communications_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    _count?: communications_textsCountOrderByAggregateInput
    _max?: communications_textsMaxOrderByAggregateInput
    _min?: communications_textsMinOrderByAggregateInput
  }

  export type communications_textsScalarWhereWithAggregatesInput = {
    AND?: communications_textsScalarWhereWithAggregatesInput | communications_textsScalarWhereWithAggregatesInput[]
    OR?: communications_textsScalarWhereWithAggregatesInput[]
    NOT?: communications_textsScalarWhereWithAggregatesInput | communications_textsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"communications_texts"> | string
    communications_id?: UuidWithAggregatesFilter<"communications_texts"> | string
    status?: StringWithAggregatesFilter<"communications_texts"> | string
    created_at?: DateTimeWithAggregatesFilter<"communications_texts"> | Date | string
  }

  export type contact_info_emailsWhereInput = {
    AND?: contact_info_emailsWhereInput | contact_info_emailsWhereInput[]
    OR?: contact_info_emailsWhereInput[]
    NOT?: contact_info_emailsWhereInput | contact_info_emailsWhereInput[]
    id?: UuidFilter<"contact_info_emails"> | string
    contact_id?: UuidFilter<"contact_info_emails"> | string
    value?: StringFilter<"contact_info_emails"> | string
    priority?: IntFilter<"contact_info_emails"> | number
    created_at?: DateTimeFilter<"contact_info_emails"> | Date | string
    email_id?: UuidFilter<"contact_info_emails"> | string
    contacts?: XOR<ContactsRelationFilter, contactsWhereInput>
  }

  export type contact_info_emailsOrderByWithRelationInput = {
    id?: SortOrder
    contact_id?: SortOrder
    value?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    email_id?: SortOrder
    contacts?: contactsOrderByWithRelationInput
  }

  export type contact_info_emailsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email_id?: string
    AND?: contact_info_emailsWhereInput | contact_info_emailsWhereInput[]
    OR?: contact_info_emailsWhereInput[]
    NOT?: contact_info_emailsWhereInput | contact_info_emailsWhereInput[]
    contact_id?: UuidFilter<"contact_info_emails"> | string
    value?: StringFilter<"contact_info_emails"> | string
    priority?: IntFilter<"contact_info_emails"> | number
    created_at?: DateTimeFilter<"contact_info_emails"> | Date | string
    contacts?: XOR<ContactsRelationFilter, contactsWhereInput>
  }, "id" | "email_id">

  export type contact_info_emailsOrderByWithAggregationInput = {
    id?: SortOrder
    contact_id?: SortOrder
    value?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    email_id?: SortOrder
    _count?: contact_info_emailsCountOrderByAggregateInput
    _avg?: contact_info_emailsAvgOrderByAggregateInput
    _max?: contact_info_emailsMaxOrderByAggregateInput
    _min?: contact_info_emailsMinOrderByAggregateInput
    _sum?: contact_info_emailsSumOrderByAggregateInput
  }

  export type contact_info_emailsScalarWhereWithAggregatesInput = {
    AND?: contact_info_emailsScalarWhereWithAggregatesInput | contact_info_emailsScalarWhereWithAggregatesInput[]
    OR?: contact_info_emailsScalarWhereWithAggregatesInput[]
    NOT?: contact_info_emailsScalarWhereWithAggregatesInput | contact_info_emailsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"contact_info_emails"> | string
    contact_id?: UuidWithAggregatesFilter<"contact_info_emails"> | string
    value?: StringWithAggregatesFilter<"contact_info_emails"> | string
    priority?: IntWithAggregatesFilter<"contact_info_emails"> | number
    created_at?: DateTimeWithAggregatesFilter<"contact_info_emails"> | Date | string
    email_id?: UuidWithAggregatesFilter<"contact_info_emails"> | string
  }

  export type contact_info_phonesWhereInput = {
    AND?: contact_info_phonesWhereInput | contact_info_phonesWhereInput[]
    OR?: contact_info_phonesWhereInput[]
    NOT?: contact_info_phonesWhereInput | contact_info_phonesWhereInput[]
    id?: UuidFilter<"contact_info_phones"> | string
    contact_id?: UuidFilter<"contact_info_phones"> | string
    type?: StringFilter<"contact_info_phones"> | string
    value?: StringFilter<"contact_info_phones"> | string
    priority?: IntFilter<"contact_info_phones"> | number
    created_at?: DateTimeFilter<"contact_info_phones"> | Date | string
    contacts?: XOR<ContactsRelationFilter, contactsWhereInput>
  }

  export type contact_info_phonesOrderByWithRelationInput = {
    id?: SortOrder
    contact_id?: SortOrder
    type?: SortOrder
    value?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    contacts?: contactsOrderByWithRelationInput
  }

  export type contact_info_phonesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: contact_info_phonesWhereInput | contact_info_phonesWhereInput[]
    OR?: contact_info_phonesWhereInput[]
    NOT?: contact_info_phonesWhereInput | contact_info_phonesWhereInput[]
    contact_id?: UuidFilter<"contact_info_phones"> | string
    type?: StringFilter<"contact_info_phones"> | string
    value?: StringFilter<"contact_info_phones"> | string
    priority?: IntFilter<"contact_info_phones"> | number
    created_at?: DateTimeFilter<"contact_info_phones"> | Date | string
    contacts?: XOR<ContactsRelationFilter, contactsWhereInput>
  }, "id">

  export type contact_info_phonesOrderByWithAggregationInput = {
    id?: SortOrder
    contact_id?: SortOrder
    type?: SortOrder
    value?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    _count?: contact_info_phonesCountOrderByAggregateInput
    _avg?: contact_info_phonesAvgOrderByAggregateInput
    _max?: contact_info_phonesMaxOrderByAggregateInput
    _min?: contact_info_phonesMinOrderByAggregateInput
    _sum?: contact_info_phonesSumOrderByAggregateInput
  }

  export type contact_info_phonesScalarWhereWithAggregatesInput = {
    AND?: contact_info_phonesScalarWhereWithAggregatesInput | contact_info_phonesScalarWhereWithAggregatesInput[]
    OR?: contact_info_phonesScalarWhereWithAggregatesInput[]
    NOT?: contact_info_phonesScalarWhereWithAggregatesInput | contact_info_phonesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"contact_info_phones"> | string
    contact_id?: UuidWithAggregatesFilter<"contact_info_phones"> | string
    type?: StringWithAggregatesFilter<"contact_info_phones"> | string
    value?: StringWithAggregatesFilter<"contact_info_phones"> | string
    priority?: IntWithAggregatesFilter<"contact_info_phones"> | number
    created_at?: DateTimeWithAggregatesFilter<"contact_info_phones"> | Date | string
  }

  export type contactsWhereInput = {
    AND?: contactsWhereInput | contactsWhereInput[]
    OR?: contactsWhereInput[]
    NOT?: contactsWhereInput | contactsWhereInput[]
    id?: UuidFilter<"contacts"> | string
    name?: StringFilter<"contacts"> | string
    position?: StringFilter<"contacts"> | string
    priority?: IntFilter<"contacts"> | number
    created_at?: DateTimeFilter<"contacts"> | Date | string
    customer_record_id?: UuidFilter<"contacts"> | string
    contact_info_emails?: Contact_info_emailsListRelationFilter
    contact_info_phones?: Contact_info_phonesListRelationFilter
    customer_records?: XOR<Customer_recordsRelationFilter, customer_recordsWhereInput>
  }

  export type contactsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    position?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    customer_record_id?: SortOrder
    contact_info_emails?: contact_info_emailsOrderByRelationAggregateInput
    contact_info_phones?: contact_info_phonesOrderByRelationAggregateInput
    customer_records?: customer_recordsOrderByWithRelationInput
  }

  export type contactsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: contactsWhereInput | contactsWhereInput[]
    OR?: contactsWhereInput[]
    NOT?: contactsWhereInput | contactsWhereInput[]
    name?: StringFilter<"contacts"> | string
    position?: StringFilter<"contacts"> | string
    priority?: IntFilter<"contacts"> | number
    created_at?: DateTimeFilter<"contacts"> | Date | string
    customer_record_id?: UuidFilter<"contacts"> | string
    contact_info_emails?: Contact_info_emailsListRelationFilter
    contact_info_phones?: Contact_info_phonesListRelationFilter
    customer_records?: XOR<Customer_recordsRelationFilter, customer_recordsWhereInput>
  }, "id">

  export type contactsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    position?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    customer_record_id?: SortOrder
    _count?: contactsCountOrderByAggregateInput
    _avg?: contactsAvgOrderByAggregateInput
    _max?: contactsMaxOrderByAggregateInput
    _min?: contactsMinOrderByAggregateInput
    _sum?: contactsSumOrderByAggregateInput
  }

  export type contactsScalarWhereWithAggregatesInput = {
    AND?: contactsScalarWhereWithAggregatesInput | contactsScalarWhereWithAggregatesInput[]
    OR?: contactsScalarWhereWithAggregatesInput[]
    NOT?: contactsScalarWhereWithAggregatesInput | contactsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"contacts"> | string
    name?: StringWithAggregatesFilter<"contacts"> | string
    position?: StringWithAggregatesFilter<"contacts"> | string
    priority?: IntWithAggregatesFilter<"contacts"> | number
    created_at?: DateTimeWithAggregatesFilter<"contacts"> | Date | string
    customer_record_id?: UuidWithAggregatesFilter<"contacts"> | string
  }

  export type customer_recordsWhereInput = {
    AND?: customer_recordsWhereInput | customer_recordsWhereInput[]
    OR?: customer_recordsWhereInput[]
    NOT?: customer_recordsWhereInput | customer_recordsWhereInput[]
    id?: UuidFilter<"customer_records"> | string
    business_name?: StringFilter<"customer_records"> | string
    active?: BoolFilter<"customer_records"> | boolean
    stage?: StringFilter<"customer_records"> | string
    created_at?: DateTimeFilter<"customer_records"> | Date | string
    business_owner_name?: StringFilter<"customer_records"> | string
    accounts?: XOR<AccountsNullableRelationFilter, accountsWhereInput> | null
    communications?: CommunicationsListRelationFilter
    contacts?: ContactsListRelationFilter
    leads?: XOR<LeadsNullableRelationFilter, leadsWhereInput> | null
    notes?: NotesListRelationFilter
    opportunities?: XOR<OpportunitiesNullableRelationFilter, opportunitiesWhereInput> | null
  }

  export type customer_recordsOrderByWithRelationInput = {
    id?: SortOrder
    business_name?: SortOrder
    active?: SortOrder
    stage?: SortOrder
    created_at?: SortOrder
    business_owner_name?: SortOrder
    accounts?: accountsOrderByWithRelationInput
    communications?: communicationsOrderByRelationAggregateInput
    contacts?: contactsOrderByRelationAggregateInput
    leads?: leadsOrderByWithRelationInput
    notes?: notesOrderByRelationAggregateInput
    opportunities?: opportunitiesOrderByWithRelationInput
  }

  export type customer_recordsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: customer_recordsWhereInput | customer_recordsWhereInput[]
    OR?: customer_recordsWhereInput[]
    NOT?: customer_recordsWhereInput | customer_recordsWhereInput[]
    business_name?: StringFilter<"customer_records"> | string
    active?: BoolFilter<"customer_records"> | boolean
    stage?: StringFilter<"customer_records"> | string
    created_at?: DateTimeFilter<"customer_records"> | Date | string
    business_owner_name?: StringFilter<"customer_records"> | string
    accounts?: XOR<AccountsNullableRelationFilter, accountsWhereInput> | null
    communications?: CommunicationsListRelationFilter
    contacts?: ContactsListRelationFilter
    leads?: XOR<LeadsNullableRelationFilter, leadsWhereInput> | null
    notes?: NotesListRelationFilter
    opportunities?: XOR<OpportunitiesNullableRelationFilter, opportunitiesWhereInput> | null
  }, "id">

  export type customer_recordsOrderByWithAggregationInput = {
    id?: SortOrder
    business_name?: SortOrder
    active?: SortOrder
    stage?: SortOrder
    created_at?: SortOrder
    business_owner_name?: SortOrder
    _count?: customer_recordsCountOrderByAggregateInput
    _max?: customer_recordsMaxOrderByAggregateInput
    _min?: customer_recordsMinOrderByAggregateInput
  }

  export type customer_recordsScalarWhereWithAggregatesInput = {
    AND?: customer_recordsScalarWhereWithAggregatesInput | customer_recordsScalarWhereWithAggregatesInput[]
    OR?: customer_recordsScalarWhereWithAggregatesInput[]
    NOT?: customer_recordsScalarWhereWithAggregatesInput | customer_recordsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"customer_records"> | string
    business_name?: StringWithAggregatesFilter<"customer_records"> | string
    active?: BoolWithAggregatesFilter<"customer_records"> | boolean
    stage?: StringWithAggregatesFilter<"customer_records"> | string
    created_at?: DateTimeWithAggregatesFilter<"customer_records"> | Date | string
    business_owner_name?: StringWithAggregatesFilter<"customer_records"> | string
  }

  export type email_templatesWhereInput = {
    AND?: email_templatesWhereInput | email_templatesWhereInput[]
    OR?: email_templatesWhereInput[]
    NOT?: email_templatesWhereInput | email_templatesWhereInput[]
    id?: UuidFilter<"email_templates"> | string
    name?: StringFilter<"email_templates"> | string
    category?: StringFilter<"email_templates"> | string
    created_at?: DateTimeFilter<"email_templates"> | Date | string
  }

  export type email_templatesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    created_at?: SortOrder
  }

  export type email_templatesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: email_templatesWhereInput | email_templatesWhereInput[]
    OR?: email_templatesWhereInput[]
    NOT?: email_templatesWhereInput | email_templatesWhereInput[]
    name?: StringFilter<"email_templates"> | string
    category?: StringFilter<"email_templates"> | string
    created_at?: DateTimeFilter<"email_templates"> | Date | string
  }, "id">

  export type email_templatesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    created_at?: SortOrder
    _count?: email_templatesCountOrderByAggregateInput
    _max?: email_templatesMaxOrderByAggregateInput
    _min?: email_templatesMinOrderByAggregateInput
  }

  export type email_templatesScalarWhereWithAggregatesInput = {
    AND?: email_templatesScalarWhereWithAggregatesInput | email_templatesScalarWhereWithAggregatesInput[]
    OR?: email_templatesScalarWhereWithAggregatesInput[]
    NOT?: email_templatesScalarWhereWithAggregatesInput | email_templatesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"email_templates"> | string
    name?: StringWithAggregatesFilter<"email_templates"> | string
    category?: StringWithAggregatesFilter<"email_templates"> | string
    created_at?: DateTimeWithAggregatesFilter<"email_templates"> | Date | string
  }

  export type leadsWhereInput = {
    AND?: leadsWhereInput | leadsWhereInput[]
    OR?: leadsWhereInput[]
    NOT?: leadsWhereInput | leadsWhereInput[]
    id?: UuidFilter<"leads"> | string
    created_at?: DateTimeFilter<"leads"> | Date | string
    stage?: StringFilter<"leads"> | string
    active?: BoolFilter<"leads"> | boolean
    customer_record_id?: UuidFilter<"leads"> | string
    customer_records?: XOR<Customer_recordsRelationFilter, customer_recordsWhereInput>
  }

  export type leadsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
    customer_records?: customer_recordsOrderByWithRelationInput
  }

  export type leadsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    customer_record_id?: string
    AND?: leadsWhereInput | leadsWhereInput[]
    OR?: leadsWhereInput[]
    NOT?: leadsWhereInput | leadsWhereInput[]
    created_at?: DateTimeFilter<"leads"> | Date | string
    stage?: StringFilter<"leads"> | string
    active?: BoolFilter<"leads"> | boolean
    customer_records?: XOR<Customer_recordsRelationFilter, customer_recordsWhereInput>
  }, "id" | "customer_record_id">

  export type leadsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
    _count?: leadsCountOrderByAggregateInput
    _max?: leadsMaxOrderByAggregateInput
    _min?: leadsMinOrderByAggregateInput
  }

  export type leadsScalarWhereWithAggregatesInput = {
    AND?: leadsScalarWhereWithAggregatesInput | leadsScalarWhereWithAggregatesInput[]
    OR?: leadsScalarWhereWithAggregatesInput[]
    NOT?: leadsScalarWhereWithAggregatesInput | leadsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"leads"> | string
    created_at?: DateTimeWithAggregatesFilter<"leads"> | Date | string
    stage?: StringWithAggregatesFilter<"leads"> | string
    active?: BoolWithAggregatesFilter<"leads"> | boolean
    customer_record_id?: UuidWithAggregatesFilter<"leads"> | string
  }

  export type marketing_campaignsWhereInput = {
    AND?: marketing_campaignsWhereInput | marketing_campaignsWhereInput[]
    OR?: marketing_campaignsWhereInput[]
    NOT?: marketing_campaignsWhereInput | marketing_campaignsWhereInput[]
    id?: UuidFilter<"marketing_campaigns"> | string
    created_at?: DateTimeFilter<"marketing_campaigns"> | Date | string
    communications?: CommunicationsListRelationFilter
  }

  export type marketing_campaignsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    communications?: communicationsOrderByRelationAggregateInput
  }

  export type marketing_campaignsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: marketing_campaignsWhereInput | marketing_campaignsWhereInput[]
    OR?: marketing_campaignsWhereInput[]
    NOT?: marketing_campaignsWhereInput | marketing_campaignsWhereInput[]
    created_at?: DateTimeFilter<"marketing_campaigns"> | Date | string
    communications?: CommunicationsListRelationFilter
  }, "id">

  export type marketing_campaignsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    _count?: marketing_campaignsCountOrderByAggregateInput
    _max?: marketing_campaignsMaxOrderByAggregateInput
    _min?: marketing_campaignsMinOrderByAggregateInput
  }

  export type marketing_campaignsScalarWhereWithAggregatesInput = {
    AND?: marketing_campaignsScalarWhereWithAggregatesInput | marketing_campaignsScalarWhereWithAggregatesInput[]
    OR?: marketing_campaignsScalarWhereWithAggregatesInput[]
    NOT?: marketing_campaignsScalarWhereWithAggregatesInput | marketing_campaignsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"marketing_campaigns"> | string
    created_at?: DateTimeWithAggregatesFilter<"marketing_campaigns"> | Date | string
  }

  export type notesWhereInput = {
    AND?: notesWhereInput | notesWhereInput[]
    OR?: notesWhereInput[]
    NOT?: notesWhereInput | notesWhereInput[]
    id?: UuidFilter<"notes"> | string
    author?: UuidNullableFilter<"notes"> | string | null
    note?: StringFilter<"notes"> | string
    created_at?: DateTimeFilter<"notes"> | Date | string
    customer_record_id?: UuidFilter<"notes"> | string
    reps?: XOR<RepsNullableRelationFilter, repsWhereInput> | null
    customer_records?: XOR<Customer_recordsRelationFilter, customer_recordsWhereInput>
  }

  export type notesOrderByWithRelationInput = {
    id?: SortOrder
    author?: SortOrderInput | SortOrder
    note?: SortOrder
    created_at?: SortOrder
    customer_record_id?: SortOrder
    reps?: repsOrderByWithRelationInput
    customer_records?: customer_recordsOrderByWithRelationInput
  }

  export type notesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: notesWhereInput | notesWhereInput[]
    OR?: notesWhereInput[]
    NOT?: notesWhereInput | notesWhereInput[]
    author?: UuidNullableFilter<"notes"> | string | null
    note?: StringFilter<"notes"> | string
    created_at?: DateTimeFilter<"notes"> | Date | string
    customer_record_id?: UuidFilter<"notes"> | string
    reps?: XOR<RepsNullableRelationFilter, repsWhereInput> | null
    customer_records?: XOR<Customer_recordsRelationFilter, customer_recordsWhereInput>
  }, "id">

  export type notesOrderByWithAggregationInput = {
    id?: SortOrder
    author?: SortOrderInput | SortOrder
    note?: SortOrder
    created_at?: SortOrder
    customer_record_id?: SortOrder
    _count?: notesCountOrderByAggregateInput
    _max?: notesMaxOrderByAggregateInput
    _min?: notesMinOrderByAggregateInput
  }

  export type notesScalarWhereWithAggregatesInput = {
    AND?: notesScalarWhereWithAggregatesInput | notesScalarWhereWithAggregatesInput[]
    OR?: notesScalarWhereWithAggregatesInput[]
    NOT?: notesScalarWhereWithAggregatesInput | notesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"notes"> | string
    author?: UuidNullableWithAggregatesFilter<"notes"> | string | null
    note?: StringWithAggregatesFilter<"notes"> | string
    created_at?: DateTimeWithAggregatesFilter<"notes"> | Date | string
    customer_record_id?: UuidWithAggregatesFilter<"notes"> | string
  }

  export type opportunitiesWhereInput = {
    AND?: opportunitiesWhereInput | opportunitiesWhereInput[]
    OR?: opportunitiesWhereInput[]
    NOT?: opportunitiesWhereInput | opportunitiesWhereInput[]
    id?: UuidFilter<"opportunities"> | string
    created_at?: DateTimeFilter<"opportunities"> | Date | string
    stage?: StringFilter<"opportunities"> | string
    active?: BoolFilter<"opportunities"> | boolean
    customer_record_id?: UuidFilter<"opportunities"> | string
    customer_records?: XOR<Customer_recordsRelationFilter, customer_recordsWhereInput>
  }

  export type opportunitiesOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
    customer_records?: customer_recordsOrderByWithRelationInput
  }

  export type opportunitiesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    customer_record_id?: string
    AND?: opportunitiesWhereInput | opportunitiesWhereInput[]
    OR?: opportunitiesWhereInput[]
    NOT?: opportunitiesWhereInput | opportunitiesWhereInput[]
    created_at?: DateTimeFilter<"opportunities"> | Date | string
    stage?: StringFilter<"opportunities"> | string
    active?: BoolFilter<"opportunities"> | boolean
    customer_records?: XOR<Customer_recordsRelationFilter, customer_recordsWhereInput>
  }, "id" | "customer_record_id">

  export type opportunitiesOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
    _count?: opportunitiesCountOrderByAggregateInput
    _max?: opportunitiesMaxOrderByAggregateInput
    _min?: opportunitiesMinOrderByAggregateInput
  }

  export type opportunitiesScalarWhereWithAggregatesInput = {
    AND?: opportunitiesScalarWhereWithAggregatesInput | opportunitiesScalarWhereWithAggregatesInput[]
    OR?: opportunitiesScalarWhereWithAggregatesInput[]
    NOT?: opportunitiesScalarWhereWithAggregatesInput | opportunitiesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"opportunities"> | string
    created_at?: DateTimeWithAggregatesFilter<"opportunities"> | Date | string
    stage?: StringWithAggregatesFilter<"opportunities"> | string
    active?: BoolWithAggregatesFilter<"opportunities"> | boolean
    customer_record_id?: UuidWithAggregatesFilter<"opportunities"> | string
  }

  export type plansWhereInput = {
    AND?: plansWhereInput | plansWhereInput[]
    OR?: plansWhereInput[]
    NOT?: plansWhereInput | plansWhereInput[]
    id?: UuidFilter<"plans"> | string
    plan_name?: StringFilter<"plans"> | string
    created_at?: DateTimeFilter<"plans"> | Date | string
    account_ai_chat?: Account_ai_chatListRelationFilter
    account_blog_post_instances?: Account_blog_post_instancesListRelationFilter
    account_blog_posts?: Account_blog_postsListRelationFilter
    account_plans?: Account_plansListRelationFilter
    account_review_generator?: Account_review_generatorListRelationFilter
    account_social_media?: Account_social_mediaListRelationFilter
  }

  export type plansOrderByWithRelationInput = {
    id?: SortOrder
    plan_name?: SortOrder
    created_at?: SortOrder
    account_ai_chat?: account_ai_chatOrderByRelationAggregateInput
    account_blog_post_instances?: account_blog_post_instancesOrderByRelationAggregateInput
    account_blog_posts?: account_blog_postsOrderByRelationAggregateInput
    account_plans?: account_plansOrderByRelationAggregateInput
    account_review_generator?: account_review_generatorOrderByRelationAggregateInput
    account_social_media?: account_social_mediaOrderByRelationAggregateInput
  }

  export type plansWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: plansWhereInput | plansWhereInput[]
    OR?: plansWhereInput[]
    NOT?: plansWhereInput | plansWhereInput[]
    plan_name?: StringFilter<"plans"> | string
    created_at?: DateTimeFilter<"plans"> | Date | string
    account_ai_chat?: Account_ai_chatListRelationFilter
    account_blog_post_instances?: Account_blog_post_instancesListRelationFilter
    account_blog_posts?: Account_blog_postsListRelationFilter
    account_plans?: Account_plansListRelationFilter
    account_review_generator?: Account_review_generatorListRelationFilter
    account_social_media?: Account_social_mediaListRelationFilter
  }, "id">

  export type plansOrderByWithAggregationInput = {
    id?: SortOrder
    plan_name?: SortOrder
    created_at?: SortOrder
    _count?: plansCountOrderByAggregateInput
    _max?: plansMaxOrderByAggregateInput
    _min?: plansMinOrderByAggregateInput
  }

  export type plansScalarWhereWithAggregatesInput = {
    AND?: plansScalarWhereWithAggregatesInput | plansScalarWhereWithAggregatesInput[]
    OR?: plansScalarWhereWithAggregatesInput[]
    NOT?: plansScalarWhereWithAggregatesInput | plansScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"plans"> | string
    plan_name?: StringWithAggregatesFilter<"plans"> | string
    created_at?: DateTimeWithAggregatesFilter<"plans"> | Date | string
  }

  export type repsWhereInput = {
    AND?: repsWhereInput | repsWhereInput[]
    OR?: repsWhereInput[]
    NOT?: repsWhereInput | repsWhereInput[]
    id?: UuidFilter<"reps"> | string
    created_at?: DateTimeFilter<"reps"> | Date | string
    name?: StringFilter<"reps"> | string
    role?: StringNullableFilter<"reps"> | string | null
    status?: StringFilter<"reps"> | string
    notes?: NotesListRelationFilter
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type repsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    name?: SortOrder
    role?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: notesOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type repsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: repsWhereInput | repsWhereInput[]
    OR?: repsWhereInput[]
    NOT?: repsWhereInput | repsWhereInput[]
    created_at?: DateTimeFilter<"reps"> | Date | string
    name?: StringFilter<"reps"> | string
    role?: StringNullableFilter<"reps"> | string | null
    status?: StringFilter<"reps"> | string
    notes?: NotesListRelationFilter
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id">

  export type repsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    name?: SortOrder
    role?: SortOrderInput | SortOrder
    status?: SortOrder
    _count?: repsCountOrderByAggregateInput
    _max?: repsMaxOrderByAggregateInput
    _min?: repsMinOrderByAggregateInput
  }

  export type repsScalarWhereWithAggregatesInput = {
    AND?: repsScalarWhereWithAggregatesInput | repsScalarWhereWithAggregatesInput[]
    OR?: repsScalarWhereWithAggregatesInput[]
    NOT?: repsScalarWhereWithAggregatesInput | repsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"reps"> | string
    created_at?: DateTimeWithAggregatesFilter<"reps"> | Date | string
    name?: StringWithAggregatesFilter<"reps"> | string
    role?: StringNullableWithAggregatesFilter<"reps"> | string | null
    status?: StringWithAggregatesFilter<"reps"> | string
  }

  export type audit_log_entriesCreateInput = {
    instance_id?: string | null
    id: string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    ip_address?: string
  }

  export type audit_log_entriesUncheckedCreateInput = {
    instance_id?: string | null
    id: string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    ip_address?: string
  }

  export type audit_log_entriesUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type audit_log_entriesUncheckedUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type audit_log_entriesCreateManyInput = {
    instance_id?: string | null
    id: string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    ip_address?: string
  }

  export type audit_log_entriesUpdateManyMutationInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type audit_log_entriesUncheckedUpdateManyInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type flow_stateCreateInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutFlow_stateInput
  }

  export type flow_stateUncheckedCreateInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutFlow_stateInput
  }

  export type flow_stateUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    saml_relay_states?: saml_relay_statesUpdateManyWithoutFlow_stateNestedInput
  }

  export type flow_stateUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutFlow_stateNestedInput
  }

  export type flow_stateCreateManyInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
  }

  export type flow_stateUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
  }

  export type flow_stateUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesCreateInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
    users: usersCreateNestedOneWithoutIdentitiesInput
  }

  export type identitiesUncheckedCreateInput = {
    provider_id: string
    user_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesUpdateInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    users?: usersUpdateOneRequiredWithoutIdentitiesNestedInput
  }

  export type identitiesUncheckedUpdateInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesCreateManyInput = {
    provider_id: string
    user_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesUpdateManyMutationInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesUncheckedUpdateManyInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type instancesCreateInput = {
    id: string
    uuid?: string | null
    raw_base_config?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type instancesUncheckedCreateInput = {
    id: string
    uuid?: string | null
    raw_base_config?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type instancesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instancesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instancesCreateManyInput = {
    id: string
    uuid?: string | null
    raw_base_config?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type instancesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instancesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mfa_amr_claimsCreateInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
    sessions: sessionsCreateNestedOneWithoutMfa_amr_claimsInput
  }

  export type mfa_amr_claimsUncheckedCreateInput = {
    session_id: string
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
    sessions?: sessionsUpdateOneRequiredWithoutMfa_amr_claimsNestedInput
  }

  export type mfa_amr_claimsUncheckedUpdateInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsCreateManyInput = {
    session_id: string
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsUncheckedUpdateManyInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_challengesCreateInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    mfa_factors: mfa_factorsCreateNestedOneWithoutMfa_challengesInput
  }

  export type mfa_challengesUncheckedCreateInput = {
    id: string
    factor_id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
  }

  export type mfa_challengesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    mfa_factors?: mfa_factorsUpdateOneRequiredWithoutMfa_challengesNestedInput
  }

  export type mfa_challengesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    factor_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_challengesCreateManyInput = {
    id: string
    factor_id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
  }

  export type mfa_challengesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_challengesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    factor_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_factorsCreateInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    mfa_challenges?: mfa_challengesCreateNestedManyWithoutMfa_factorsInput
    users: usersCreateNestedOneWithoutMfa_factorsInput
  }

  export type mfa_factorsUncheckedCreateInput = {
    id: string
    user_id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    mfa_challenges?: mfa_challengesUncheckedCreateNestedManyWithoutMfa_factorsInput
  }

  export type mfa_factorsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUpdateManyWithoutMfa_factorsNestedInput
    users?: usersUpdateOneRequiredWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUncheckedUpdateManyWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsCreateManyInput = {
    id: string
    user_id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
  }

  export type mfa_factorsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mfa_factorsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensCreateInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
    sessions?: sessionsCreateNestedOneWithoutRefresh_tokensInput
  }

  export type refresh_tokensUncheckedCreateInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
    session_id?: string | null
  }

  export type refresh_tokensUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
    sessions?: sessionsUpdateOneWithoutRefresh_tokensNestedInput
  }

  export type refresh_tokensUncheckedUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensCreateManyInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
    session_id?: string | null
  }

  export type refresh_tokensUpdateManyMutationInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensUncheckedUpdateManyInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersCreateInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    sso_providers: sso_providersCreateNestedOneWithoutSaml_providersInput
  }

  export type saml_providersUncheckedCreateInput = {
    id: string
    sso_provider_id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_providersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sso_providers?: sso_providersUpdateOneRequiredWithoutSaml_providersNestedInput
  }

  export type saml_providersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_providersCreateManyInput = {
    id: string
    sso_provider_id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_providersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_providersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_relay_statesCreateInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    from_ip_address?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state?: flow_stateCreateNestedOneWithoutSaml_relay_statesInput
    sso_providers: sso_providersCreateNestedOneWithoutSaml_relay_statesInput
  }

  export type saml_relay_statesUncheckedCreateInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    from_ip_address?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type saml_relay_statesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    from_ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state?: flow_stateUpdateOneWithoutSaml_relay_statesNestedInput
    sso_providers?: sso_providersUpdateOneRequiredWithoutSaml_relay_statesNestedInput
  }

  export type saml_relay_statesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    from_ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_relay_statesCreateManyInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    from_ip_address?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type saml_relay_statesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    from_ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_relay_statesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    from_ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type schema_migrationsCreateInput = {
    version: string
  }

  export type schema_migrationsUncheckedCreateInput = {
    version: string
  }

  export type schema_migrationsUpdateInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type schema_migrationsUncheckedUpdateInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type schema_migrationsCreateManyInput = {
    version: string
  }

  export type schema_migrationsUpdateManyMutationInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type schema_migrationsUncheckedUpdateManyInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type sessionsCreateInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutSessionsInput
    users: usersCreateNestedOneWithoutSessionsInput
  }

  export type sessionsUncheckedCreateInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUpdateManyWithoutSessionsNestedInput
    users?: usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type sessionsCreateManyInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
  }

  export type sessionsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sessionsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sso_domainsCreateInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    sso_providers: sso_providersCreateNestedOneWithoutSso_domainsInput
  }

  export type sso_domainsUncheckedCreateInput = {
    id: string
    sso_provider_id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sso_providers?: sso_providersUpdateOneRequiredWithoutSso_domainsNestedInput
  }

  export type sso_domainsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsCreateManyInput = {
    id: string
    sso_provider_id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_providersCreateInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersUncheckedCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersCreateManyInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_providersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_providersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    identities?: identitiesCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    reps?: repsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    reps?: repsUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    reps?: repsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    reps?: repsUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type account_ai_chatCreateInput = {
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_ai_chatInput
    plans: plansCreateNestedOneWithoutAccount_ai_chatInput
  }

  export type account_ai_chatUncheckedCreateInput = {
    account_id: string
    plan_id: string
    created_at?: Date | string
  }

  export type account_ai_chatUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_ai_chatNestedInput
    plans?: plansUpdateOneRequiredWithoutAccount_ai_chatNestedInput
  }

  export type account_ai_chatUncheckedUpdateInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_ai_chatCreateManyInput = {
    account_id: string
    plan_id: string
    created_at?: Date | string
  }

  export type account_ai_chatUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_ai_chatUncheckedUpdateManyInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_post_instancesCreateInput = {
    blog_post_id?: string
    post_content: string
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_blog_post_instancesInput
    plans: plansCreateNestedOneWithoutAccount_blog_post_instancesInput
  }

  export type account_blog_post_instancesUncheckedCreateInput = {
    blog_post_id?: string
    account_id: string
    plan_id: string
    post_content: string
    created_at?: Date | string
  }

  export type account_blog_post_instancesUpdateInput = {
    blog_post_id?: StringFieldUpdateOperationsInput | string
    post_content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_blog_post_instancesNestedInput
    plans?: plansUpdateOneRequiredWithoutAccount_blog_post_instancesNestedInput
  }

  export type account_blog_post_instancesUncheckedUpdateInput = {
    blog_post_id?: StringFieldUpdateOperationsInput | string
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    post_content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_post_instancesCreateManyInput = {
    blog_post_id?: string
    account_id: string
    plan_id: string
    post_content: string
    created_at?: Date | string
  }

  export type account_blog_post_instancesUpdateManyMutationInput = {
    blog_post_id?: StringFieldUpdateOperationsInput | string
    post_content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_post_instancesUncheckedUpdateManyInput = {
    blog_post_id?: StringFieldUpdateOperationsInput | string
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    post_content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_postsCreateInput = {
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_blog_postsInput
    plans: plansCreateNestedOneWithoutAccount_blog_postsInput
  }

  export type account_blog_postsUncheckedCreateInput = {
    account_id: string
    plan_id: string
    created_at?: Date | string
  }

  export type account_blog_postsUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_blog_postsNestedInput
    plans?: plansUpdateOneRequiredWithoutAccount_blog_postsNestedInput
  }

  export type account_blog_postsUncheckedUpdateInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_postsCreateManyInput = {
    account_id: string
    plan_id: string
    created_at?: Date | string
  }

  export type account_blog_postsUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_postsUncheckedUpdateManyInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_plansCreateInput = {
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_plansInput
    plans: plansCreateNestedOneWithoutAccount_plansInput
  }

  export type account_plansUncheckedCreateInput = {
    account_id: string
    plan_id: string
    created_at?: Date | string
  }

  export type account_plansUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_plansNestedInput
    plans?: plansUpdateOneRequiredWithoutAccount_plansNestedInput
  }

  export type account_plansUncheckedUpdateInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_plansCreateManyInput = {
    account_id: string
    plan_id: string
    created_at?: Date | string
  }

  export type account_plansUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_plansUncheckedUpdateManyInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_review_generatorCreateInput = {
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_review_generatorInput
    plans: plansCreateNestedOneWithoutAccount_review_generatorInput
  }

  export type account_review_generatorUncheckedCreateInput = {
    account_id: string
    plan_id: string
    created_at?: Date | string
  }

  export type account_review_generatorUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_review_generatorNestedInput
    plans?: plansUpdateOneRequiredWithoutAccount_review_generatorNestedInput
  }

  export type account_review_generatorUncheckedUpdateInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_review_generatorCreateManyInput = {
    account_id: string
    plan_id: string
    created_at?: Date | string
  }

  export type account_review_generatorUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_review_generatorUncheckedUpdateManyInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_social_mediaCreateInput = {
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_social_mediaInput
    plans: plansCreateNestedOneWithoutAccount_social_mediaInput
  }

  export type account_social_mediaUncheckedCreateInput = {
    account_id: string
    plan_id: string
    created_at?: Date | string
  }

  export type account_social_mediaUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_social_mediaNestedInput
    plans?: plansUpdateOneRequiredWithoutAccount_social_mediaNestedInput
  }

  export type account_social_mediaUncheckedUpdateInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_social_mediaCreateManyInput = {
    account_id: string
    plan_id: string
    created_at?: Date | string
  }

  export type account_social_mediaUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_social_mediaUncheckedUpdateManyInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type accountsCreateInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutAccountsInput
    customer_records: customer_recordsCreateNestedOneWithoutAccountsInput
  }

  export type accountsUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_record_id: string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type accountsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    account_ai_chat?: account_ai_chatUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutAccountsNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type accountsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type accountsCreateManyInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_record_id: string
  }

  export type accountsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type accountsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
  }

  export type communicationsCreateInput = {
    id?: string
    type: string
    created_at?: Date | string
    customer_records?: customer_recordsCreateNestedOneWithoutCommunicationsInput
    marketing_campaigns?: marketing_campaignsCreateNestedOneWithoutCommunicationsInput
    communications_emails?: communications_emailsCreateNestedOneWithoutCommunicationsInput
    communications_texts?: communications_textsCreateNestedOneWithoutCommunicationsInput
  }

  export type communicationsUncheckedCreateInput = {
    id?: string
    customer_record_id?: string | null
    type: string
    created_at?: Date | string
    marketing_campaign_id?: string | null
    communications_emails?: communications_emailsUncheckedCreateNestedOneWithoutCommunicationsInput
    communications_texts?: communications_textsUncheckedCreateNestedOneWithoutCommunicationsInput
  }

  export type communicationsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_records?: customer_recordsUpdateOneWithoutCommunicationsNestedInput
    marketing_campaigns?: marketing_campaignsUpdateOneWithoutCommunicationsNestedInput
    communications_emails?: communications_emailsUpdateOneWithoutCommunicationsNestedInput
    communications_texts?: communications_textsUpdateOneWithoutCommunicationsNestedInput
  }

  export type communicationsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    customer_record_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    marketing_campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    communications_emails?: communications_emailsUncheckedUpdateOneWithoutCommunicationsNestedInput
    communications_texts?: communications_textsUncheckedUpdateOneWithoutCommunicationsNestedInput
  }

  export type communicationsCreateManyInput = {
    id?: string
    customer_record_id?: string | null
    type: string
    created_at?: Date | string
    marketing_campaign_id?: string | null
  }

  export type communicationsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communicationsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    customer_record_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    marketing_campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type communications_emailsCreateInput = {
    id?: string
    created_at?: Date | string
    email_id: string
    communications: communicationsCreateNestedOneWithoutCommunications_emailsInput
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emails_status_updatesCreateNestedManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput
  }

  export type communications_emailsUncheckedCreateInput = {
    id?: string
    communications_id: string
    created_at?: Date | string
    email_id: string
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emails_status_updatesUncheckedCreateNestedManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput
  }

  export type communications_emailsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
    communications?: communicationsUpdateOneRequiredWithoutCommunications_emailsNestedInput
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emails_status_updatesUpdateManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsNestedInput
  }

  export type communications_emailsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    communications_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emails_status_updatesUncheckedUpdateManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsNestedInput
  }

  export type communications_emailsCreateManyInput = {
    id?: string
    communications_id: string
    created_at?: Date | string
    email_id: string
  }

  export type communications_emailsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
  }

  export type communications_emailsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    communications_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
  }

  export type communications_emails_status_updatesCreateInput = {
    id?: string
    status: string
    created_at?: Date | string
    communications_emails_communications_emails_status_updates_communications_emailsTocommunications_emails: communications_emailsCreateNestedOneWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput
  }

  export type communications_emails_status_updatesUncheckedCreateInput = {
    id?: string
    communications_emails: string
    status: string
    created_at?: Date | string
  }

  export type communications_emails_status_updatesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    communications_emails_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emailsUpdateOneRequiredWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsNestedInput
  }

  export type communications_emails_status_updatesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    communications_emails?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communications_emails_status_updatesCreateManyInput = {
    id?: string
    communications_emails: string
    status: string
    created_at?: Date | string
  }

  export type communications_emails_status_updatesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communications_emails_status_updatesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    communications_emails?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communications_textsCreateInput = {
    id?: string
    status: string
    created_at?: Date | string
    communications: communicationsCreateNestedOneWithoutCommunications_textsInput
  }

  export type communications_textsUncheckedCreateInput = {
    id?: string
    communications_id: string
    status: string
    created_at?: Date | string
  }

  export type communications_textsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    communications?: communicationsUpdateOneRequiredWithoutCommunications_textsNestedInput
  }

  export type communications_textsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    communications_id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communications_textsCreateManyInput = {
    id?: string
    communications_id: string
    status: string
    created_at?: Date | string
  }

  export type communications_textsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communications_textsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    communications_id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type contact_info_emailsCreateInput = {
    id?: string
    value: string
    priority: number
    created_at?: Date | string
    email_id?: string
    contacts: contactsCreateNestedOneWithoutContact_info_emailsInput
  }

  export type contact_info_emailsUncheckedCreateInput = {
    id?: string
    contact_id: string
    value: string
    priority: number
    created_at?: Date | string
    email_id?: string
  }

  export type contact_info_emailsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
    contacts?: contactsUpdateOneRequiredWithoutContact_info_emailsNestedInput
  }

  export type contact_info_emailsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    contact_id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
  }

  export type contact_info_emailsCreateManyInput = {
    id?: string
    contact_id: string
    value: string
    priority: number
    created_at?: Date | string
    email_id?: string
  }

  export type contact_info_emailsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
  }

  export type contact_info_emailsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    contact_id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
  }

  export type contact_info_phonesCreateInput = {
    id?: string
    type: string
    value: string
    priority: number
    created_at?: Date | string
    contacts: contactsCreateNestedOneWithoutContact_info_phonesInput
  }

  export type contact_info_phonesUncheckedCreateInput = {
    id?: string
    contact_id: string
    type: string
    value: string
    priority: number
    created_at?: Date | string
  }

  export type contact_info_phonesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    contacts?: contactsUpdateOneRequiredWithoutContact_info_phonesNestedInput
  }

  export type contact_info_phonesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    contact_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type contact_info_phonesCreateManyInput = {
    id?: string
    contact_id: string
    type: string
    value: string
    priority: number
    created_at?: Date | string
  }

  export type contact_info_phonesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type contact_info_phonesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    contact_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type contactsCreateInput = {
    id?: string
    name: string
    position: string
    priority: number
    created_at?: Date | string
    contact_info_emails?: contact_info_emailsCreateNestedManyWithoutContactsInput
    contact_info_phones?: contact_info_phonesCreateNestedManyWithoutContactsInput
    customer_records: customer_recordsCreateNestedOneWithoutContactsInput
  }

  export type contactsUncheckedCreateInput = {
    id?: string
    name: string
    position: string
    priority: number
    created_at?: Date | string
    customer_record_id: string
    contact_info_emails?: contact_info_emailsUncheckedCreateNestedManyWithoutContactsInput
    contact_info_phones?: contact_info_phonesUncheckedCreateNestedManyWithoutContactsInput
  }

  export type contactsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    contact_info_emails?: contact_info_emailsUpdateManyWithoutContactsNestedInput
    contact_info_phones?: contact_info_phonesUpdateManyWithoutContactsNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutContactsNestedInput
  }

  export type contactsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_record_id?: StringFieldUpdateOperationsInput | string
    contact_info_emails?: contact_info_emailsUncheckedUpdateManyWithoutContactsNestedInput
    contact_info_phones?: contact_info_phonesUncheckedUpdateManyWithoutContactsNestedInput
  }

  export type contactsCreateManyInput = {
    id?: string
    name: string
    position: string
    priority: number
    created_at?: Date | string
    customer_record_id: string
  }

  export type contactsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type contactsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_record_id?: StringFieldUpdateOperationsInput | string
  }

  export type customer_recordsCreateInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsCreateNestedOneWithoutCustomer_recordsInput
    communications?: communicationsCreateNestedManyWithoutCustomer_recordsInput
    contacts?: contactsCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsCreateNestedOneWithoutCustomer_recordsInput
    notes?: notesCreateNestedManyWithoutCustomer_recordsInput
    opportunities?: opportunitiesCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsUncheckedCreateInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    communications?: communicationsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    contacts?: contactsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    notes?: notesUncheckedCreateNestedManyWithoutCustomer_recordsInput
    opportunities?: opportunitiesUncheckedCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUpdateOneWithoutCustomer_recordsNestedInput
    communications?: communicationsUpdateManyWithoutCustomer_recordsNestedInput
    contacts?: contactsUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUpdateOneWithoutCustomer_recordsNestedInput
    notes?: notesUpdateManyWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type customer_recordsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    communications?: communicationsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    contacts?: contactsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    notes?: notesUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUncheckedUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type customer_recordsCreateManyInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
  }

  export type customer_recordsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
  }

  export type customer_recordsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
  }

  export type email_templatesCreateInput = {
    id?: string
    name: string
    category: string
    created_at?: Date | string
  }

  export type email_templatesUncheckedCreateInput = {
    id?: string
    name: string
    category: string
    created_at?: Date | string
  }

  export type email_templatesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type email_templatesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type email_templatesCreateManyInput = {
    id?: string
    name: string
    category: string
    created_at?: Date | string
  }

  export type email_templatesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type email_templatesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type leadsCreateInput = {
    id?: string
    created_at?: Date | string
    stage: string
    active?: boolean
    customer_records: customer_recordsCreateNestedOneWithoutLeadsInput
  }

  export type leadsUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    stage: string
    active?: boolean
    customer_record_id: string
  }

  export type leadsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_records?: customer_recordsUpdateOneRequiredWithoutLeadsNestedInput
  }

  export type leadsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
  }

  export type leadsCreateManyInput = {
    id?: string
    created_at?: Date | string
    stage: string
    active?: boolean
    customer_record_id: string
  }

  export type leadsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type leadsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
  }

  export type marketing_campaignsCreateInput = {
    id?: string
    created_at?: Date | string
    communications?: communicationsCreateNestedManyWithoutMarketing_campaignsInput
  }

  export type marketing_campaignsUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    communications?: communicationsUncheckedCreateNestedManyWithoutMarketing_campaignsInput
  }

  export type marketing_campaignsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    communications?: communicationsUpdateManyWithoutMarketing_campaignsNestedInput
  }

  export type marketing_campaignsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    communications?: communicationsUncheckedUpdateManyWithoutMarketing_campaignsNestedInput
  }

  export type marketing_campaignsCreateManyInput = {
    id?: string
    created_at?: Date | string
  }

  export type marketing_campaignsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type marketing_campaignsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notesCreateInput = {
    id?: string
    note: string
    created_at?: Date | string
    reps?: repsCreateNestedOneWithoutNotesInput
    customer_records: customer_recordsCreateNestedOneWithoutNotesInput
  }

  export type notesUncheckedCreateInput = {
    id?: string
    author?: string | null
    note: string
    created_at?: Date | string
    customer_record_id: string
  }

  export type notesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    reps?: repsUpdateOneWithoutNotesNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutNotesNestedInput
  }

  export type notesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    note?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_record_id?: StringFieldUpdateOperationsInput | string
  }

  export type notesCreateManyInput = {
    id?: string
    author?: string | null
    note: string
    created_at?: Date | string
    customer_record_id: string
  }

  export type notesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    note?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_record_id?: StringFieldUpdateOperationsInput | string
  }

  export type opportunitiesCreateInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_records: customer_recordsCreateNestedOneWithoutOpportunitiesInput
  }

  export type opportunitiesUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_record_id: string
  }

  export type opportunitiesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_records?: customer_recordsUpdateOneRequiredWithoutOpportunitiesNestedInput
  }

  export type opportunitiesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
  }

  export type opportunitiesCreateManyInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_record_id: string
  }

  export type opportunitiesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type opportunitiesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
  }

  export type plansCreateInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutPlansInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutPlansInput
    account_plans?: account_plansCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutPlansInput
  }

  export type plansUncheckedCreateInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutPlansInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutPlansInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutPlansInput
  }

  export type plansUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUpdateManyWithoutPlansNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutPlansNestedInput
  }

  export type plansUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutPlansNestedInput
  }

  export type plansCreateManyInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
  }

  export type plansUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type plansUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type repsCreateInput = {
    created_at?: Date | string
    name: string
    role?: string | null
    status: string
    notes?: notesCreateNestedManyWithoutRepsInput
    users: usersCreateNestedOneWithoutRepsInput
  }

  export type repsUncheckedCreateInput = {
    id: string
    created_at?: Date | string
    name: string
    role?: string | null
    status: string
    notes?: notesUncheckedCreateNestedManyWithoutRepsInput
  }

  export type repsUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: notesUpdateManyWithoutRepsNestedInput
    users?: usersUpdateOneRequiredWithoutRepsNestedInput
  }

  export type repsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: notesUncheckedUpdateManyWithoutRepsNestedInput
  }

  export type repsCreateManyInput = {
    id: string
    created_at?: Date | string
    name: string
    role?: string | null
    status: string
  }

  export type repsUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type repsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type audit_log_entriesCountOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    payload?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
  }

  export type audit_log_entriesMaxOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
  }

  export type audit_log_entriesMinOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type Enumcode_challenge_methodFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodFilter<$PrismaModel> | $Enums.code_challenge_method
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Saml_relay_statesListRelationFilter = {
    every?: saml_relay_statesWhereInput
    some?: saml_relay_statesWhereInput
    none?: saml_relay_statesWhereInput
  }

  export type saml_relay_statesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type flow_stateCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrder
    provider_refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
  }

  export type flow_stateMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrder
    provider_refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
  }

  export type flow_stateMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrder
    provider_refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
  }

  export type Enumcode_challenge_methodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodWithAggregatesFilter<$PrismaModel> | $Enums.code_challenge_method
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
    _max?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UsersRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type identitiesProvider_idProviderCompoundUniqueInput = {
    provider_id: string
    provider: string
  }

  export type identitiesCountOrderByAggregateInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    identity_data?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    id?: SortOrder
  }

  export type identitiesMaxOrderByAggregateInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    id?: SortOrder
  }

  export type identitiesMinOrderByAggregateInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    id?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type instancesCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    raw_base_config?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type instancesMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    raw_base_config?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type instancesMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    raw_base_config?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SessionsRelationFilter = {
    is?: sessionsWhereInput
    isNot?: sessionsWhereInput
  }

  export type mfa_amr_claimsSession_idAuthentication_methodCompoundUniqueInput = {
    session_id: string
    authentication_method: string
  }

  export type mfa_amr_claimsCountOrderByAggregateInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
  }

  export type mfa_amr_claimsMaxOrderByAggregateInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
  }

  export type mfa_amr_claimsMinOrderByAggregateInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Mfa_factorsRelationFilter = {
    is?: mfa_factorsWhereInput
    isNot?: mfa_factorsWhereInput
  }

  export type mfa_challengesCountOrderByAggregateInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrder
    ip_address?: SortOrder
  }

  export type mfa_challengesMaxOrderByAggregateInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrder
    ip_address?: SortOrder
  }

  export type mfa_challengesMinOrderByAggregateInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrder
    ip_address?: SortOrder
  }

  export type Enumfactor_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeFilter<$PrismaModel> | $Enums.factor_type
  }

  export type Enumfactor_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusFilter<$PrismaModel> | $Enums.factor_status
  }

  export type Mfa_challengesListRelationFilter = {
    every?: mfa_challengesWhereInput
    some?: mfa_challengesWhereInput
    none?: mfa_challengesWhereInput
  }

  export type mfa_challengesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mfa_factorsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrder
  }

  export type mfa_factorsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrder
  }

  export type mfa_factorsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrder
  }

  export type Enumfactor_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeWithAggregatesFilter<$PrismaModel> | $Enums.factor_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_typeFilter<$PrismaModel>
    _max?: NestedEnumfactor_typeFilter<$PrismaModel>
  }

  export type Enumfactor_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusWithAggregatesFilter<$PrismaModel> | $Enums.factor_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_statusFilter<$PrismaModel>
    _max?: NestedEnumfactor_statusFilter<$PrismaModel>
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type SessionsNullableRelationFilter = {
    is?: sessionsWhereInput | null
    isNot?: sessionsWhereInput | null
  }

  export type refresh_tokensCountOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    parent?: SortOrder
    session_id?: SortOrder
  }

  export type refresh_tokensAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type refresh_tokensMaxOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    parent?: SortOrder
    session_id?: SortOrder
  }

  export type refresh_tokensMinOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    parent?: SortOrder
    session_id?: SortOrder
  }

  export type refresh_tokensSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type Sso_providersRelationFilter = {
    is?: sso_providersWhereInput
    isNot?: sso_providersWhereInput
  }

  export type saml_providersCountOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrder
    attribute_mapping?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type saml_providersMaxOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type saml_providersMinOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type Flow_stateNullableRelationFilter = {
    is?: flow_stateWhereInput | null
    isNot?: flow_stateWhereInput | null
  }

  export type saml_relay_statesCountOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrder
    redirect_to?: SortOrder
    from_ip_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    flow_state_id?: SortOrder
  }

  export type saml_relay_statesMaxOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrder
    redirect_to?: SortOrder
    from_ip_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    flow_state_id?: SortOrder
  }

  export type saml_relay_statesMinOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrder
    redirect_to?: SortOrder
    from_ip_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    flow_state_id?: SortOrder
  }

  export type schema_migrationsCountOrderByAggregateInput = {
    version?: SortOrder
  }

  export type schema_migrationsMaxOrderByAggregateInput = {
    version?: SortOrder
  }

  export type schema_migrationsMinOrderByAggregateInput = {
    version?: SortOrder
  }

  export type Enumaal_levelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableFilter<$PrismaModel> | $Enums.aal_level | null
  }

  export type Mfa_amr_claimsListRelationFilter = {
    every?: mfa_amr_claimsWhereInput
    some?: mfa_amr_claimsWhereInput
    none?: mfa_amr_claimsWhereInput
  }

  export type Refresh_tokensListRelationFilter = {
    every?: refresh_tokensWhereInput
    some?: refresh_tokensWhereInput
    none?: refresh_tokensWhereInput
  }

  export type mfa_amr_claimsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type refresh_tokensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sessionsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    factor_id?: SortOrder
    aal?: SortOrder
    not_after?: SortOrder
    refreshed_at?: SortOrder
    user_agent?: SortOrder
    ip?: SortOrder
    tag?: SortOrder
  }

  export type sessionsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    factor_id?: SortOrder
    aal?: SortOrder
    not_after?: SortOrder
    refreshed_at?: SortOrder
    user_agent?: SortOrder
    ip?: SortOrder
    tag?: SortOrder
  }

  export type sessionsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    factor_id?: SortOrder
    aal?: SortOrder
    not_after?: SortOrder
    refreshed_at?: SortOrder
    user_agent?: SortOrder
    ip?: SortOrder
    tag?: SortOrder
  }

  export type Enumaal_levelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableWithAggregatesFilter<$PrismaModel> | $Enums.aal_level | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumaal_levelNullableFilter<$PrismaModel>
    _max?: NestedEnumaal_levelNullableFilter<$PrismaModel>
  }

  export type sso_domainsCountOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_domainsMaxOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_domainsMinOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type Saml_providersListRelationFilter = {
    every?: saml_providersWhereInput
    some?: saml_providersWhereInput
    none?: saml_providersWhereInput
  }

  export type Sso_domainsListRelationFilter = {
    every?: sso_domainsWhereInput
    some?: sso_domainsWhereInput
    none?: sso_domainsWhereInput
  }

  export type saml_providersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sso_domainsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sso_providersCountOrderByAggregateInput = {
    id?: SortOrder
    resource_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_providersMaxOrderByAggregateInput = {
    id?: SortOrder
    resource_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_providersMinOrderByAggregateInput = {
    id?: SortOrder
    resource_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IdentitiesListRelationFilter = {
    every?: identitiesWhereInput
    some?: identitiesWhereInput
    none?: identitiesWhereInput
  }

  export type Mfa_factorsListRelationFilter = {
    every?: mfa_factorsWhereInput
    some?: mfa_factorsWhereInput
    none?: mfa_factorsWhereInput
  }

  export type SessionsListRelationFilter = {
    every?: sessionsWhereInput
    some?: sessionsWhereInput
    none?: sessionsWhereInput
  }

  export type RepsNullableRelationFilter = {
    is?: repsWhereInput | null
    isNot?: repsWhereInput | null
  }

  export type identitiesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mfa_factorsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sessionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    aud?: SortOrder
    role?: SortOrder
    email?: SortOrder
    encrypted_password?: SortOrder
    email_confirmed_at?: SortOrder
    invited_at?: SortOrder
    confirmation_token?: SortOrder
    confirmation_sent_at?: SortOrder
    recovery_token?: SortOrder
    recovery_sent_at?: SortOrder
    email_change_token_new?: SortOrder
    email_change?: SortOrder
    email_change_sent_at?: SortOrder
    last_sign_in_at?: SortOrder
    raw_app_meta_data?: SortOrder
    raw_user_meta_data?: SortOrder
    is_super_admin?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    phone?: SortOrder
    phone_confirmed_at?: SortOrder
    phone_change?: SortOrder
    phone_change_token?: SortOrder
    phone_change_sent_at?: SortOrder
    confirmed_at?: SortOrder
    email_change_token_current?: SortOrder
    email_change_confirm_status?: SortOrder
    banned_until?: SortOrder
    reauthentication_token?: SortOrder
    reauthentication_sent_at?: SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    email_change_confirm_status?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    aud?: SortOrder
    role?: SortOrder
    email?: SortOrder
    encrypted_password?: SortOrder
    email_confirmed_at?: SortOrder
    invited_at?: SortOrder
    confirmation_token?: SortOrder
    confirmation_sent_at?: SortOrder
    recovery_token?: SortOrder
    recovery_sent_at?: SortOrder
    email_change_token_new?: SortOrder
    email_change?: SortOrder
    email_change_sent_at?: SortOrder
    last_sign_in_at?: SortOrder
    is_super_admin?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    phone?: SortOrder
    phone_confirmed_at?: SortOrder
    phone_change?: SortOrder
    phone_change_token?: SortOrder
    phone_change_sent_at?: SortOrder
    confirmed_at?: SortOrder
    email_change_token_current?: SortOrder
    email_change_confirm_status?: SortOrder
    banned_until?: SortOrder
    reauthentication_token?: SortOrder
    reauthentication_sent_at?: SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    aud?: SortOrder
    role?: SortOrder
    email?: SortOrder
    encrypted_password?: SortOrder
    email_confirmed_at?: SortOrder
    invited_at?: SortOrder
    confirmation_token?: SortOrder
    confirmation_sent_at?: SortOrder
    recovery_token?: SortOrder
    recovery_sent_at?: SortOrder
    email_change_token_new?: SortOrder
    email_change?: SortOrder
    email_change_sent_at?: SortOrder
    last_sign_in_at?: SortOrder
    is_super_admin?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    phone?: SortOrder
    phone_confirmed_at?: SortOrder
    phone_change?: SortOrder
    phone_change_token?: SortOrder
    phone_change_sent_at?: SortOrder
    confirmed_at?: SortOrder
    email_change_token_current?: SortOrder
    email_change_confirm_status?: SortOrder
    banned_until?: SortOrder
    reauthentication_token?: SortOrder
    reauthentication_sent_at?: SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    email_change_confirm_status?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type AccountsRelationFilter = {
    is?: accountsWhereInput
    isNot?: accountsWhereInput
  }

  export type PlansRelationFilter = {
    is?: plansWhereInput
    isNot?: plansWhereInput
  }

  export type account_ai_chatAccount_idPlan_idCompoundUniqueInput = {
    account_id: string
    plan_id: string
  }

  export type account_ai_chatCountOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_ai_chatMaxOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_ai_chatMinOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_blog_post_instancesCountOrderByAggregateInput = {
    blog_post_id?: SortOrder
    account_id?: SortOrder
    plan_id?: SortOrder
    post_content?: SortOrder
    created_at?: SortOrder
  }

  export type account_blog_post_instancesMaxOrderByAggregateInput = {
    blog_post_id?: SortOrder
    account_id?: SortOrder
    plan_id?: SortOrder
    post_content?: SortOrder
    created_at?: SortOrder
  }

  export type account_blog_post_instancesMinOrderByAggregateInput = {
    blog_post_id?: SortOrder
    account_id?: SortOrder
    plan_id?: SortOrder
    post_content?: SortOrder
    created_at?: SortOrder
  }

  export type account_blog_postsAccount_idPlan_idCompoundUniqueInput = {
    account_id: string
    plan_id: string
  }

  export type account_blog_postsCountOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_blog_postsMaxOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_blog_postsMinOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_plansAccount_idPlan_idCompoundUniqueInput = {
    account_id: string
    plan_id: string
  }

  export type account_plansCountOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_plansMaxOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_plansMinOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_review_generatorAccount_idPlan_idCompoundUniqueInput = {
    account_id: string
    plan_id: string
  }

  export type account_review_generatorCountOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_review_generatorMaxOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_review_generatorMinOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_social_mediaAccount_idPlan_idCompoundUniqueInput = {
    account_id: string
    plan_id: string
  }

  export type account_social_mediaCountOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_social_mediaMaxOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type account_social_mediaMinOrderByAggregateInput = {
    account_id?: SortOrder
    plan_id?: SortOrder
    created_at?: SortOrder
  }

  export type Account_ai_chatListRelationFilter = {
    every?: account_ai_chatWhereInput
    some?: account_ai_chatWhereInput
    none?: account_ai_chatWhereInput
  }

  export type Account_blog_post_instancesListRelationFilter = {
    every?: account_blog_post_instancesWhereInput
    some?: account_blog_post_instancesWhereInput
    none?: account_blog_post_instancesWhereInput
  }

  export type Account_blog_postsListRelationFilter = {
    every?: account_blog_postsWhereInput
    some?: account_blog_postsWhereInput
    none?: account_blog_postsWhereInput
  }

  export type Account_plansListRelationFilter = {
    every?: account_plansWhereInput
    some?: account_plansWhereInput
    none?: account_plansWhereInput
  }

  export type Account_review_generatorListRelationFilter = {
    every?: account_review_generatorWhereInput
    some?: account_review_generatorWhereInput
    none?: account_review_generatorWhereInput
  }

  export type Account_social_mediaListRelationFilter = {
    every?: account_social_mediaWhereInput
    some?: account_social_mediaWhereInput
    none?: account_social_mediaWhereInput
  }

  export type Customer_recordsRelationFilter = {
    is?: customer_recordsWhereInput
    isNot?: customer_recordsWhereInput
  }

  export type account_ai_chatOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type account_blog_post_instancesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type account_blog_postsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type account_plansOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type account_review_generatorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type account_social_mediaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type accountsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
  }

  export type accountsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
  }

  export type accountsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
  }

  export type Customer_recordsNullableRelationFilter = {
    is?: customer_recordsWhereInput | null
    isNot?: customer_recordsWhereInput | null
  }

  export type Marketing_campaignsNullableRelationFilter = {
    is?: marketing_campaignsWhereInput | null
    isNot?: marketing_campaignsWhereInput | null
  }

  export type Communications_emailsNullableRelationFilter = {
    is?: communications_emailsWhereInput | null
    isNot?: communications_emailsWhereInput | null
  }

  export type Communications_textsNullableRelationFilter = {
    is?: communications_textsWhereInput | null
    isNot?: communications_textsWhereInput | null
  }

  export type communicationsCountOrderByAggregateInput = {
    id?: SortOrder
    customer_record_id?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    marketing_campaign_id?: SortOrder
  }

  export type communicationsMaxOrderByAggregateInput = {
    id?: SortOrder
    customer_record_id?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    marketing_campaign_id?: SortOrder
  }

  export type communicationsMinOrderByAggregateInput = {
    id?: SortOrder
    customer_record_id?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    marketing_campaign_id?: SortOrder
  }

  export type CommunicationsRelationFilter = {
    is?: communicationsWhereInput
    isNot?: communicationsWhereInput
  }

  export type Communications_emails_status_updatesListRelationFilter = {
    every?: communications_emails_status_updatesWhereInput
    some?: communications_emails_status_updatesWhereInput
    none?: communications_emails_status_updatesWhereInput
  }

  export type communications_emails_status_updatesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type communications_emailsCountOrderByAggregateInput = {
    id?: SortOrder
    communications_id?: SortOrder
    created_at?: SortOrder
    email_id?: SortOrder
  }

  export type communications_emailsMaxOrderByAggregateInput = {
    id?: SortOrder
    communications_id?: SortOrder
    created_at?: SortOrder
    email_id?: SortOrder
  }

  export type communications_emailsMinOrderByAggregateInput = {
    id?: SortOrder
    communications_id?: SortOrder
    created_at?: SortOrder
    email_id?: SortOrder
  }

  export type Communications_emailsRelationFilter = {
    is?: communications_emailsWhereInput
    isNot?: communications_emailsWhereInput
  }

  export type communications_emails_status_updatesCountOrderByAggregateInput = {
    id?: SortOrder
    communications_emails?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type communications_emails_status_updatesMaxOrderByAggregateInput = {
    id?: SortOrder
    communications_emails?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type communications_emails_status_updatesMinOrderByAggregateInput = {
    id?: SortOrder
    communications_emails?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type communications_textsCountOrderByAggregateInput = {
    id?: SortOrder
    communications_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type communications_textsMaxOrderByAggregateInput = {
    id?: SortOrder
    communications_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type communications_textsMinOrderByAggregateInput = {
    id?: SortOrder
    communications_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type ContactsRelationFilter = {
    is?: contactsWhereInput
    isNot?: contactsWhereInput
  }

  export type contact_info_emailsCountOrderByAggregateInput = {
    id?: SortOrder
    contact_id?: SortOrder
    value?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    email_id?: SortOrder
  }

  export type contact_info_emailsAvgOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type contact_info_emailsMaxOrderByAggregateInput = {
    id?: SortOrder
    contact_id?: SortOrder
    value?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    email_id?: SortOrder
  }

  export type contact_info_emailsMinOrderByAggregateInput = {
    id?: SortOrder
    contact_id?: SortOrder
    value?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    email_id?: SortOrder
  }

  export type contact_info_emailsSumOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type contact_info_phonesCountOrderByAggregateInput = {
    id?: SortOrder
    contact_id?: SortOrder
    type?: SortOrder
    value?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
  }

  export type contact_info_phonesAvgOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type contact_info_phonesMaxOrderByAggregateInput = {
    id?: SortOrder
    contact_id?: SortOrder
    type?: SortOrder
    value?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
  }

  export type contact_info_phonesMinOrderByAggregateInput = {
    id?: SortOrder
    contact_id?: SortOrder
    type?: SortOrder
    value?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
  }

  export type contact_info_phonesSumOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type Contact_info_emailsListRelationFilter = {
    every?: contact_info_emailsWhereInput
    some?: contact_info_emailsWhereInput
    none?: contact_info_emailsWhereInput
  }

  export type Contact_info_phonesListRelationFilter = {
    every?: contact_info_phonesWhereInput
    some?: contact_info_phonesWhereInput
    none?: contact_info_phonesWhereInput
  }

  export type contact_info_emailsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type contact_info_phonesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type contactsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    position?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    customer_record_id?: SortOrder
  }

  export type contactsAvgOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type contactsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    position?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    customer_record_id?: SortOrder
  }

  export type contactsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    position?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    customer_record_id?: SortOrder
  }

  export type contactsSumOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type AccountsNullableRelationFilter = {
    is?: accountsWhereInput | null
    isNot?: accountsWhereInput | null
  }

  export type CommunicationsListRelationFilter = {
    every?: communicationsWhereInput
    some?: communicationsWhereInput
    none?: communicationsWhereInput
  }

  export type ContactsListRelationFilter = {
    every?: contactsWhereInput
    some?: contactsWhereInput
    none?: contactsWhereInput
  }

  export type LeadsNullableRelationFilter = {
    is?: leadsWhereInput | null
    isNot?: leadsWhereInput | null
  }

  export type NotesListRelationFilter = {
    every?: notesWhereInput
    some?: notesWhereInput
    none?: notesWhereInput
  }

  export type OpportunitiesNullableRelationFilter = {
    is?: opportunitiesWhereInput | null
    isNot?: opportunitiesWhereInput | null
  }

  export type communicationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type contactsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type notesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type customer_recordsCountOrderByAggregateInput = {
    id?: SortOrder
    business_name?: SortOrder
    active?: SortOrder
    stage?: SortOrder
    created_at?: SortOrder
    business_owner_name?: SortOrder
  }

  export type customer_recordsMaxOrderByAggregateInput = {
    id?: SortOrder
    business_name?: SortOrder
    active?: SortOrder
    stage?: SortOrder
    created_at?: SortOrder
    business_owner_name?: SortOrder
  }

  export type customer_recordsMinOrderByAggregateInput = {
    id?: SortOrder
    business_name?: SortOrder
    active?: SortOrder
    stage?: SortOrder
    created_at?: SortOrder
    business_owner_name?: SortOrder
  }

  export type email_templatesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    created_at?: SortOrder
  }

  export type email_templatesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    created_at?: SortOrder
  }

  export type email_templatesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    created_at?: SortOrder
  }

  export type leadsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
  }

  export type leadsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
  }

  export type leadsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
  }

  export type marketing_campaignsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
  }

  export type marketing_campaignsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
  }

  export type marketing_campaignsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
  }

  export type notesCountOrderByAggregateInput = {
    id?: SortOrder
    author?: SortOrder
    note?: SortOrder
    created_at?: SortOrder
    customer_record_id?: SortOrder
  }

  export type notesMaxOrderByAggregateInput = {
    id?: SortOrder
    author?: SortOrder
    note?: SortOrder
    created_at?: SortOrder
    customer_record_id?: SortOrder
  }

  export type notesMinOrderByAggregateInput = {
    id?: SortOrder
    author?: SortOrder
    note?: SortOrder
    created_at?: SortOrder
    customer_record_id?: SortOrder
  }

  export type opportunitiesCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
  }

  export type opportunitiesMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
  }

  export type opportunitiesMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    stage?: SortOrder
    active?: SortOrder
    customer_record_id?: SortOrder
  }

  export type plansCountOrderByAggregateInput = {
    id?: SortOrder
    plan_name?: SortOrder
    created_at?: SortOrder
  }

  export type plansMaxOrderByAggregateInput = {
    id?: SortOrder
    plan_name?: SortOrder
    created_at?: SortOrder
  }

  export type plansMinOrderByAggregateInput = {
    id?: SortOrder
    plan_name?: SortOrder
    created_at?: SortOrder
  }

  export type repsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    name?: SortOrder
    role?: SortOrder
    status?: SortOrder
  }

  export type repsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    name?: SortOrder
    role?: SortOrder
    status?: SortOrder
  }

  export type repsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    name?: SortOrder
    role?: SortOrder
    status?: SortOrder
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type saml_relay_statesCreateNestedManyWithoutFlow_stateInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type saml_relay_statesUncheckedCreateNestedManyWithoutFlow_stateInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type Enumcode_challenge_methodFieldUpdateOperationsInput = {
    set?: $Enums.code_challenge_method
  }

  export type saml_relay_statesUpdateManyWithoutFlow_stateNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput | saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutFlow_stateNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput | saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutIdentitiesInput = {
    create?: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
    connectOrCreate?: usersCreateOrConnectWithoutIdentitiesInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutIdentitiesNestedInput = {
    create?: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
    connectOrCreate?: usersCreateOrConnectWithoutIdentitiesInput
    upsert?: usersUpsertWithoutIdentitiesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutIdentitiesInput, usersUpdateWithoutIdentitiesInput>, usersUncheckedUpdateWithoutIdentitiesInput>
  }

  export type sessionsCreateNestedOneWithoutMfa_amr_claimsInput = {
    create?: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutMfa_amr_claimsInput
    connect?: sessionsWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type sessionsUpdateOneRequiredWithoutMfa_amr_claimsNestedInput = {
    create?: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutMfa_amr_claimsInput
    upsert?: sessionsUpsertWithoutMfa_amr_claimsInput
    connect?: sessionsWhereUniqueInput
    update?: XOR<XOR<sessionsUpdateToOneWithWhereWithoutMfa_amr_claimsInput, sessionsUpdateWithoutMfa_amr_claimsInput>, sessionsUncheckedUpdateWithoutMfa_amr_claimsInput>
  }

  export type mfa_factorsCreateNestedOneWithoutMfa_challengesInput = {
    create?: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutMfa_challengesInput
    connect?: mfa_factorsWhereUniqueInput
  }

  export type mfa_factorsUpdateOneRequiredWithoutMfa_challengesNestedInput = {
    create?: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutMfa_challengesInput
    upsert?: mfa_factorsUpsertWithoutMfa_challengesInput
    connect?: mfa_factorsWhereUniqueInput
    update?: XOR<XOR<mfa_factorsUpdateToOneWithWhereWithoutMfa_challengesInput, mfa_factorsUpdateWithoutMfa_challengesInput>, mfa_factorsUncheckedUpdateWithoutMfa_challengesInput>
  }

  export type mfa_challengesCreateNestedManyWithoutMfa_factorsInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutMfa_factorsInput = {
    create?: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
    connectOrCreate?: usersCreateOrConnectWithoutMfa_factorsInput
    connect?: usersWhereUniqueInput
  }

  export type mfa_challengesUncheckedCreateNestedManyWithoutMfa_factorsInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
  }

  export type Enumfactor_typeFieldUpdateOperationsInput = {
    set?: $Enums.factor_type
  }

  export type Enumfactor_statusFieldUpdateOperationsInput = {
    set?: $Enums.factor_status
  }

  export type mfa_challengesUpdateManyWithoutMfa_factorsNestedInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    upsert?: mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    set?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    disconnect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    delete?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    update?: mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput[]
    updateMany?: mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput | mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput[]
    deleteMany?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutMfa_factorsNestedInput = {
    create?: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
    connectOrCreate?: usersCreateOrConnectWithoutMfa_factorsInput
    upsert?: usersUpsertWithoutMfa_factorsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutMfa_factorsInput, usersUpdateWithoutMfa_factorsInput>, usersUncheckedUpdateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUncheckedUpdateManyWithoutMfa_factorsNestedInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    upsert?: mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    set?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    disconnect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    delete?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    update?: mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput[]
    updateMany?: mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput | mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput[]
    deleteMany?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
  }

  export type sessionsCreateNestedOneWithoutRefresh_tokensInput = {
    create?: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutRefresh_tokensInput
    connect?: sessionsWhereUniqueInput
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type sessionsUpdateOneWithoutRefresh_tokensNestedInput = {
    create?: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutRefresh_tokensInput
    upsert?: sessionsUpsertWithoutRefresh_tokensInput
    disconnect?: sessionsWhereInput | boolean
    delete?: sessionsWhereInput | boolean
    connect?: sessionsWhereUniqueInput
    update?: XOR<XOR<sessionsUpdateToOneWithWhereWithoutRefresh_tokensInput, sessionsUpdateWithoutRefresh_tokensInput>, sessionsUncheckedUpdateWithoutRefresh_tokensInput>
  }

  export type sso_providersCreateNestedOneWithoutSaml_providersInput = {
    create?: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_providersInput
    connect?: sso_providersWhereUniqueInput
  }

  export type sso_providersUpdateOneRequiredWithoutSaml_providersNestedInput = {
    create?: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_providersInput
    upsert?: sso_providersUpsertWithoutSaml_providersInput
    connect?: sso_providersWhereUniqueInput
    update?: XOR<XOR<sso_providersUpdateToOneWithWhereWithoutSaml_providersInput, sso_providersUpdateWithoutSaml_providersInput>, sso_providersUncheckedUpdateWithoutSaml_providersInput>
  }

  export type flow_stateCreateNestedOneWithoutSaml_relay_statesInput = {
    create?: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: flow_stateCreateOrConnectWithoutSaml_relay_statesInput
    connect?: flow_stateWhereUniqueInput
  }

  export type sso_providersCreateNestedOneWithoutSaml_relay_statesInput = {
    create?: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_relay_statesInput
    connect?: sso_providersWhereUniqueInput
  }

  export type flow_stateUpdateOneWithoutSaml_relay_statesNestedInput = {
    create?: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: flow_stateCreateOrConnectWithoutSaml_relay_statesInput
    upsert?: flow_stateUpsertWithoutSaml_relay_statesInput
    disconnect?: flow_stateWhereInput | boolean
    delete?: flow_stateWhereInput | boolean
    connect?: flow_stateWhereUniqueInput
    update?: XOR<XOR<flow_stateUpdateToOneWithWhereWithoutSaml_relay_statesInput, flow_stateUpdateWithoutSaml_relay_statesInput>, flow_stateUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type sso_providersUpdateOneRequiredWithoutSaml_relay_statesNestedInput = {
    create?: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_relay_statesInput
    upsert?: sso_providersUpsertWithoutSaml_relay_statesInput
    connect?: sso_providersWhereUniqueInput
    update?: XOR<XOR<sso_providersUpdateToOneWithWhereWithoutSaml_relay_statesInput, sso_providersUpdateWithoutSaml_relay_statesInput>, sso_providersUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type mfa_amr_claimsCreateNestedManyWithoutSessionsInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
  }

  export type refresh_tokensCreateNestedManyWithoutSessionsInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutSessionsInput = {
    create?: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSessionsInput
    connect?: usersWhereUniqueInput
  }

  export type mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
  }

  export type refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
  }

  export type NullableEnumaal_levelFieldUpdateOperationsInput = {
    set?: $Enums.aal_level | null
  }

  export type mfa_amr_claimsUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    upsert?: mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    set?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    disconnect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    delete?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    update?: mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput | mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
  }

  export type refresh_tokensUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    upsert?: refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput | refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    set?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    disconnect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    delete?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    update?: refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput | refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: refresh_tokensUpdateManyWithWhereWithoutSessionsInput | refresh_tokensUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSessionsInput
    upsert?: usersUpsertWithoutSessionsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSessionsInput, usersUpdateWithoutSessionsInput>, usersUncheckedUpdateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    upsert?: mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    set?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    disconnect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    delete?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    update?: mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput | mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
  }

  export type refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    upsert?: refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput | refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    set?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    disconnect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    delete?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    update?: refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput | refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: refresh_tokensUpdateManyWithWhereWithoutSessionsInput | refresh_tokensUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
  }

  export type sso_providersCreateNestedOneWithoutSso_domainsInput = {
    create?: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSso_domainsInput
    connect?: sso_providersWhereUniqueInput
  }

  export type sso_providersUpdateOneRequiredWithoutSso_domainsNestedInput = {
    create?: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSso_domainsInput
    upsert?: sso_providersUpsertWithoutSso_domainsInput
    connect?: sso_providersWhereUniqueInput
    update?: XOR<XOR<sso_providersUpdateToOneWithWhereWithoutSso_domainsInput, sso_providersUpdateWithoutSso_domainsInput>, sso_providersUncheckedUpdateWithoutSso_domainsInput>
  }

  export type saml_providersCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
  }

  export type saml_relay_statesCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type sso_domainsCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
  }

  export type saml_providersUncheckedCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
  }

  export type saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
  }

  export type saml_providersUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_providersUpsertWithWhereUniqueWithoutSso_providersInput | saml_providersUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    set?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    disconnect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    delete?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    update?: saml_providersUpdateWithWhereUniqueWithoutSso_providersInput | saml_providersUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_providersUpdateManyWithWhereWithoutSso_providersInput | saml_providersUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
  }

  export type saml_relay_statesUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput | saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type sso_domainsUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    upsert?: sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput | sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    set?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    disconnect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    delete?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    update?: sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput | sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: sso_domainsUpdateManyWithWhereWithoutSso_providersInput | sso_domainsUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
  }

  export type saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_providersUpsertWithWhereUniqueWithoutSso_providersInput | saml_providersUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    set?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    disconnect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    delete?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    update?: saml_providersUpdateWithWhereUniqueWithoutSso_providersInput | saml_providersUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_providersUpdateManyWithWhereWithoutSso_providersInput | saml_providersUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput | saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    upsert?: sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput | sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    set?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    disconnect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    delete?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    update?: sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput | sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: sso_domainsUpdateManyWithWhereWithoutSso_providersInput | sso_domainsUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
  }

  export type identitiesCreateNestedManyWithoutUsersInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
  }

  export type mfa_factorsCreateNestedManyWithoutUsersInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
  }

  export type sessionsCreateNestedManyWithoutUsersInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
  }

  export type repsCreateNestedOneWithoutUsersInput = {
    create?: XOR<repsCreateWithoutUsersInput, repsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: repsCreateOrConnectWithoutUsersInput
    connect?: repsWhereUniqueInput
  }

  export type identitiesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
  }

  export type mfa_factorsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
  }

  export type sessionsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
  }

  export type repsUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<repsCreateWithoutUsersInput, repsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: repsCreateOrConnectWithoutUsersInput
    connect?: repsWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type identitiesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    upsert?: identitiesUpsertWithWhereUniqueWithoutUsersInput | identitiesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    set?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    disconnect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    delete?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    update?: identitiesUpdateWithWhereUniqueWithoutUsersInput | identitiesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: identitiesUpdateManyWithWhereWithoutUsersInput | identitiesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
  }

  export type mfa_factorsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    upsert?: mfa_factorsUpsertWithWhereUniqueWithoutUsersInput | mfa_factorsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    set?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    disconnect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    delete?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    update?: mfa_factorsUpdateWithWhereUniqueWithoutUsersInput | mfa_factorsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: mfa_factorsUpdateManyWithWhereWithoutUsersInput | mfa_factorsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
  }

  export type sessionsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    upsert?: sessionsUpsertWithWhereUniqueWithoutUsersInput | sessionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    set?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    disconnect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    delete?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    update?: sessionsUpdateWithWhereUniqueWithoutUsersInput | sessionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: sessionsUpdateManyWithWhereWithoutUsersInput | sessionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
  }

  export type repsUpdateOneWithoutUsersNestedInput = {
    create?: XOR<repsCreateWithoutUsersInput, repsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: repsCreateOrConnectWithoutUsersInput
    upsert?: repsUpsertWithoutUsersInput
    disconnect?: repsWhereInput | boolean
    delete?: repsWhereInput | boolean
    connect?: repsWhereUniqueInput
    update?: XOR<XOR<repsUpdateToOneWithWhereWithoutUsersInput, repsUpdateWithoutUsersInput>, repsUncheckedUpdateWithoutUsersInput>
  }

  export type identitiesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    upsert?: identitiesUpsertWithWhereUniqueWithoutUsersInput | identitiesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    set?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    disconnect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    delete?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    update?: identitiesUpdateWithWhereUniqueWithoutUsersInput | identitiesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: identitiesUpdateManyWithWhereWithoutUsersInput | identitiesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
  }

  export type mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    upsert?: mfa_factorsUpsertWithWhereUniqueWithoutUsersInput | mfa_factorsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    set?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    disconnect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    delete?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    update?: mfa_factorsUpdateWithWhereUniqueWithoutUsersInput | mfa_factorsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: mfa_factorsUpdateManyWithWhereWithoutUsersInput | mfa_factorsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
  }

  export type sessionsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    upsert?: sessionsUpsertWithWhereUniqueWithoutUsersInput | sessionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    set?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    disconnect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    delete?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    update?: sessionsUpdateWithWhereUniqueWithoutUsersInput | sessionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: sessionsUpdateManyWithWhereWithoutUsersInput | sessionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
  }

  export type repsUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<repsCreateWithoutUsersInput, repsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: repsCreateOrConnectWithoutUsersInput
    upsert?: repsUpsertWithoutUsersInput
    disconnect?: repsWhereInput | boolean
    delete?: repsWhereInput | boolean
    connect?: repsWhereUniqueInput
    update?: XOR<XOR<repsUpdateToOneWithWhereWithoutUsersInput, repsUpdateWithoutUsersInput>, repsUncheckedUpdateWithoutUsersInput>
  }

  export type accountsCreateNestedOneWithoutAccount_ai_chatInput = {
    create?: XOR<accountsCreateWithoutAccount_ai_chatInput, accountsUncheckedCreateWithoutAccount_ai_chatInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_ai_chatInput
    connect?: accountsWhereUniqueInput
  }

  export type plansCreateNestedOneWithoutAccount_ai_chatInput = {
    create?: XOR<plansCreateWithoutAccount_ai_chatInput, plansUncheckedCreateWithoutAccount_ai_chatInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_ai_chatInput
    connect?: plansWhereUniqueInput
  }

  export type accountsUpdateOneRequiredWithoutAccount_ai_chatNestedInput = {
    create?: XOR<accountsCreateWithoutAccount_ai_chatInput, accountsUncheckedCreateWithoutAccount_ai_chatInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_ai_chatInput
    upsert?: accountsUpsertWithoutAccount_ai_chatInput
    connect?: accountsWhereUniqueInput
    update?: XOR<XOR<accountsUpdateToOneWithWhereWithoutAccount_ai_chatInput, accountsUpdateWithoutAccount_ai_chatInput>, accountsUncheckedUpdateWithoutAccount_ai_chatInput>
  }

  export type plansUpdateOneRequiredWithoutAccount_ai_chatNestedInput = {
    create?: XOR<plansCreateWithoutAccount_ai_chatInput, plansUncheckedCreateWithoutAccount_ai_chatInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_ai_chatInput
    upsert?: plansUpsertWithoutAccount_ai_chatInput
    connect?: plansWhereUniqueInput
    update?: XOR<XOR<plansUpdateToOneWithWhereWithoutAccount_ai_chatInput, plansUpdateWithoutAccount_ai_chatInput>, plansUncheckedUpdateWithoutAccount_ai_chatInput>
  }

  export type accountsCreateNestedOneWithoutAccount_blog_post_instancesInput = {
    create?: XOR<accountsCreateWithoutAccount_blog_post_instancesInput, accountsUncheckedCreateWithoutAccount_blog_post_instancesInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_blog_post_instancesInput
    connect?: accountsWhereUniqueInput
  }

  export type plansCreateNestedOneWithoutAccount_blog_post_instancesInput = {
    create?: XOR<plansCreateWithoutAccount_blog_post_instancesInput, plansUncheckedCreateWithoutAccount_blog_post_instancesInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_blog_post_instancesInput
    connect?: plansWhereUniqueInput
  }

  export type accountsUpdateOneRequiredWithoutAccount_blog_post_instancesNestedInput = {
    create?: XOR<accountsCreateWithoutAccount_blog_post_instancesInput, accountsUncheckedCreateWithoutAccount_blog_post_instancesInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_blog_post_instancesInput
    upsert?: accountsUpsertWithoutAccount_blog_post_instancesInput
    connect?: accountsWhereUniqueInput
    update?: XOR<XOR<accountsUpdateToOneWithWhereWithoutAccount_blog_post_instancesInput, accountsUpdateWithoutAccount_blog_post_instancesInput>, accountsUncheckedUpdateWithoutAccount_blog_post_instancesInput>
  }

  export type plansUpdateOneRequiredWithoutAccount_blog_post_instancesNestedInput = {
    create?: XOR<plansCreateWithoutAccount_blog_post_instancesInput, plansUncheckedCreateWithoutAccount_blog_post_instancesInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_blog_post_instancesInput
    upsert?: plansUpsertWithoutAccount_blog_post_instancesInput
    connect?: plansWhereUniqueInput
    update?: XOR<XOR<plansUpdateToOneWithWhereWithoutAccount_blog_post_instancesInput, plansUpdateWithoutAccount_blog_post_instancesInput>, plansUncheckedUpdateWithoutAccount_blog_post_instancesInput>
  }

  export type accountsCreateNestedOneWithoutAccount_blog_postsInput = {
    create?: XOR<accountsCreateWithoutAccount_blog_postsInput, accountsUncheckedCreateWithoutAccount_blog_postsInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_blog_postsInput
    connect?: accountsWhereUniqueInput
  }

  export type plansCreateNestedOneWithoutAccount_blog_postsInput = {
    create?: XOR<plansCreateWithoutAccount_blog_postsInput, plansUncheckedCreateWithoutAccount_blog_postsInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_blog_postsInput
    connect?: plansWhereUniqueInput
  }

  export type accountsUpdateOneRequiredWithoutAccount_blog_postsNestedInput = {
    create?: XOR<accountsCreateWithoutAccount_blog_postsInput, accountsUncheckedCreateWithoutAccount_blog_postsInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_blog_postsInput
    upsert?: accountsUpsertWithoutAccount_blog_postsInput
    connect?: accountsWhereUniqueInput
    update?: XOR<XOR<accountsUpdateToOneWithWhereWithoutAccount_blog_postsInput, accountsUpdateWithoutAccount_blog_postsInput>, accountsUncheckedUpdateWithoutAccount_blog_postsInput>
  }

  export type plansUpdateOneRequiredWithoutAccount_blog_postsNestedInput = {
    create?: XOR<plansCreateWithoutAccount_blog_postsInput, plansUncheckedCreateWithoutAccount_blog_postsInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_blog_postsInput
    upsert?: plansUpsertWithoutAccount_blog_postsInput
    connect?: plansWhereUniqueInput
    update?: XOR<XOR<plansUpdateToOneWithWhereWithoutAccount_blog_postsInput, plansUpdateWithoutAccount_blog_postsInput>, plansUncheckedUpdateWithoutAccount_blog_postsInput>
  }

  export type accountsCreateNestedOneWithoutAccount_plansInput = {
    create?: XOR<accountsCreateWithoutAccount_plansInput, accountsUncheckedCreateWithoutAccount_plansInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_plansInput
    connect?: accountsWhereUniqueInput
  }

  export type plansCreateNestedOneWithoutAccount_plansInput = {
    create?: XOR<plansCreateWithoutAccount_plansInput, plansUncheckedCreateWithoutAccount_plansInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_plansInput
    connect?: plansWhereUniqueInput
  }

  export type accountsUpdateOneRequiredWithoutAccount_plansNestedInput = {
    create?: XOR<accountsCreateWithoutAccount_plansInput, accountsUncheckedCreateWithoutAccount_plansInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_plansInput
    upsert?: accountsUpsertWithoutAccount_plansInput
    connect?: accountsWhereUniqueInput
    update?: XOR<XOR<accountsUpdateToOneWithWhereWithoutAccount_plansInput, accountsUpdateWithoutAccount_plansInput>, accountsUncheckedUpdateWithoutAccount_plansInput>
  }

  export type plansUpdateOneRequiredWithoutAccount_plansNestedInput = {
    create?: XOR<plansCreateWithoutAccount_plansInput, plansUncheckedCreateWithoutAccount_plansInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_plansInput
    upsert?: plansUpsertWithoutAccount_plansInput
    connect?: plansWhereUniqueInput
    update?: XOR<XOR<plansUpdateToOneWithWhereWithoutAccount_plansInput, plansUpdateWithoutAccount_plansInput>, plansUncheckedUpdateWithoutAccount_plansInput>
  }

  export type accountsCreateNestedOneWithoutAccount_review_generatorInput = {
    create?: XOR<accountsCreateWithoutAccount_review_generatorInput, accountsUncheckedCreateWithoutAccount_review_generatorInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_review_generatorInput
    connect?: accountsWhereUniqueInput
  }

  export type plansCreateNestedOneWithoutAccount_review_generatorInput = {
    create?: XOR<plansCreateWithoutAccount_review_generatorInput, plansUncheckedCreateWithoutAccount_review_generatorInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_review_generatorInput
    connect?: plansWhereUniqueInput
  }

  export type accountsUpdateOneRequiredWithoutAccount_review_generatorNestedInput = {
    create?: XOR<accountsCreateWithoutAccount_review_generatorInput, accountsUncheckedCreateWithoutAccount_review_generatorInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_review_generatorInput
    upsert?: accountsUpsertWithoutAccount_review_generatorInput
    connect?: accountsWhereUniqueInput
    update?: XOR<XOR<accountsUpdateToOneWithWhereWithoutAccount_review_generatorInput, accountsUpdateWithoutAccount_review_generatorInput>, accountsUncheckedUpdateWithoutAccount_review_generatorInput>
  }

  export type plansUpdateOneRequiredWithoutAccount_review_generatorNestedInput = {
    create?: XOR<plansCreateWithoutAccount_review_generatorInput, plansUncheckedCreateWithoutAccount_review_generatorInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_review_generatorInput
    upsert?: plansUpsertWithoutAccount_review_generatorInput
    connect?: plansWhereUniqueInput
    update?: XOR<XOR<plansUpdateToOneWithWhereWithoutAccount_review_generatorInput, plansUpdateWithoutAccount_review_generatorInput>, plansUncheckedUpdateWithoutAccount_review_generatorInput>
  }

  export type accountsCreateNestedOneWithoutAccount_social_mediaInput = {
    create?: XOR<accountsCreateWithoutAccount_social_mediaInput, accountsUncheckedCreateWithoutAccount_social_mediaInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_social_mediaInput
    connect?: accountsWhereUniqueInput
  }

  export type plansCreateNestedOneWithoutAccount_social_mediaInput = {
    create?: XOR<plansCreateWithoutAccount_social_mediaInput, plansUncheckedCreateWithoutAccount_social_mediaInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_social_mediaInput
    connect?: plansWhereUniqueInput
  }

  export type accountsUpdateOneRequiredWithoutAccount_social_mediaNestedInput = {
    create?: XOR<accountsCreateWithoutAccount_social_mediaInput, accountsUncheckedCreateWithoutAccount_social_mediaInput>
    connectOrCreate?: accountsCreateOrConnectWithoutAccount_social_mediaInput
    upsert?: accountsUpsertWithoutAccount_social_mediaInput
    connect?: accountsWhereUniqueInput
    update?: XOR<XOR<accountsUpdateToOneWithWhereWithoutAccount_social_mediaInput, accountsUpdateWithoutAccount_social_mediaInput>, accountsUncheckedUpdateWithoutAccount_social_mediaInput>
  }

  export type plansUpdateOneRequiredWithoutAccount_social_mediaNestedInput = {
    create?: XOR<plansCreateWithoutAccount_social_mediaInput, plansUncheckedCreateWithoutAccount_social_mediaInput>
    connectOrCreate?: plansCreateOrConnectWithoutAccount_social_mediaInput
    upsert?: plansUpsertWithoutAccount_social_mediaInput
    connect?: plansWhereUniqueInput
    update?: XOR<XOR<plansUpdateToOneWithWhereWithoutAccount_social_mediaInput, plansUpdateWithoutAccount_social_mediaInput>, plansUncheckedUpdateWithoutAccount_social_mediaInput>
  }

  export type account_ai_chatCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_ai_chatCreateWithoutAccountsInput, account_ai_chatUncheckedCreateWithoutAccountsInput> | account_ai_chatCreateWithoutAccountsInput[] | account_ai_chatUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_ai_chatCreateOrConnectWithoutAccountsInput | account_ai_chatCreateOrConnectWithoutAccountsInput[]
    createMany?: account_ai_chatCreateManyAccountsInputEnvelope
    connect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
  }

  export type account_blog_post_instancesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_blog_post_instancesCreateWithoutAccountsInput, account_blog_post_instancesUncheckedCreateWithoutAccountsInput> | account_blog_post_instancesCreateWithoutAccountsInput[] | account_blog_post_instancesUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_blog_post_instancesCreateOrConnectWithoutAccountsInput | account_blog_post_instancesCreateOrConnectWithoutAccountsInput[]
    createMany?: account_blog_post_instancesCreateManyAccountsInputEnvelope
    connect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
  }

  export type account_blog_postsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_blog_postsCreateWithoutAccountsInput, account_blog_postsUncheckedCreateWithoutAccountsInput> | account_blog_postsCreateWithoutAccountsInput[] | account_blog_postsUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_blog_postsCreateOrConnectWithoutAccountsInput | account_blog_postsCreateOrConnectWithoutAccountsInput[]
    createMany?: account_blog_postsCreateManyAccountsInputEnvelope
    connect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
  }

  export type account_plansCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_plansCreateWithoutAccountsInput, account_plansUncheckedCreateWithoutAccountsInput> | account_plansCreateWithoutAccountsInput[] | account_plansUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_plansCreateOrConnectWithoutAccountsInput | account_plansCreateOrConnectWithoutAccountsInput[]
    createMany?: account_plansCreateManyAccountsInputEnvelope
    connect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
  }

  export type account_review_generatorCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_review_generatorCreateWithoutAccountsInput, account_review_generatorUncheckedCreateWithoutAccountsInput> | account_review_generatorCreateWithoutAccountsInput[] | account_review_generatorUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_review_generatorCreateOrConnectWithoutAccountsInput | account_review_generatorCreateOrConnectWithoutAccountsInput[]
    createMany?: account_review_generatorCreateManyAccountsInputEnvelope
    connect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
  }

  export type account_social_mediaCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_social_mediaCreateWithoutAccountsInput, account_social_mediaUncheckedCreateWithoutAccountsInput> | account_social_mediaCreateWithoutAccountsInput[] | account_social_mediaUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_social_mediaCreateOrConnectWithoutAccountsInput | account_social_mediaCreateOrConnectWithoutAccountsInput[]
    createMany?: account_social_mediaCreateManyAccountsInputEnvelope
    connect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
  }

  export type customer_recordsCreateNestedOneWithoutAccountsInput = {
    create?: XOR<customer_recordsCreateWithoutAccountsInput, customer_recordsUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutAccountsInput
    connect?: customer_recordsWhereUniqueInput
  }

  export type account_ai_chatUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_ai_chatCreateWithoutAccountsInput, account_ai_chatUncheckedCreateWithoutAccountsInput> | account_ai_chatCreateWithoutAccountsInput[] | account_ai_chatUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_ai_chatCreateOrConnectWithoutAccountsInput | account_ai_chatCreateOrConnectWithoutAccountsInput[]
    createMany?: account_ai_chatCreateManyAccountsInputEnvelope
    connect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
  }

  export type account_blog_post_instancesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_blog_post_instancesCreateWithoutAccountsInput, account_blog_post_instancesUncheckedCreateWithoutAccountsInput> | account_blog_post_instancesCreateWithoutAccountsInput[] | account_blog_post_instancesUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_blog_post_instancesCreateOrConnectWithoutAccountsInput | account_blog_post_instancesCreateOrConnectWithoutAccountsInput[]
    createMany?: account_blog_post_instancesCreateManyAccountsInputEnvelope
    connect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
  }

  export type account_blog_postsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_blog_postsCreateWithoutAccountsInput, account_blog_postsUncheckedCreateWithoutAccountsInput> | account_blog_postsCreateWithoutAccountsInput[] | account_blog_postsUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_blog_postsCreateOrConnectWithoutAccountsInput | account_blog_postsCreateOrConnectWithoutAccountsInput[]
    createMany?: account_blog_postsCreateManyAccountsInputEnvelope
    connect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
  }

  export type account_plansUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_plansCreateWithoutAccountsInput, account_plansUncheckedCreateWithoutAccountsInput> | account_plansCreateWithoutAccountsInput[] | account_plansUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_plansCreateOrConnectWithoutAccountsInput | account_plansCreateOrConnectWithoutAccountsInput[]
    createMany?: account_plansCreateManyAccountsInputEnvelope
    connect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
  }

  export type account_review_generatorUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_review_generatorCreateWithoutAccountsInput, account_review_generatorUncheckedCreateWithoutAccountsInput> | account_review_generatorCreateWithoutAccountsInput[] | account_review_generatorUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_review_generatorCreateOrConnectWithoutAccountsInput | account_review_generatorCreateOrConnectWithoutAccountsInput[]
    createMany?: account_review_generatorCreateManyAccountsInputEnvelope
    connect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
  }

  export type account_social_mediaUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<account_social_mediaCreateWithoutAccountsInput, account_social_mediaUncheckedCreateWithoutAccountsInput> | account_social_mediaCreateWithoutAccountsInput[] | account_social_mediaUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_social_mediaCreateOrConnectWithoutAccountsInput | account_social_mediaCreateOrConnectWithoutAccountsInput[]
    createMany?: account_social_mediaCreateManyAccountsInputEnvelope
    connect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
  }

  export type account_ai_chatUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_ai_chatCreateWithoutAccountsInput, account_ai_chatUncheckedCreateWithoutAccountsInput> | account_ai_chatCreateWithoutAccountsInput[] | account_ai_chatUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_ai_chatCreateOrConnectWithoutAccountsInput | account_ai_chatCreateOrConnectWithoutAccountsInput[]
    upsert?: account_ai_chatUpsertWithWhereUniqueWithoutAccountsInput | account_ai_chatUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_ai_chatCreateManyAccountsInputEnvelope
    set?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    disconnect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    delete?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    connect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    update?: account_ai_chatUpdateWithWhereUniqueWithoutAccountsInput | account_ai_chatUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_ai_chatUpdateManyWithWhereWithoutAccountsInput | account_ai_chatUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_ai_chatScalarWhereInput | account_ai_chatScalarWhereInput[]
  }

  export type account_blog_post_instancesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_blog_post_instancesCreateWithoutAccountsInput, account_blog_post_instancesUncheckedCreateWithoutAccountsInput> | account_blog_post_instancesCreateWithoutAccountsInput[] | account_blog_post_instancesUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_blog_post_instancesCreateOrConnectWithoutAccountsInput | account_blog_post_instancesCreateOrConnectWithoutAccountsInput[]
    upsert?: account_blog_post_instancesUpsertWithWhereUniqueWithoutAccountsInput | account_blog_post_instancesUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_blog_post_instancesCreateManyAccountsInputEnvelope
    set?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    disconnect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    delete?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    connect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    update?: account_blog_post_instancesUpdateWithWhereUniqueWithoutAccountsInput | account_blog_post_instancesUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_blog_post_instancesUpdateManyWithWhereWithoutAccountsInput | account_blog_post_instancesUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_blog_post_instancesScalarWhereInput | account_blog_post_instancesScalarWhereInput[]
  }

  export type account_blog_postsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_blog_postsCreateWithoutAccountsInput, account_blog_postsUncheckedCreateWithoutAccountsInput> | account_blog_postsCreateWithoutAccountsInput[] | account_blog_postsUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_blog_postsCreateOrConnectWithoutAccountsInput | account_blog_postsCreateOrConnectWithoutAccountsInput[]
    upsert?: account_blog_postsUpsertWithWhereUniqueWithoutAccountsInput | account_blog_postsUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_blog_postsCreateManyAccountsInputEnvelope
    set?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    disconnect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    delete?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    connect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    update?: account_blog_postsUpdateWithWhereUniqueWithoutAccountsInput | account_blog_postsUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_blog_postsUpdateManyWithWhereWithoutAccountsInput | account_blog_postsUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_blog_postsScalarWhereInput | account_blog_postsScalarWhereInput[]
  }

  export type account_plansUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_plansCreateWithoutAccountsInput, account_plansUncheckedCreateWithoutAccountsInput> | account_plansCreateWithoutAccountsInput[] | account_plansUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_plansCreateOrConnectWithoutAccountsInput | account_plansCreateOrConnectWithoutAccountsInput[]
    upsert?: account_plansUpsertWithWhereUniqueWithoutAccountsInput | account_plansUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_plansCreateManyAccountsInputEnvelope
    set?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    disconnect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    delete?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    connect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    update?: account_plansUpdateWithWhereUniqueWithoutAccountsInput | account_plansUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_plansUpdateManyWithWhereWithoutAccountsInput | account_plansUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_plansScalarWhereInput | account_plansScalarWhereInput[]
  }

  export type account_review_generatorUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_review_generatorCreateWithoutAccountsInput, account_review_generatorUncheckedCreateWithoutAccountsInput> | account_review_generatorCreateWithoutAccountsInput[] | account_review_generatorUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_review_generatorCreateOrConnectWithoutAccountsInput | account_review_generatorCreateOrConnectWithoutAccountsInput[]
    upsert?: account_review_generatorUpsertWithWhereUniqueWithoutAccountsInput | account_review_generatorUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_review_generatorCreateManyAccountsInputEnvelope
    set?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    disconnect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    delete?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    connect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    update?: account_review_generatorUpdateWithWhereUniqueWithoutAccountsInput | account_review_generatorUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_review_generatorUpdateManyWithWhereWithoutAccountsInput | account_review_generatorUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_review_generatorScalarWhereInput | account_review_generatorScalarWhereInput[]
  }

  export type account_social_mediaUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_social_mediaCreateWithoutAccountsInput, account_social_mediaUncheckedCreateWithoutAccountsInput> | account_social_mediaCreateWithoutAccountsInput[] | account_social_mediaUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_social_mediaCreateOrConnectWithoutAccountsInput | account_social_mediaCreateOrConnectWithoutAccountsInput[]
    upsert?: account_social_mediaUpsertWithWhereUniqueWithoutAccountsInput | account_social_mediaUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_social_mediaCreateManyAccountsInputEnvelope
    set?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    disconnect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    delete?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    connect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    update?: account_social_mediaUpdateWithWhereUniqueWithoutAccountsInput | account_social_mediaUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_social_mediaUpdateManyWithWhereWithoutAccountsInput | account_social_mediaUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_social_mediaScalarWhereInput | account_social_mediaScalarWhereInput[]
  }

  export type customer_recordsUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<customer_recordsCreateWithoutAccountsInput, customer_recordsUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutAccountsInput
    upsert?: customer_recordsUpsertWithoutAccountsInput
    connect?: customer_recordsWhereUniqueInput
    update?: XOR<XOR<customer_recordsUpdateToOneWithWhereWithoutAccountsInput, customer_recordsUpdateWithoutAccountsInput>, customer_recordsUncheckedUpdateWithoutAccountsInput>
  }

  export type account_ai_chatUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_ai_chatCreateWithoutAccountsInput, account_ai_chatUncheckedCreateWithoutAccountsInput> | account_ai_chatCreateWithoutAccountsInput[] | account_ai_chatUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_ai_chatCreateOrConnectWithoutAccountsInput | account_ai_chatCreateOrConnectWithoutAccountsInput[]
    upsert?: account_ai_chatUpsertWithWhereUniqueWithoutAccountsInput | account_ai_chatUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_ai_chatCreateManyAccountsInputEnvelope
    set?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    disconnect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    delete?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    connect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    update?: account_ai_chatUpdateWithWhereUniqueWithoutAccountsInput | account_ai_chatUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_ai_chatUpdateManyWithWhereWithoutAccountsInput | account_ai_chatUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_ai_chatScalarWhereInput | account_ai_chatScalarWhereInput[]
  }

  export type account_blog_post_instancesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_blog_post_instancesCreateWithoutAccountsInput, account_blog_post_instancesUncheckedCreateWithoutAccountsInput> | account_blog_post_instancesCreateWithoutAccountsInput[] | account_blog_post_instancesUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_blog_post_instancesCreateOrConnectWithoutAccountsInput | account_blog_post_instancesCreateOrConnectWithoutAccountsInput[]
    upsert?: account_blog_post_instancesUpsertWithWhereUniqueWithoutAccountsInput | account_blog_post_instancesUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_blog_post_instancesCreateManyAccountsInputEnvelope
    set?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    disconnect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    delete?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    connect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    update?: account_blog_post_instancesUpdateWithWhereUniqueWithoutAccountsInput | account_blog_post_instancesUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_blog_post_instancesUpdateManyWithWhereWithoutAccountsInput | account_blog_post_instancesUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_blog_post_instancesScalarWhereInput | account_blog_post_instancesScalarWhereInput[]
  }

  export type account_blog_postsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_blog_postsCreateWithoutAccountsInput, account_blog_postsUncheckedCreateWithoutAccountsInput> | account_blog_postsCreateWithoutAccountsInput[] | account_blog_postsUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_blog_postsCreateOrConnectWithoutAccountsInput | account_blog_postsCreateOrConnectWithoutAccountsInput[]
    upsert?: account_blog_postsUpsertWithWhereUniqueWithoutAccountsInput | account_blog_postsUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_blog_postsCreateManyAccountsInputEnvelope
    set?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    disconnect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    delete?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    connect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    update?: account_blog_postsUpdateWithWhereUniqueWithoutAccountsInput | account_blog_postsUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_blog_postsUpdateManyWithWhereWithoutAccountsInput | account_blog_postsUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_blog_postsScalarWhereInput | account_blog_postsScalarWhereInput[]
  }

  export type account_plansUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_plansCreateWithoutAccountsInput, account_plansUncheckedCreateWithoutAccountsInput> | account_plansCreateWithoutAccountsInput[] | account_plansUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_plansCreateOrConnectWithoutAccountsInput | account_plansCreateOrConnectWithoutAccountsInput[]
    upsert?: account_plansUpsertWithWhereUniqueWithoutAccountsInput | account_plansUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_plansCreateManyAccountsInputEnvelope
    set?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    disconnect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    delete?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    connect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    update?: account_plansUpdateWithWhereUniqueWithoutAccountsInput | account_plansUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_plansUpdateManyWithWhereWithoutAccountsInput | account_plansUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_plansScalarWhereInput | account_plansScalarWhereInput[]
  }

  export type account_review_generatorUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_review_generatorCreateWithoutAccountsInput, account_review_generatorUncheckedCreateWithoutAccountsInput> | account_review_generatorCreateWithoutAccountsInput[] | account_review_generatorUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_review_generatorCreateOrConnectWithoutAccountsInput | account_review_generatorCreateOrConnectWithoutAccountsInput[]
    upsert?: account_review_generatorUpsertWithWhereUniqueWithoutAccountsInput | account_review_generatorUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_review_generatorCreateManyAccountsInputEnvelope
    set?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    disconnect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    delete?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    connect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    update?: account_review_generatorUpdateWithWhereUniqueWithoutAccountsInput | account_review_generatorUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_review_generatorUpdateManyWithWhereWithoutAccountsInput | account_review_generatorUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_review_generatorScalarWhereInput | account_review_generatorScalarWhereInput[]
  }

  export type account_social_mediaUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<account_social_mediaCreateWithoutAccountsInput, account_social_mediaUncheckedCreateWithoutAccountsInput> | account_social_mediaCreateWithoutAccountsInput[] | account_social_mediaUncheckedCreateWithoutAccountsInput[]
    connectOrCreate?: account_social_mediaCreateOrConnectWithoutAccountsInput | account_social_mediaCreateOrConnectWithoutAccountsInput[]
    upsert?: account_social_mediaUpsertWithWhereUniqueWithoutAccountsInput | account_social_mediaUpsertWithWhereUniqueWithoutAccountsInput[]
    createMany?: account_social_mediaCreateManyAccountsInputEnvelope
    set?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    disconnect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    delete?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    connect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    update?: account_social_mediaUpdateWithWhereUniqueWithoutAccountsInput | account_social_mediaUpdateWithWhereUniqueWithoutAccountsInput[]
    updateMany?: account_social_mediaUpdateManyWithWhereWithoutAccountsInput | account_social_mediaUpdateManyWithWhereWithoutAccountsInput[]
    deleteMany?: account_social_mediaScalarWhereInput | account_social_mediaScalarWhereInput[]
  }

  export type customer_recordsCreateNestedOneWithoutCommunicationsInput = {
    create?: XOR<customer_recordsCreateWithoutCommunicationsInput, customer_recordsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutCommunicationsInput
    connect?: customer_recordsWhereUniqueInput
  }

  export type marketing_campaignsCreateNestedOneWithoutCommunicationsInput = {
    create?: XOR<marketing_campaignsCreateWithoutCommunicationsInput, marketing_campaignsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: marketing_campaignsCreateOrConnectWithoutCommunicationsInput
    connect?: marketing_campaignsWhereUniqueInput
  }

  export type communications_emailsCreateNestedOneWithoutCommunicationsInput = {
    create?: XOR<communications_emailsCreateWithoutCommunicationsInput, communications_emailsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: communications_emailsCreateOrConnectWithoutCommunicationsInput
    connect?: communications_emailsWhereUniqueInput
  }

  export type communications_textsCreateNestedOneWithoutCommunicationsInput = {
    create?: XOR<communications_textsCreateWithoutCommunicationsInput, communications_textsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: communications_textsCreateOrConnectWithoutCommunicationsInput
    connect?: communications_textsWhereUniqueInput
  }

  export type communications_emailsUncheckedCreateNestedOneWithoutCommunicationsInput = {
    create?: XOR<communications_emailsCreateWithoutCommunicationsInput, communications_emailsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: communications_emailsCreateOrConnectWithoutCommunicationsInput
    connect?: communications_emailsWhereUniqueInput
  }

  export type communications_textsUncheckedCreateNestedOneWithoutCommunicationsInput = {
    create?: XOR<communications_textsCreateWithoutCommunicationsInput, communications_textsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: communications_textsCreateOrConnectWithoutCommunicationsInput
    connect?: communications_textsWhereUniqueInput
  }

  export type customer_recordsUpdateOneWithoutCommunicationsNestedInput = {
    create?: XOR<customer_recordsCreateWithoutCommunicationsInput, customer_recordsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutCommunicationsInput
    upsert?: customer_recordsUpsertWithoutCommunicationsInput
    disconnect?: customer_recordsWhereInput | boolean
    delete?: customer_recordsWhereInput | boolean
    connect?: customer_recordsWhereUniqueInput
    update?: XOR<XOR<customer_recordsUpdateToOneWithWhereWithoutCommunicationsInput, customer_recordsUpdateWithoutCommunicationsInput>, customer_recordsUncheckedUpdateWithoutCommunicationsInput>
  }

  export type marketing_campaignsUpdateOneWithoutCommunicationsNestedInput = {
    create?: XOR<marketing_campaignsCreateWithoutCommunicationsInput, marketing_campaignsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: marketing_campaignsCreateOrConnectWithoutCommunicationsInput
    upsert?: marketing_campaignsUpsertWithoutCommunicationsInput
    disconnect?: marketing_campaignsWhereInput | boolean
    delete?: marketing_campaignsWhereInput | boolean
    connect?: marketing_campaignsWhereUniqueInput
    update?: XOR<XOR<marketing_campaignsUpdateToOneWithWhereWithoutCommunicationsInput, marketing_campaignsUpdateWithoutCommunicationsInput>, marketing_campaignsUncheckedUpdateWithoutCommunicationsInput>
  }

  export type communications_emailsUpdateOneWithoutCommunicationsNestedInput = {
    create?: XOR<communications_emailsCreateWithoutCommunicationsInput, communications_emailsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: communications_emailsCreateOrConnectWithoutCommunicationsInput
    upsert?: communications_emailsUpsertWithoutCommunicationsInput
    disconnect?: communications_emailsWhereInput | boolean
    delete?: communications_emailsWhereInput | boolean
    connect?: communications_emailsWhereUniqueInput
    update?: XOR<XOR<communications_emailsUpdateToOneWithWhereWithoutCommunicationsInput, communications_emailsUpdateWithoutCommunicationsInput>, communications_emailsUncheckedUpdateWithoutCommunicationsInput>
  }

  export type communications_textsUpdateOneWithoutCommunicationsNestedInput = {
    create?: XOR<communications_textsCreateWithoutCommunicationsInput, communications_textsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: communications_textsCreateOrConnectWithoutCommunicationsInput
    upsert?: communications_textsUpsertWithoutCommunicationsInput
    disconnect?: communications_textsWhereInput | boolean
    delete?: communications_textsWhereInput | boolean
    connect?: communications_textsWhereUniqueInput
    update?: XOR<XOR<communications_textsUpdateToOneWithWhereWithoutCommunicationsInput, communications_textsUpdateWithoutCommunicationsInput>, communications_textsUncheckedUpdateWithoutCommunicationsInput>
  }

  export type communications_emailsUncheckedUpdateOneWithoutCommunicationsNestedInput = {
    create?: XOR<communications_emailsCreateWithoutCommunicationsInput, communications_emailsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: communications_emailsCreateOrConnectWithoutCommunicationsInput
    upsert?: communications_emailsUpsertWithoutCommunicationsInput
    disconnect?: communications_emailsWhereInput | boolean
    delete?: communications_emailsWhereInput | boolean
    connect?: communications_emailsWhereUniqueInput
    update?: XOR<XOR<communications_emailsUpdateToOneWithWhereWithoutCommunicationsInput, communications_emailsUpdateWithoutCommunicationsInput>, communications_emailsUncheckedUpdateWithoutCommunicationsInput>
  }

  export type communications_textsUncheckedUpdateOneWithoutCommunicationsNestedInput = {
    create?: XOR<communications_textsCreateWithoutCommunicationsInput, communications_textsUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: communications_textsCreateOrConnectWithoutCommunicationsInput
    upsert?: communications_textsUpsertWithoutCommunicationsInput
    disconnect?: communications_textsWhereInput | boolean
    delete?: communications_textsWhereInput | boolean
    connect?: communications_textsWhereUniqueInput
    update?: XOR<XOR<communications_textsUpdateToOneWithWhereWithoutCommunicationsInput, communications_textsUpdateWithoutCommunicationsInput>, communications_textsUncheckedUpdateWithoutCommunicationsInput>
  }

  export type communicationsCreateNestedOneWithoutCommunications_emailsInput = {
    create?: XOR<communicationsCreateWithoutCommunications_emailsInput, communicationsUncheckedCreateWithoutCommunications_emailsInput>
    connectOrCreate?: communicationsCreateOrConnectWithoutCommunications_emailsInput
    connect?: communicationsWhereUniqueInput
  }

  export type communications_emails_status_updatesCreateNestedManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    create?: XOR<communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput> | communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[] | communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    connectOrCreate?: communications_emails_status_updatesCreateOrConnectWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesCreateOrConnectWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    createMany?: communications_emails_status_updatesCreateManyCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInputEnvelope
    connect?: communications_emails_status_updatesWhereUniqueInput | communications_emails_status_updatesWhereUniqueInput[]
  }

  export type communications_emails_status_updatesUncheckedCreateNestedManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    create?: XOR<communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput> | communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[] | communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    connectOrCreate?: communications_emails_status_updatesCreateOrConnectWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesCreateOrConnectWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    createMany?: communications_emails_status_updatesCreateManyCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInputEnvelope
    connect?: communications_emails_status_updatesWhereUniqueInput | communications_emails_status_updatesWhereUniqueInput[]
  }

  export type communicationsUpdateOneRequiredWithoutCommunications_emailsNestedInput = {
    create?: XOR<communicationsCreateWithoutCommunications_emailsInput, communicationsUncheckedCreateWithoutCommunications_emailsInput>
    connectOrCreate?: communicationsCreateOrConnectWithoutCommunications_emailsInput
    upsert?: communicationsUpsertWithoutCommunications_emailsInput
    connect?: communicationsWhereUniqueInput
    update?: XOR<XOR<communicationsUpdateToOneWithWhereWithoutCommunications_emailsInput, communicationsUpdateWithoutCommunications_emailsInput>, communicationsUncheckedUpdateWithoutCommunications_emailsInput>
  }

  export type communications_emails_status_updatesUpdateManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsNestedInput = {
    create?: XOR<communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput> | communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[] | communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    connectOrCreate?: communications_emails_status_updatesCreateOrConnectWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesCreateOrConnectWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    upsert?: communications_emails_status_updatesUpsertWithWhereUniqueWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesUpsertWithWhereUniqueWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    createMany?: communications_emails_status_updatesCreateManyCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInputEnvelope
    set?: communications_emails_status_updatesWhereUniqueInput | communications_emails_status_updatesWhereUniqueInput[]
    disconnect?: communications_emails_status_updatesWhereUniqueInput | communications_emails_status_updatesWhereUniqueInput[]
    delete?: communications_emails_status_updatesWhereUniqueInput | communications_emails_status_updatesWhereUniqueInput[]
    connect?: communications_emails_status_updatesWhereUniqueInput | communications_emails_status_updatesWhereUniqueInput[]
    update?: communications_emails_status_updatesUpdateWithWhereUniqueWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesUpdateWithWhereUniqueWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    updateMany?: communications_emails_status_updatesUpdateManyWithWhereWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesUpdateManyWithWhereWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    deleteMany?: communications_emails_status_updatesScalarWhereInput | communications_emails_status_updatesScalarWhereInput[]
  }

  export type communications_emails_status_updatesUncheckedUpdateManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsNestedInput = {
    create?: XOR<communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput> | communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[] | communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    connectOrCreate?: communications_emails_status_updatesCreateOrConnectWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesCreateOrConnectWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    upsert?: communications_emails_status_updatesUpsertWithWhereUniqueWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesUpsertWithWhereUniqueWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    createMany?: communications_emails_status_updatesCreateManyCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInputEnvelope
    set?: communications_emails_status_updatesWhereUniqueInput | communications_emails_status_updatesWhereUniqueInput[]
    disconnect?: communications_emails_status_updatesWhereUniqueInput | communications_emails_status_updatesWhereUniqueInput[]
    delete?: communications_emails_status_updatesWhereUniqueInput | communications_emails_status_updatesWhereUniqueInput[]
    connect?: communications_emails_status_updatesWhereUniqueInput | communications_emails_status_updatesWhereUniqueInput[]
    update?: communications_emails_status_updatesUpdateWithWhereUniqueWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesUpdateWithWhereUniqueWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    updateMany?: communications_emails_status_updatesUpdateManyWithWhereWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesUpdateManyWithWhereWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    deleteMany?: communications_emails_status_updatesScalarWhereInput | communications_emails_status_updatesScalarWhereInput[]
  }

  export type communications_emailsCreateNestedOneWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    create?: XOR<communications_emailsCreateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emailsUncheckedCreateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
    connectOrCreate?: communications_emailsCreateOrConnectWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput
    connect?: communications_emailsWhereUniqueInput
  }

  export type communications_emailsUpdateOneRequiredWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsNestedInput = {
    create?: XOR<communications_emailsCreateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emailsUncheckedCreateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
    connectOrCreate?: communications_emailsCreateOrConnectWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput
    upsert?: communications_emailsUpsertWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput
    connect?: communications_emailsWhereUniqueInput
    update?: XOR<XOR<communications_emailsUpdateToOneWithWhereWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emailsUpdateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>, communications_emailsUncheckedUpdateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
  }

  export type communicationsCreateNestedOneWithoutCommunications_textsInput = {
    create?: XOR<communicationsCreateWithoutCommunications_textsInput, communicationsUncheckedCreateWithoutCommunications_textsInput>
    connectOrCreate?: communicationsCreateOrConnectWithoutCommunications_textsInput
    connect?: communicationsWhereUniqueInput
  }

  export type communicationsUpdateOneRequiredWithoutCommunications_textsNestedInput = {
    create?: XOR<communicationsCreateWithoutCommunications_textsInput, communicationsUncheckedCreateWithoutCommunications_textsInput>
    connectOrCreate?: communicationsCreateOrConnectWithoutCommunications_textsInput
    upsert?: communicationsUpsertWithoutCommunications_textsInput
    connect?: communicationsWhereUniqueInput
    update?: XOR<XOR<communicationsUpdateToOneWithWhereWithoutCommunications_textsInput, communicationsUpdateWithoutCommunications_textsInput>, communicationsUncheckedUpdateWithoutCommunications_textsInput>
  }

  export type contactsCreateNestedOneWithoutContact_info_emailsInput = {
    create?: XOR<contactsCreateWithoutContact_info_emailsInput, contactsUncheckedCreateWithoutContact_info_emailsInput>
    connectOrCreate?: contactsCreateOrConnectWithoutContact_info_emailsInput
    connect?: contactsWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type contactsUpdateOneRequiredWithoutContact_info_emailsNestedInput = {
    create?: XOR<contactsCreateWithoutContact_info_emailsInput, contactsUncheckedCreateWithoutContact_info_emailsInput>
    connectOrCreate?: contactsCreateOrConnectWithoutContact_info_emailsInput
    upsert?: contactsUpsertWithoutContact_info_emailsInput
    connect?: contactsWhereUniqueInput
    update?: XOR<XOR<contactsUpdateToOneWithWhereWithoutContact_info_emailsInput, contactsUpdateWithoutContact_info_emailsInput>, contactsUncheckedUpdateWithoutContact_info_emailsInput>
  }

  export type contactsCreateNestedOneWithoutContact_info_phonesInput = {
    create?: XOR<contactsCreateWithoutContact_info_phonesInput, contactsUncheckedCreateWithoutContact_info_phonesInput>
    connectOrCreate?: contactsCreateOrConnectWithoutContact_info_phonesInput
    connect?: contactsWhereUniqueInput
  }

  export type contactsUpdateOneRequiredWithoutContact_info_phonesNestedInput = {
    create?: XOR<contactsCreateWithoutContact_info_phonesInput, contactsUncheckedCreateWithoutContact_info_phonesInput>
    connectOrCreate?: contactsCreateOrConnectWithoutContact_info_phonesInput
    upsert?: contactsUpsertWithoutContact_info_phonesInput
    connect?: contactsWhereUniqueInput
    update?: XOR<XOR<contactsUpdateToOneWithWhereWithoutContact_info_phonesInput, contactsUpdateWithoutContact_info_phonesInput>, contactsUncheckedUpdateWithoutContact_info_phonesInput>
  }

  export type contact_info_emailsCreateNestedManyWithoutContactsInput = {
    create?: XOR<contact_info_emailsCreateWithoutContactsInput, contact_info_emailsUncheckedCreateWithoutContactsInput> | contact_info_emailsCreateWithoutContactsInput[] | contact_info_emailsUncheckedCreateWithoutContactsInput[]
    connectOrCreate?: contact_info_emailsCreateOrConnectWithoutContactsInput | contact_info_emailsCreateOrConnectWithoutContactsInput[]
    createMany?: contact_info_emailsCreateManyContactsInputEnvelope
    connect?: contact_info_emailsWhereUniqueInput | contact_info_emailsWhereUniqueInput[]
  }

  export type contact_info_phonesCreateNestedManyWithoutContactsInput = {
    create?: XOR<contact_info_phonesCreateWithoutContactsInput, contact_info_phonesUncheckedCreateWithoutContactsInput> | contact_info_phonesCreateWithoutContactsInput[] | contact_info_phonesUncheckedCreateWithoutContactsInput[]
    connectOrCreate?: contact_info_phonesCreateOrConnectWithoutContactsInput | contact_info_phonesCreateOrConnectWithoutContactsInput[]
    createMany?: contact_info_phonesCreateManyContactsInputEnvelope
    connect?: contact_info_phonesWhereUniqueInput | contact_info_phonesWhereUniqueInput[]
  }

  export type customer_recordsCreateNestedOneWithoutContactsInput = {
    create?: XOR<customer_recordsCreateWithoutContactsInput, customer_recordsUncheckedCreateWithoutContactsInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutContactsInput
    connect?: customer_recordsWhereUniqueInput
  }

  export type contact_info_emailsUncheckedCreateNestedManyWithoutContactsInput = {
    create?: XOR<contact_info_emailsCreateWithoutContactsInput, contact_info_emailsUncheckedCreateWithoutContactsInput> | contact_info_emailsCreateWithoutContactsInput[] | contact_info_emailsUncheckedCreateWithoutContactsInput[]
    connectOrCreate?: contact_info_emailsCreateOrConnectWithoutContactsInput | contact_info_emailsCreateOrConnectWithoutContactsInput[]
    createMany?: contact_info_emailsCreateManyContactsInputEnvelope
    connect?: contact_info_emailsWhereUniqueInput | contact_info_emailsWhereUniqueInput[]
  }

  export type contact_info_phonesUncheckedCreateNestedManyWithoutContactsInput = {
    create?: XOR<contact_info_phonesCreateWithoutContactsInput, contact_info_phonesUncheckedCreateWithoutContactsInput> | contact_info_phonesCreateWithoutContactsInput[] | contact_info_phonesUncheckedCreateWithoutContactsInput[]
    connectOrCreate?: contact_info_phonesCreateOrConnectWithoutContactsInput | contact_info_phonesCreateOrConnectWithoutContactsInput[]
    createMany?: contact_info_phonesCreateManyContactsInputEnvelope
    connect?: contact_info_phonesWhereUniqueInput | contact_info_phonesWhereUniqueInput[]
  }

  export type contact_info_emailsUpdateManyWithoutContactsNestedInput = {
    create?: XOR<contact_info_emailsCreateWithoutContactsInput, contact_info_emailsUncheckedCreateWithoutContactsInput> | contact_info_emailsCreateWithoutContactsInput[] | contact_info_emailsUncheckedCreateWithoutContactsInput[]
    connectOrCreate?: contact_info_emailsCreateOrConnectWithoutContactsInput | contact_info_emailsCreateOrConnectWithoutContactsInput[]
    upsert?: contact_info_emailsUpsertWithWhereUniqueWithoutContactsInput | contact_info_emailsUpsertWithWhereUniqueWithoutContactsInput[]
    createMany?: contact_info_emailsCreateManyContactsInputEnvelope
    set?: contact_info_emailsWhereUniqueInput | contact_info_emailsWhereUniqueInput[]
    disconnect?: contact_info_emailsWhereUniqueInput | contact_info_emailsWhereUniqueInput[]
    delete?: contact_info_emailsWhereUniqueInput | contact_info_emailsWhereUniqueInput[]
    connect?: contact_info_emailsWhereUniqueInput | contact_info_emailsWhereUniqueInput[]
    update?: contact_info_emailsUpdateWithWhereUniqueWithoutContactsInput | contact_info_emailsUpdateWithWhereUniqueWithoutContactsInput[]
    updateMany?: contact_info_emailsUpdateManyWithWhereWithoutContactsInput | contact_info_emailsUpdateManyWithWhereWithoutContactsInput[]
    deleteMany?: contact_info_emailsScalarWhereInput | contact_info_emailsScalarWhereInput[]
  }

  export type contact_info_phonesUpdateManyWithoutContactsNestedInput = {
    create?: XOR<contact_info_phonesCreateWithoutContactsInput, contact_info_phonesUncheckedCreateWithoutContactsInput> | contact_info_phonesCreateWithoutContactsInput[] | contact_info_phonesUncheckedCreateWithoutContactsInput[]
    connectOrCreate?: contact_info_phonesCreateOrConnectWithoutContactsInput | contact_info_phonesCreateOrConnectWithoutContactsInput[]
    upsert?: contact_info_phonesUpsertWithWhereUniqueWithoutContactsInput | contact_info_phonesUpsertWithWhereUniqueWithoutContactsInput[]
    createMany?: contact_info_phonesCreateManyContactsInputEnvelope
    set?: contact_info_phonesWhereUniqueInput | contact_info_phonesWhereUniqueInput[]
    disconnect?: contact_info_phonesWhereUniqueInput | contact_info_phonesWhereUniqueInput[]
    delete?: contact_info_phonesWhereUniqueInput | contact_info_phonesWhereUniqueInput[]
    connect?: contact_info_phonesWhereUniqueInput | contact_info_phonesWhereUniqueInput[]
    update?: contact_info_phonesUpdateWithWhereUniqueWithoutContactsInput | contact_info_phonesUpdateWithWhereUniqueWithoutContactsInput[]
    updateMany?: contact_info_phonesUpdateManyWithWhereWithoutContactsInput | contact_info_phonesUpdateManyWithWhereWithoutContactsInput[]
    deleteMany?: contact_info_phonesScalarWhereInput | contact_info_phonesScalarWhereInput[]
  }

  export type customer_recordsUpdateOneRequiredWithoutContactsNestedInput = {
    create?: XOR<customer_recordsCreateWithoutContactsInput, customer_recordsUncheckedCreateWithoutContactsInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutContactsInput
    upsert?: customer_recordsUpsertWithoutContactsInput
    connect?: customer_recordsWhereUniqueInput
    update?: XOR<XOR<customer_recordsUpdateToOneWithWhereWithoutContactsInput, customer_recordsUpdateWithoutContactsInput>, customer_recordsUncheckedUpdateWithoutContactsInput>
  }

  export type contact_info_emailsUncheckedUpdateManyWithoutContactsNestedInput = {
    create?: XOR<contact_info_emailsCreateWithoutContactsInput, contact_info_emailsUncheckedCreateWithoutContactsInput> | contact_info_emailsCreateWithoutContactsInput[] | contact_info_emailsUncheckedCreateWithoutContactsInput[]
    connectOrCreate?: contact_info_emailsCreateOrConnectWithoutContactsInput | contact_info_emailsCreateOrConnectWithoutContactsInput[]
    upsert?: contact_info_emailsUpsertWithWhereUniqueWithoutContactsInput | contact_info_emailsUpsertWithWhereUniqueWithoutContactsInput[]
    createMany?: contact_info_emailsCreateManyContactsInputEnvelope
    set?: contact_info_emailsWhereUniqueInput | contact_info_emailsWhereUniqueInput[]
    disconnect?: contact_info_emailsWhereUniqueInput | contact_info_emailsWhereUniqueInput[]
    delete?: contact_info_emailsWhereUniqueInput | contact_info_emailsWhereUniqueInput[]
    connect?: contact_info_emailsWhereUniqueInput | contact_info_emailsWhereUniqueInput[]
    update?: contact_info_emailsUpdateWithWhereUniqueWithoutContactsInput | contact_info_emailsUpdateWithWhereUniqueWithoutContactsInput[]
    updateMany?: contact_info_emailsUpdateManyWithWhereWithoutContactsInput | contact_info_emailsUpdateManyWithWhereWithoutContactsInput[]
    deleteMany?: contact_info_emailsScalarWhereInput | contact_info_emailsScalarWhereInput[]
  }

  export type contact_info_phonesUncheckedUpdateManyWithoutContactsNestedInput = {
    create?: XOR<contact_info_phonesCreateWithoutContactsInput, contact_info_phonesUncheckedCreateWithoutContactsInput> | contact_info_phonesCreateWithoutContactsInput[] | contact_info_phonesUncheckedCreateWithoutContactsInput[]
    connectOrCreate?: contact_info_phonesCreateOrConnectWithoutContactsInput | contact_info_phonesCreateOrConnectWithoutContactsInput[]
    upsert?: contact_info_phonesUpsertWithWhereUniqueWithoutContactsInput | contact_info_phonesUpsertWithWhereUniqueWithoutContactsInput[]
    createMany?: contact_info_phonesCreateManyContactsInputEnvelope
    set?: contact_info_phonesWhereUniqueInput | contact_info_phonesWhereUniqueInput[]
    disconnect?: contact_info_phonesWhereUniqueInput | contact_info_phonesWhereUniqueInput[]
    delete?: contact_info_phonesWhereUniqueInput | contact_info_phonesWhereUniqueInput[]
    connect?: contact_info_phonesWhereUniqueInput | contact_info_phonesWhereUniqueInput[]
    update?: contact_info_phonesUpdateWithWhereUniqueWithoutContactsInput | contact_info_phonesUpdateWithWhereUniqueWithoutContactsInput[]
    updateMany?: contact_info_phonesUpdateManyWithWhereWithoutContactsInput | contact_info_phonesUpdateManyWithWhereWithoutContactsInput[]
    deleteMany?: contact_info_phonesScalarWhereInput | contact_info_phonesScalarWhereInput[]
  }

  export type accountsCreateNestedOneWithoutCustomer_recordsInput = {
    create?: XOR<accountsCreateWithoutCustomer_recordsInput, accountsUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: accountsCreateOrConnectWithoutCustomer_recordsInput
    connect?: accountsWhereUniqueInput
  }

  export type communicationsCreateNestedManyWithoutCustomer_recordsInput = {
    create?: XOR<communicationsCreateWithoutCustomer_recordsInput, communicationsUncheckedCreateWithoutCustomer_recordsInput> | communicationsCreateWithoutCustomer_recordsInput[] | communicationsUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: communicationsCreateOrConnectWithoutCustomer_recordsInput | communicationsCreateOrConnectWithoutCustomer_recordsInput[]
    createMany?: communicationsCreateManyCustomer_recordsInputEnvelope
    connect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
  }

  export type contactsCreateNestedManyWithoutCustomer_recordsInput = {
    create?: XOR<contactsCreateWithoutCustomer_recordsInput, contactsUncheckedCreateWithoutCustomer_recordsInput> | contactsCreateWithoutCustomer_recordsInput[] | contactsUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: contactsCreateOrConnectWithoutCustomer_recordsInput | contactsCreateOrConnectWithoutCustomer_recordsInput[]
    createMany?: contactsCreateManyCustomer_recordsInputEnvelope
    connect?: contactsWhereUniqueInput | contactsWhereUniqueInput[]
  }

  export type leadsCreateNestedOneWithoutCustomer_recordsInput = {
    create?: XOR<leadsCreateWithoutCustomer_recordsInput, leadsUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: leadsCreateOrConnectWithoutCustomer_recordsInput
    connect?: leadsWhereUniqueInput
  }

  export type notesCreateNestedManyWithoutCustomer_recordsInput = {
    create?: XOR<notesCreateWithoutCustomer_recordsInput, notesUncheckedCreateWithoutCustomer_recordsInput> | notesCreateWithoutCustomer_recordsInput[] | notesUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: notesCreateOrConnectWithoutCustomer_recordsInput | notesCreateOrConnectWithoutCustomer_recordsInput[]
    createMany?: notesCreateManyCustomer_recordsInputEnvelope
    connect?: notesWhereUniqueInput | notesWhereUniqueInput[]
  }

  export type opportunitiesCreateNestedOneWithoutCustomer_recordsInput = {
    create?: XOR<opportunitiesCreateWithoutCustomer_recordsInput, opportunitiesUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: opportunitiesCreateOrConnectWithoutCustomer_recordsInput
    connect?: opportunitiesWhereUniqueInput
  }

  export type accountsUncheckedCreateNestedOneWithoutCustomer_recordsInput = {
    create?: XOR<accountsCreateWithoutCustomer_recordsInput, accountsUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: accountsCreateOrConnectWithoutCustomer_recordsInput
    connect?: accountsWhereUniqueInput
  }

  export type communicationsUncheckedCreateNestedManyWithoutCustomer_recordsInput = {
    create?: XOR<communicationsCreateWithoutCustomer_recordsInput, communicationsUncheckedCreateWithoutCustomer_recordsInput> | communicationsCreateWithoutCustomer_recordsInput[] | communicationsUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: communicationsCreateOrConnectWithoutCustomer_recordsInput | communicationsCreateOrConnectWithoutCustomer_recordsInput[]
    createMany?: communicationsCreateManyCustomer_recordsInputEnvelope
    connect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
  }

  export type contactsUncheckedCreateNestedManyWithoutCustomer_recordsInput = {
    create?: XOR<contactsCreateWithoutCustomer_recordsInput, contactsUncheckedCreateWithoutCustomer_recordsInput> | contactsCreateWithoutCustomer_recordsInput[] | contactsUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: contactsCreateOrConnectWithoutCustomer_recordsInput | contactsCreateOrConnectWithoutCustomer_recordsInput[]
    createMany?: contactsCreateManyCustomer_recordsInputEnvelope
    connect?: contactsWhereUniqueInput | contactsWhereUniqueInput[]
  }

  export type leadsUncheckedCreateNestedOneWithoutCustomer_recordsInput = {
    create?: XOR<leadsCreateWithoutCustomer_recordsInput, leadsUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: leadsCreateOrConnectWithoutCustomer_recordsInput
    connect?: leadsWhereUniqueInput
  }

  export type notesUncheckedCreateNestedManyWithoutCustomer_recordsInput = {
    create?: XOR<notesCreateWithoutCustomer_recordsInput, notesUncheckedCreateWithoutCustomer_recordsInput> | notesCreateWithoutCustomer_recordsInput[] | notesUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: notesCreateOrConnectWithoutCustomer_recordsInput | notesCreateOrConnectWithoutCustomer_recordsInput[]
    createMany?: notesCreateManyCustomer_recordsInputEnvelope
    connect?: notesWhereUniqueInput | notesWhereUniqueInput[]
  }

  export type opportunitiesUncheckedCreateNestedOneWithoutCustomer_recordsInput = {
    create?: XOR<opportunitiesCreateWithoutCustomer_recordsInput, opportunitiesUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: opportunitiesCreateOrConnectWithoutCustomer_recordsInput
    connect?: opportunitiesWhereUniqueInput
  }

  export type accountsUpdateOneWithoutCustomer_recordsNestedInput = {
    create?: XOR<accountsCreateWithoutCustomer_recordsInput, accountsUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: accountsCreateOrConnectWithoutCustomer_recordsInput
    upsert?: accountsUpsertWithoutCustomer_recordsInput
    disconnect?: accountsWhereInput | boolean
    delete?: accountsWhereInput | boolean
    connect?: accountsWhereUniqueInput
    update?: XOR<XOR<accountsUpdateToOneWithWhereWithoutCustomer_recordsInput, accountsUpdateWithoutCustomer_recordsInput>, accountsUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type communicationsUpdateManyWithoutCustomer_recordsNestedInput = {
    create?: XOR<communicationsCreateWithoutCustomer_recordsInput, communicationsUncheckedCreateWithoutCustomer_recordsInput> | communicationsCreateWithoutCustomer_recordsInput[] | communicationsUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: communicationsCreateOrConnectWithoutCustomer_recordsInput | communicationsCreateOrConnectWithoutCustomer_recordsInput[]
    upsert?: communicationsUpsertWithWhereUniqueWithoutCustomer_recordsInput | communicationsUpsertWithWhereUniqueWithoutCustomer_recordsInput[]
    createMany?: communicationsCreateManyCustomer_recordsInputEnvelope
    set?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    disconnect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    delete?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    connect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    update?: communicationsUpdateWithWhereUniqueWithoutCustomer_recordsInput | communicationsUpdateWithWhereUniqueWithoutCustomer_recordsInput[]
    updateMany?: communicationsUpdateManyWithWhereWithoutCustomer_recordsInput | communicationsUpdateManyWithWhereWithoutCustomer_recordsInput[]
    deleteMany?: communicationsScalarWhereInput | communicationsScalarWhereInput[]
  }

  export type contactsUpdateManyWithoutCustomer_recordsNestedInput = {
    create?: XOR<contactsCreateWithoutCustomer_recordsInput, contactsUncheckedCreateWithoutCustomer_recordsInput> | contactsCreateWithoutCustomer_recordsInput[] | contactsUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: contactsCreateOrConnectWithoutCustomer_recordsInput | contactsCreateOrConnectWithoutCustomer_recordsInput[]
    upsert?: contactsUpsertWithWhereUniqueWithoutCustomer_recordsInput | contactsUpsertWithWhereUniqueWithoutCustomer_recordsInput[]
    createMany?: contactsCreateManyCustomer_recordsInputEnvelope
    set?: contactsWhereUniqueInput | contactsWhereUniqueInput[]
    disconnect?: contactsWhereUniqueInput | contactsWhereUniqueInput[]
    delete?: contactsWhereUniqueInput | contactsWhereUniqueInput[]
    connect?: contactsWhereUniqueInput | contactsWhereUniqueInput[]
    update?: contactsUpdateWithWhereUniqueWithoutCustomer_recordsInput | contactsUpdateWithWhereUniqueWithoutCustomer_recordsInput[]
    updateMany?: contactsUpdateManyWithWhereWithoutCustomer_recordsInput | contactsUpdateManyWithWhereWithoutCustomer_recordsInput[]
    deleteMany?: contactsScalarWhereInput | contactsScalarWhereInput[]
  }

  export type leadsUpdateOneWithoutCustomer_recordsNestedInput = {
    create?: XOR<leadsCreateWithoutCustomer_recordsInput, leadsUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: leadsCreateOrConnectWithoutCustomer_recordsInput
    upsert?: leadsUpsertWithoutCustomer_recordsInput
    disconnect?: leadsWhereInput | boolean
    delete?: leadsWhereInput | boolean
    connect?: leadsWhereUniqueInput
    update?: XOR<XOR<leadsUpdateToOneWithWhereWithoutCustomer_recordsInput, leadsUpdateWithoutCustomer_recordsInput>, leadsUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type notesUpdateManyWithoutCustomer_recordsNestedInput = {
    create?: XOR<notesCreateWithoutCustomer_recordsInput, notesUncheckedCreateWithoutCustomer_recordsInput> | notesCreateWithoutCustomer_recordsInput[] | notesUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: notesCreateOrConnectWithoutCustomer_recordsInput | notesCreateOrConnectWithoutCustomer_recordsInput[]
    upsert?: notesUpsertWithWhereUniqueWithoutCustomer_recordsInput | notesUpsertWithWhereUniqueWithoutCustomer_recordsInput[]
    createMany?: notesCreateManyCustomer_recordsInputEnvelope
    set?: notesWhereUniqueInput | notesWhereUniqueInput[]
    disconnect?: notesWhereUniqueInput | notesWhereUniqueInput[]
    delete?: notesWhereUniqueInput | notesWhereUniqueInput[]
    connect?: notesWhereUniqueInput | notesWhereUniqueInput[]
    update?: notesUpdateWithWhereUniqueWithoutCustomer_recordsInput | notesUpdateWithWhereUniqueWithoutCustomer_recordsInput[]
    updateMany?: notesUpdateManyWithWhereWithoutCustomer_recordsInput | notesUpdateManyWithWhereWithoutCustomer_recordsInput[]
    deleteMany?: notesScalarWhereInput | notesScalarWhereInput[]
  }

  export type opportunitiesUpdateOneWithoutCustomer_recordsNestedInput = {
    create?: XOR<opportunitiesCreateWithoutCustomer_recordsInput, opportunitiesUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: opportunitiesCreateOrConnectWithoutCustomer_recordsInput
    upsert?: opportunitiesUpsertWithoutCustomer_recordsInput
    disconnect?: opportunitiesWhereInput | boolean
    delete?: opportunitiesWhereInput | boolean
    connect?: opportunitiesWhereUniqueInput
    update?: XOR<XOR<opportunitiesUpdateToOneWithWhereWithoutCustomer_recordsInput, opportunitiesUpdateWithoutCustomer_recordsInput>, opportunitiesUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type accountsUncheckedUpdateOneWithoutCustomer_recordsNestedInput = {
    create?: XOR<accountsCreateWithoutCustomer_recordsInput, accountsUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: accountsCreateOrConnectWithoutCustomer_recordsInput
    upsert?: accountsUpsertWithoutCustomer_recordsInput
    disconnect?: accountsWhereInput | boolean
    delete?: accountsWhereInput | boolean
    connect?: accountsWhereUniqueInput
    update?: XOR<XOR<accountsUpdateToOneWithWhereWithoutCustomer_recordsInput, accountsUpdateWithoutCustomer_recordsInput>, accountsUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type communicationsUncheckedUpdateManyWithoutCustomer_recordsNestedInput = {
    create?: XOR<communicationsCreateWithoutCustomer_recordsInput, communicationsUncheckedCreateWithoutCustomer_recordsInput> | communicationsCreateWithoutCustomer_recordsInput[] | communicationsUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: communicationsCreateOrConnectWithoutCustomer_recordsInput | communicationsCreateOrConnectWithoutCustomer_recordsInput[]
    upsert?: communicationsUpsertWithWhereUniqueWithoutCustomer_recordsInput | communicationsUpsertWithWhereUniqueWithoutCustomer_recordsInput[]
    createMany?: communicationsCreateManyCustomer_recordsInputEnvelope
    set?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    disconnect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    delete?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    connect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    update?: communicationsUpdateWithWhereUniqueWithoutCustomer_recordsInput | communicationsUpdateWithWhereUniqueWithoutCustomer_recordsInput[]
    updateMany?: communicationsUpdateManyWithWhereWithoutCustomer_recordsInput | communicationsUpdateManyWithWhereWithoutCustomer_recordsInput[]
    deleteMany?: communicationsScalarWhereInput | communicationsScalarWhereInput[]
  }

  export type contactsUncheckedUpdateManyWithoutCustomer_recordsNestedInput = {
    create?: XOR<contactsCreateWithoutCustomer_recordsInput, contactsUncheckedCreateWithoutCustomer_recordsInput> | contactsCreateWithoutCustomer_recordsInput[] | contactsUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: contactsCreateOrConnectWithoutCustomer_recordsInput | contactsCreateOrConnectWithoutCustomer_recordsInput[]
    upsert?: contactsUpsertWithWhereUniqueWithoutCustomer_recordsInput | contactsUpsertWithWhereUniqueWithoutCustomer_recordsInput[]
    createMany?: contactsCreateManyCustomer_recordsInputEnvelope
    set?: contactsWhereUniqueInput | contactsWhereUniqueInput[]
    disconnect?: contactsWhereUniqueInput | contactsWhereUniqueInput[]
    delete?: contactsWhereUniqueInput | contactsWhereUniqueInput[]
    connect?: contactsWhereUniqueInput | contactsWhereUniqueInput[]
    update?: contactsUpdateWithWhereUniqueWithoutCustomer_recordsInput | contactsUpdateWithWhereUniqueWithoutCustomer_recordsInput[]
    updateMany?: contactsUpdateManyWithWhereWithoutCustomer_recordsInput | contactsUpdateManyWithWhereWithoutCustomer_recordsInput[]
    deleteMany?: contactsScalarWhereInput | contactsScalarWhereInput[]
  }

  export type leadsUncheckedUpdateOneWithoutCustomer_recordsNestedInput = {
    create?: XOR<leadsCreateWithoutCustomer_recordsInput, leadsUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: leadsCreateOrConnectWithoutCustomer_recordsInput
    upsert?: leadsUpsertWithoutCustomer_recordsInput
    disconnect?: leadsWhereInput | boolean
    delete?: leadsWhereInput | boolean
    connect?: leadsWhereUniqueInput
    update?: XOR<XOR<leadsUpdateToOneWithWhereWithoutCustomer_recordsInput, leadsUpdateWithoutCustomer_recordsInput>, leadsUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type notesUncheckedUpdateManyWithoutCustomer_recordsNestedInput = {
    create?: XOR<notesCreateWithoutCustomer_recordsInput, notesUncheckedCreateWithoutCustomer_recordsInput> | notesCreateWithoutCustomer_recordsInput[] | notesUncheckedCreateWithoutCustomer_recordsInput[]
    connectOrCreate?: notesCreateOrConnectWithoutCustomer_recordsInput | notesCreateOrConnectWithoutCustomer_recordsInput[]
    upsert?: notesUpsertWithWhereUniqueWithoutCustomer_recordsInput | notesUpsertWithWhereUniqueWithoutCustomer_recordsInput[]
    createMany?: notesCreateManyCustomer_recordsInputEnvelope
    set?: notesWhereUniqueInput | notesWhereUniqueInput[]
    disconnect?: notesWhereUniqueInput | notesWhereUniqueInput[]
    delete?: notesWhereUniqueInput | notesWhereUniqueInput[]
    connect?: notesWhereUniqueInput | notesWhereUniqueInput[]
    update?: notesUpdateWithWhereUniqueWithoutCustomer_recordsInput | notesUpdateWithWhereUniqueWithoutCustomer_recordsInput[]
    updateMany?: notesUpdateManyWithWhereWithoutCustomer_recordsInput | notesUpdateManyWithWhereWithoutCustomer_recordsInput[]
    deleteMany?: notesScalarWhereInput | notesScalarWhereInput[]
  }

  export type opportunitiesUncheckedUpdateOneWithoutCustomer_recordsNestedInput = {
    create?: XOR<opportunitiesCreateWithoutCustomer_recordsInput, opportunitiesUncheckedCreateWithoutCustomer_recordsInput>
    connectOrCreate?: opportunitiesCreateOrConnectWithoutCustomer_recordsInput
    upsert?: opportunitiesUpsertWithoutCustomer_recordsInput
    disconnect?: opportunitiesWhereInput | boolean
    delete?: opportunitiesWhereInput | boolean
    connect?: opportunitiesWhereUniqueInput
    update?: XOR<XOR<opportunitiesUpdateToOneWithWhereWithoutCustomer_recordsInput, opportunitiesUpdateWithoutCustomer_recordsInput>, opportunitiesUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type customer_recordsCreateNestedOneWithoutLeadsInput = {
    create?: XOR<customer_recordsCreateWithoutLeadsInput, customer_recordsUncheckedCreateWithoutLeadsInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutLeadsInput
    connect?: customer_recordsWhereUniqueInput
  }

  export type customer_recordsUpdateOneRequiredWithoutLeadsNestedInput = {
    create?: XOR<customer_recordsCreateWithoutLeadsInput, customer_recordsUncheckedCreateWithoutLeadsInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutLeadsInput
    upsert?: customer_recordsUpsertWithoutLeadsInput
    connect?: customer_recordsWhereUniqueInput
    update?: XOR<XOR<customer_recordsUpdateToOneWithWhereWithoutLeadsInput, customer_recordsUpdateWithoutLeadsInput>, customer_recordsUncheckedUpdateWithoutLeadsInput>
  }

  export type communicationsCreateNestedManyWithoutMarketing_campaignsInput = {
    create?: XOR<communicationsCreateWithoutMarketing_campaignsInput, communicationsUncheckedCreateWithoutMarketing_campaignsInput> | communicationsCreateWithoutMarketing_campaignsInput[] | communicationsUncheckedCreateWithoutMarketing_campaignsInput[]
    connectOrCreate?: communicationsCreateOrConnectWithoutMarketing_campaignsInput | communicationsCreateOrConnectWithoutMarketing_campaignsInput[]
    createMany?: communicationsCreateManyMarketing_campaignsInputEnvelope
    connect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
  }

  export type communicationsUncheckedCreateNestedManyWithoutMarketing_campaignsInput = {
    create?: XOR<communicationsCreateWithoutMarketing_campaignsInput, communicationsUncheckedCreateWithoutMarketing_campaignsInput> | communicationsCreateWithoutMarketing_campaignsInput[] | communicationsUncheckedCreateWithoutMarketing_campaignsInput[]
    connectOrCreate?: communicationsCreateOrConnectWithoutMarketing_campaignsInput | communicationsCreateOrConnectWithoutMarketing_campaignsInput[]
    createMany?: communicationsCreateManyMarketing_campaignsInputEnvelope
    connect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
  }

  export type communicationsUpdateManyWithoutMarketing_campaignsNestedInput = {
    create?: XOR<communicationsCreateWithoutMarketing_campaignsInput, communicationsUncheckedCreateWithoutMarketing_campaignsInput> | communicationsCreateWithoutMarketing_campaignsInput[] | communicationsUncheckedCreateWithoutMarketing_campaignsInput[]
    connectOrCreate?: communicationsCreateOrConnectWithoutMarketing_campaignsInput | communicationsCreateOrConnectWithoutMarketing_campaignsInput[]
    upsert?: communicationsUpsertWithWhereUniqueWithoutMarketing_campaignsInput | communicationsUpsertWithWhereUniqueWithoutMarketing_campaignsInput[]
    createMany?: communicationsCreateManyMarketing_campaignsInputEnvelope
    set?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    disconnect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    delete?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    connect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    update?: communicationsUpdateWithWhereUniqueWithoutMarketing_campaignsInput | communicationsUpdateWithWhereUniqueWithoutMarketing_campaignsInput[]
    updateMany?: communicationsUpdateManyWithWhereWithoutMarketing_campaignsInput | communicationsUpdateManyWithWhereWithoutMarketing_campaignsInput[]
    deleteMany?: communicationsScalarWhereInput | communicationsScalarWhereInput[]
  }

  export type communicationsUncheckedUpdateManyWithoutMarketing_campaignsNestedInput = {
    create?: XOR<communicationsCreateWithoutMarketing_campaignsInput, communicationsUncheckedCreateWithoutMarketing_campaignsInput> | communicationsCreateWithoutMarketing_campaignsInput[] | communicationsUncheckedCreateWithoutMarketing_campaignsInput[]
    connectOrCreate?: communicationsCreateOrConnectWithoutMarketing_campaignsInput | communicationsCreateOrConnectWithoutMarketing_campaignsInput[]
    upsert?: communicationsUpsertWithWhereUniqueWithoutMarketing_campaignsInput | communicationsUpsertWithWhereUniqueWithoutMarketing_campaignsInput[]
    createMany?: communicationsCreateManyMarketing_campaignsInputEnvelope
    set?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    disconnect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    delete?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    connect?: communicationsWhereUniqueInput | communicationsWhereUniqueInput[]
    update?: communicationsUpdateWithWhereUniqueWithoutMarketing_campaignsInput | communicationsUpdateWithWhereUniqueWithoutMarketing_campaignsInput[]
    updateMany?: communicationsUpdateManyWithWhereWithoutMarketing_campaignsInput | communicationsUpdateManyWithWhereWithoutMarketing_campaignsInput[]
    deleteMany?: communicationsScalarWhereInput | communicationsScalarWhereInput[]
  }

  export type repsCreateNestedOneWithoutNotesInput = {
    create?: XOR<repsCreateWithoutNotesInput, repsUncheckedCreateWithoutNotesInput>
    connectOrCreate?: repsCreateOrConnectWithoutNotesInput
    connect?: repsWhereUniqueInput
  }

  export type customer_recordsCreateNestedOneWithoutNotesInput = {
    create?: XOR<customer_recordsCreateWithoutNotesInput, customer_recordsUncheckedCreateWithoutNotesInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutNotesInput
    connect?: customer_recordsWhereUniqueInput
  }

  export type repsUpdateOneWithoutNotesNestedInput = {
    create?: XOR<repsCreateWithoutNotesInput, repsUncheckedCreateWithoutNotesInput>
    connectOrCreate?: repsCreateOrConnectWithoutNotesInput
    upsert?: repsUpsertWithoutNotesInput
    disconnect?: repsWhereInput | boolean
    delete?: repsWhereInput | boolean
    connect?: repsWhereUniqueInput
    update?: XOR<XOR<repsUpdateToOneWithWhereWithoutNotesInput, repsUpdateWithoutNotesInput>, repsUncheckedUpdateWithoutNotesInput>
  }

  export type customer_recordsUpdateOneRequiredWithoutNotesNestedInput = {
    create?: XOR<customer_recordsCreateWithoutNotesInput, customer_recordsUncheckedCreateWithoutNotesInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutNotesInput
    upsert?: customer_recordsUpsertWithoutNotesInput
    connect?: customer_recordsWhereUniqueInput
    update?: XOR<XOR<customer_recordsUpdateToOneWithWhereWithoutNotesInput, customer_recordsUpdateWithoutNotesInput>, customer_recordsUncheckedUpdateWithoutNotesInput>
  }

  export type customer_recordsCreateNestedOneWithoutOpportunitiesInput = {
    create?: XOR<customer_recordsCreateWithoutOpportunitiesInput, customer_recordsUncheckedCreateWithoutOpportunitiesInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutOpportunitiesInput
    connect?: customer_recordsWhereUniqueInput
  }

  export type customer_recordsUpdateOneRequiredWithoutOpportunitiesNestedInput = {
    create?: XOR<customer_recordsCreateWithoutOpportunitiesInput, customer_recordsUncheckedCreateWithoutOpportunitiesInput>
    connectOrCreate?: customer_recordsCreateOrConnectWithoutOpportunitiesInput
    upsert?: customer_recordsUpsertWithoutOpportunitiesInput
    connect?: customer_recordsWhereUniqueInput
    update?: XOR<XOR<customer_recordsUpdateToOneWithWhereWithoutOpportunitiesInput, customer_recordsUpdateWithoutOpportunitiesInput>, customer_recordsUncheckedUpdateWithoutOpportunitiesInput>
  }

  export type account_ai_chatCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_ai_chatCreateWithoutPlansInput, account_ai_chatUncheckedCreateWithoutPlansInput> | account_ai_chatCreateWithoutPlansInput[] | account_ai_chatUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_ai_chatCreateOrConnectWithoutPlansInput | account_ai_chatCreateOrConnectWithoutPlansInput[]
    createMany?: account_ai_chatCreateManyPlansInputEnvelope
    connect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
  }

  export type account_blog_post_instancesCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_blog_post_instancesCreateWithoutPlansInput, account_blog_post_instancesUncheckedCreateWithoutPlansInput> | account_blog_post_instancesCreateWithoutPlansInput[] | account_blog_post_instancesUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_blog_post_instancesCreateOrConnectWithoutPlansInput | account_blog_post_instancesCreateOrConnectWithoutPlansInput[]
    createMany?: account_blog_post_instancesCreateManyPlansInputEnvelope
    connect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
  }

  export type account_blog_postsCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_blog_postsCreateWithoutPlansInput, account_blog_postsUncheckedCreateWithoutPlansInput> | account_blog_postsCreateWithoutPlansInput[] | account_blog_postsUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_blog_postsCreateOrConnectWithoutPlansInput | account_blog_postsCreateOrConnectWithoutPlansInput[]
    createMany?: account_blog_postsCreateManyPlansInputEnvelope
    connect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
  }

  export type account_plansCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_plansCreateWithoutPlansInput, account_plansUncheckedCreateWithoutPlansInput> | account_plansCreateWithoutPlansInput[] | account_plansUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_plansCreateOrConnectWithoutPlansInput | account_plansCreateOrConnectWithoutPlansInput[]
    createMany?: account_plansCreateManyPlansInputEnvelope
    connect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
  }

  export type account_review_generatorCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_review_generatorCreateWithoutPlansInput, account_review_generatorUncheckedCreateWithoutPlansInput> | account_review_generatorCreateWithoutPlansInput[] | account_review_generatorUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_review_generatorCreateOrConnectWithoutPlansInput | account_review_generatorCreateOrConnectWithoutPlansInput[]
    createMany?: account_review_generatorCreateManyPlansInputEnvelope
    connect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
  }

  export type account_social_mediaCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_social_mediaCreateWithoutPlansInput, account_social_mediaUncheckedCreateWithoutPlansInput> | account_social_mediaCreateWithoutPlansInput[] | account_social_mediaUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_social_mediaCreateOrConnectWithoutPlansInput | account_social_mediaCreateOrConnectWithoutPlansInput[]
    createMany?: account_social_mediaCreateManyPlansInputEnvelope
    connect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
  }

  export type account_ai_chatUncheckedCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_ai_chatCreateWithoutPlansInput, account_ai_chatUncheckedCreateWithoutPlansInput> | account_ai_chatCreateWithoutPlansInput[] | account_ai_chatUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_ai_chatCreateOrConnectWithoutPlansInput | account_ai_chatCreateOrConnectWithoutPlansInput[]
    createMany?: account_ai_chatCreateManyPlansInputEnvelope
    connect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
  }

  export type account_blog_post_instancesUncheckedCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_blog_post_instancesCreateWithoutPlansInput, account_blog_post_instancesUncheckedCreateWithoutPlansInput> | account_blog_post_instancesCreateWithoutPlansInput[] | account_blog_post_instancesUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_blog_post_instancesCreateOrConnectWithoutPlansInput | account_blog_post_instancesCreateOrConnectWithoutPlansInput[]
    createMany?: account_blog_post_instancesCreateManyPlansInputEnvelope
    connect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
  }

  export type account_blog_postsUncheckedCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_blog_postsCreateWithoutPlansInput, account_blog_postsUncheckedCreateWithoutPlansInput> | account_blog_postsCreateWithoutPlansInput[] | account_blog_postsUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_blog_postsCreateOrConnectWithoutPlansInput | account_blog_postsCreateOrConnectWithoutPlansInput[]
    createMany?: account_blog_postsCreateManyPlansInputEnvelope
    connect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
  }

  export type account_plansUncheckedCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_plansCreateWithoutPlansInput, account_plansUncheckedCreateWithoutPlansInput> | account_plansCreateWithoutPlansInput[] | account_plansUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_plansCreateOrConnectWithoutPlansInput | account_plansCreateOrConnectWithoutPlansInput[]
    createMany?: account_plansCreateManyPlansInputEnvelope
    connect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
  }

  export type account_review_generatorUncheckedCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_review_generatorCreateWithoutPlansInput, account_review_generatorUncheckedCreateWithoutPlansInput> | account_review_generatorCreateWithoutPlansInput[] | account_review_generatorUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_review_generatorCreateOrConnectWithoutPlansInput | account_review_generatorCreateOrConnectWithoutPlansInput[]
    createMany?: account_review_generatorCreateManyPlansInputEnvelope
    connect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
  }

  export type account_social_mediaUncheckedCreateNestedManyWithoutPlansInput = {
    create?: XOR<account_social_mediaCreateWithoutPlansInput, account_social_mediaUncheckedCreateWithoutPlansInput> | account_social_mediaCreateWithoutPlansInput[] | account_social_mediaUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_social_mediaCreateOrConnectWithoutPlansInput | account_social_mediaCreateOrConnectWithoutPlansInput[]
    createMany?: account_social_mediaCreateManyPlansInputEnvelope
    connect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
  }

  export type account_ai_chatUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_ai_chatCreateWithoutPlansInput, account_ai_chatUncheckedCreateWithoutPlansInput> | account_ai_chatCreateWithoutPlansInput[] | account_ai_chatUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_ai_chatCreateOrConnectWithoutPlansInput | account_ai_chatCreateOrConnectWithoutPlansInput[]
    upsert?: account_ai_chatUpsertWithWhereUniqueWithoutPlansInput | account_ai_chatUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_ai_chatCreateManyPlansInputEnvelope
    set?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    disconnect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    delete?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    connect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    update?: account_ai_chatUpdateWithWhereUniqueWithoutPlansInput | account_ai_chatUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_ai_chatUpdateManyWithWhereWithoutPlansInput | account_ai_chatUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_ai_chatScalarWhereInput | account_ai_chatScalarWhereInput[]
  }

  export type account_blog_post_instancesUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_blog_post_instancesCreateWithoutPlansInput, account_blog_post_instancesUncheckedCreateWithoutPlansInput> | account_blog_post_instancesCreateWithoutPlansInput[] | account_blog_post_instancesUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_blog_post_instancesCreateOrConnectWithoutPlansInput | account_blog_post_instancesCreateOrConnectWithoutPlansInput[]
    upsert?: account_blog_post_instancesUpsertWithWhereUniqueWithoutPlansInput | account_blog_post_instancesUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_blog_post_instancesCreateManyPlansInputEnvelope
    set?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    disconnect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    delete?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    connect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    update?: account_blog_post_instancesUpdateWithWhereUniqueWithoutPlansInput | account_blog_post_instancesUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_blog_post_instancesUpdateManyWithWhereWithoutPlansInput | account_blog_post_instancesUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_blog_post_instancesScalarWhereInput | account_blog_post_instancesScalarWhereInput[]
  }

  export type account_blog_postsUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_blog_postsCreateWithoutPlansInput, account_blog_postsUncheckedCreateWithoutPlansInput> | account_blog_postsCreateWithoutPlansInput[] | account_blog_postsUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_blog_postsCreateOrConnectWithoutPlansInput | account_blog_postsCreateOrConnectWithoutPlansInput[]
    upsert?: account_blog_postsUpsertWithWhereUniqueWithoutPlansInput | account_blog_postsUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_blog_postsCreateManyPlansInputEnvelope
    set?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    disconnect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    delete?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    connect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    update?: account_blog_postsUpdateWithWhereUniqueWithoutPlansInput | account_blog_postsUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_blog_postsUpdateManyWithWhereWithoutPlansInput | account_blog_postsUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_blog_postsScalarWhereInput | account_blog_postsScalarWhereInput[]
  }

  export type account_plansUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_plansCreateWithoutPlansInput, account_plansUncheckedCreateWithoutPlansInput> | account_plansCreateWithoutPlansInput[] | account_plansUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_plansCreateOrConnectWithoutPlansInput | account_plansCreateOrConnectWithoutPlansInput[]
    upsert?: account_plansUpsertWithWhereUniqueWithoutPlansInput | account_plansUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_plansCreateManyPlansInputEnvelope
    set?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    disconnect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    delete?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    connect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    update?: account_plansUpdateWithWhereUniqueWithoutPlansInput | account_plansUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_plansUpdateManyWithWhereWithoutPlansInput | account_plansUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_plansScalarWhereInput | account_plansScalarWhereInput[]
  }

  export type account_review_generatorUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_review_generatorCreateWithoutPlansInput, account_review_generatorUncheckedCreateWithoutPlansInput> | account_review_generatorCreateWithoutPlansInput[] | account_review_generatorUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_review_generatorCreateOrConnectWithoutPlansInput | account_review_generatorCreateOrConnectWithoutPlansInput[]
    upsert?: account_review_generatorUpsertWithWhereUniqueWithoutPlansInput | account_review_generatorUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_review_generatorCreateManyPlansInputEnvelope
    set?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    disconnect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    delete?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    connect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    update?: account_review_generatorUpdateWithWhereUniqueWithoutPlansInput | account_review_generatorUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_review_generatorUpdateManyWithWhereWithoutPlansInput | account_review_generatorUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_review_generatorScalarWhereInput | account_review_generatorScalarWhereInput[]
  }

  export type account_social_mediaUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_social_mediaCreateWithoutPlansInput, account_social_mediaUncheckedCreateWithoutPlansInput> | account_social_mediaCreateWithoutPlansInput[] | account_social_mediaUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_social_mediaCreateOrConnectWithoutPlansInput | account_social_mediaCreateOrConnectWithoutPlansInput[]
    upsert?: account_social_mediaUpsertWithWhereUniqueWithoutPlansInput | account_social_mediaUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_social_mediaCreateManyPlansInputEnvelope
    set?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    disconnect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    delete?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    connect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    update?: account_social_mediaUpdateWithWhereUniqueWithoutPlansInput | account_social_mediaUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_social_mediaUpdateManyWithWhereWithoutPlansInput | account_social_mediaUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_social_mediaScalarWhereInput | account_social_mediaScalarWhereInput[]
  }

  export type account_ai_chatUncheckedUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_ai_chatCreateWithoutPlansInput, account_ai_chatUncheckedCreateWithoutPlansInput> | account_ai_chatCreateWithoutPlansInput[] | account_ai_chatUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_ai_chatCreateOrConnectWithoutPlansInput | account_ai_chatCreateOrConnectWithoutPlansInput[]
    upsert?: account_ai_chatUpsertWithWhereUniqueWithoutPlansInput | account_ai_chatUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_ai_chatCreateManyPlansInputEnvelope
    set?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    disconnect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    delete?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    connect?: account_ai_chatWhereUniqueInput | account_ai_chatWhereUniqueInput[]
    update?: account_ai_chatUpdateWithWhereUniqueWithoutPlansInput | account_ai_chatUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_ai_chatUpdateManyWithWhereWithoutPlansInput | account_ai_chatUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_ai_chatScalarWhereInput | account_ai_chatScalarWhereInput[]
  }

  export type account_blog_post_instancesUncheckedUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_blog_post_instancesCreateWithoutPlansInput, account_blog_post_instancesUncheckedCreateWithoutPlansInput> | account_blog_post_instancesCreateWithoutPlansInput[] | account_blog_post_instancesUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_blog_post_instancesCreateOrConnectWithoutPlansInput | account_blog_post_instancesCreateOrConnectWithoutPlansInput[]
    upsert?: account_blog_post_instancesUpsertWithWhereUniqueWithoutPlansInput | account_blog_post_instancesUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_blog_post_instancesCreateManyPlansInputEnvelope
    set?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    disconnect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    delete?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    connect?: account_blog_post_instancesWhereUniqueInput | account_blog_post_instancesWhereUniqueInput[]
    update?: account_blog_post_instancesUpdateWithWhereUniqueWithoutPlansInput | account_blog_post_instancesUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_blog_post_instancesUpdateManyWithWhereWithoutPlansInput | account_blog_post_instancesUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_blog_post_instancesScalarWhereInput | account_blog_post_instancesScalarWhereInput[]
  }

  export type account_blog_postsUncheckedUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_blog_postsCreateWithoutPlansInput, account_blog_postsUncheckedCreateWithoutPlansInput> | account_blog_postsCreateWithoutPlansInput[] | account_blog_postsUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_blog_postsCreateOrConnectWithoutPlansInput | account_blog_postsCreateOrConnectWithoutPlansInput[]
    upsert?: account_blog_postsUpsertWithWhereUniqueWithoutPlansInput | account_blog_postsUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_blog_postsCreateManyPlansInputEnvelope
    set?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    disconnect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    delete?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    connect?: account_blog_postsWhereUniqueInput | account_blog_postsWhereUniqueInput[]
    update?: account_blog_postsUpdateWithWhereUniqueWithoutPlansInput | account_blog_postsUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_blog_postsUpdateManyWithWhereWithoutPlansInput | account_blog_postsUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_blog_postsScalarWhereInput | account_blog_postsScalarWhereInput[]
  }

  export type account_plansUncheckedUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_plansCreateWithoutPlansInput, account_plansUncheckedCreateWithoutPlansInput> | account_plansCreateWithoutPlansInput[] | account_plansUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_plansCreateOrConnectWithoutPlansInput | account_plansCreateOrConnectWithoutPlansInput[]
    upsert?: account_plansUpsertWithWhereUniqueWithoutPlansInput | account_plansUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_plansCreateManyPlansInputEnvelope
    set?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    disconnect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    delete?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    connect?: account_plansWhereUniqueInput | account_plansWhereUniqueInput[]
    update?: account_plansUpdateWithWhereUniqueWithoutPlansInput | account_plansUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_plansUpdateManyWithWhereWithoutPlansInput | account_plansUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_plansScalarWhereInput | account_plansScalarWhereInput[]
  }

  export type account_review_generatorUncheckedUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_review_generatorCreateWithoutPlansInput, account_review_generatorUncheckedCreateWithoutPlansInput> | account_review_generatorCreateWithoutPlansInput[] | account_review_generatorUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_review_generatorCreateOrConnectWithoutPlansInput | account_review_generatorCreateOrConnectWithoutPlansInput[]
    upsert?: account_review_generatorUpsertWithWhereUniqueWithoutPlansInput | account_review_generatorUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_review_generatorCreateManyPlansInputEnvelope
    set?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    disconnect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    delete?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    connect?: account_review_generatorWhereUniqueInput | account_review_generatorWhereUniqueInput[]
    update?: account_review_generatorUpdateWithWhereUniqueWithoutPlansInput | account_review_generatorUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_review_generatorUpdateManyWithWhereWithoutPlansInput | account_review_generatorUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_review_generatorScalarWhereInput | account_review_generatorScalarWhereInput[]
  }

  export type account_social_mediaUncheckedUpdateManyWithoutPlansNestedInput = {
    create?: XOR<account_social_mediaCreateWithoutPlansInput, account_social_mediaUncheckedCreateWithoutPlansInput> | account_social_mediaCreateWithoutPlansInput[] | account_social_mediaUncheckedCreateWithoutPlansInput[]
    connectOrCreate?: account_social_mediaCreateOrConnectWithoutPlansInput | account_social_mediaCreateOrConnectWithoutPlansInput[]
    upsert?: account_social_mediaUpsertWithWhereUniqueWithoutPlansInput | account_social_mediaUpsertWithWhereUniqueWithoutPlansInput[]
    createMany?: account_social_mediaCreateManyPlansInputEnvelope
    set?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    disconnect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    delete?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    connect?: account_social_mediaWhereUniqueInput | account_social_mediaWhereUniqueInput[]
    update?: account_social_mediaUpdateWithWhereUniqueWithoutPlansInput | account_social_mediaUpdateWithWhereUniqueWithoutPlansInput[]
    updateMany?: account_social_mediaUpdateManyWithWhereWithoutPlansInput | account_social_mediaUpdateManyWithWhereWithoutPlansInput[]
    deleteMany?: account_social_mediaScalarWhereInput | account_social_mediaScalarWhereInput[]
  }

  export type notesCreateNestedManyWithoutRepsInput = {
    create?: XOR<notesCreateWithoutRepsInput, notesUncheckedCreateWithoutRepsInput> | notesCreateWithoutRepsInput[] | notesUncheckedCreateWithoutRepsInput[]
    connectOrCreate?: notesCreateOrConnectWithoutRepsInput | notesCreateOrConnectWithoutRepsInput[]
    createMany?: notesCreateManyRepsInputEnvelope
    connect?: notesWhereUniqueInput | notesWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutRepsInput = {
    create?: XOR<usersCreateWithoutRepsInput, usersUncheckedCreateWithoutRepsInput>
    connectOrCreate?: usersCreateOrConnectWithoutRepsInput
    connect?: usersWhereUniqueInput
  }

  export type notesUncheckedCreateNestedManyWithoutRepsInput = {
    create?: XOR<notesCreateWithoutRepsInput, notesUncheckedCreateWithoutRepsInput> | notesCreateWithoutRepsInput[] | notesUncheckedCreateWithoutRepsInput[]
    connectOrCreate?: notesCreateOrConnectWithoutRepsInput | notesCreateOrConnectWithoutRepsInput[]
    createMany?: notesCreateManyRepsInputEnvelope
    connect?: notesWhereUniqueInput | notesWhereUniqueInput[]
  }

  export type notesUpdateManyWithoutRepsNestedInput = {
    create?: XOR<notesCreateWithoutRepsInput, notesUncheckedCreateWithoutRepsInput> | notesCreateWithoutRepsInput[] | notesUncheckedCreateWithoutRepsInput[]
    connectOrCreate?: notesCreateOrConnectWithoutRepsInput | notesCreateOrConnectWithoutRepsInput[]
    upsert?: notesUpsertWithWhereUniqueWithoutRepsInput | notesUpsertWithWhereUniqueWithoutRepsInput[]
    createMany?: notesCreateManyRepsInputEnvelope
    set?: notesWhereUniqueInput | notesWhereUniqueInput[]
    disconnect?: notesWhereUniqueInput | notesWhereUniqueInput[]
    delete?: notesWhereUniqueInput | notesWhereUniqueInput[]
    connect?: notesWhereUniqueInput | notesWhereUniqueInput[]
    update?: notesUpdateWithWhereUniqueWithoutRepsInput | notesUpdateWithWhereUniqueWithoutRepsInput[]
    updateMany?: notesUpdateManyWithWhereWithoutRepsInput | notesUpdateManyWithWhereWithoutRepsInput[]
    deleteMany?: notesScalarWhereInput | notesScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutRepsNestedInput = {
    create?: XOR<usersCreateWithoutRepsInput, usersUncheckedCreateWithoutRepsInput>
    connectOrCreate?: usersCreateOrConnectWithoutRepsInput
    upsert?: usersUpsertWithoutRepsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutRepsInput, usersUpdateWithoutRepsInput>, usersUncheckedUpdateWithoutRepsInput>
  }

  export type notesUncheckedUpdateManyWithoutRepsNestedInput = {
    create?: XOR<notesCreateWithoutRepsInput, notesUncheckedCreateWithoutRepsInput> | notesCreateWithoutRepsInput[] | notesUncheckedCreateWithoutRepsInput[]
    connectOrCreate?: notesCreateOrConnectWithoutRepsInput | notesCreateOrConnectWithoutRepsInput[]
    upsert?: notesUpsertWithWhereUniqueWithoutRepsInput | notesUpsertWithWhereUniqueWithoutRepsInput[]
    createMany?: notesCreateManyRepsInputEnvelope
    set?: notesWhereUniqueInput | notesWhereUniqueInput[]
    disconnect?: notesWhereUniqueInput | notesWhereUniqueInput[]
    delete?: notesWhereUniqueInput | notesWhereUniqueInput[]
    connect?: notesWhereUniqueInput | notesWhereUniqueInput[]
    update?: notesUpdateWithWhereUniqueWithoutRepsInput | notesUpdateWithWhereUniqueWithoutRepsInput[]
    updateMany?: notesUpdateManyWithWhereWithoutRepsInput | notesUpdateManyWithWhereWithoutRepsInput[]
    deleteMany?: notesScalarWhereInput | notesScalarWhereInput[]
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumcode_challenge_methodFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodFilter<$PrismaModel> | $Enums.code_challenge_method
  }

  export type NestedEnumcode_challenge_methodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodWithAggregatesFilter<$PrismaModel> | $Enums.code_challenge_method
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
    _max?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumfactor_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeFilter<$PrismaModel> | $Enums.factor_type
  }

  export type NestedEnumfactor_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusFilter<$PrismaModel> | $Enums.factor_status
  }

  export type NestedEnumfactor_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeWithAggregatesFilter<$PrismaModel> | $Enums.factor_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_typeFilter<$PrismaModel>
    _max?: NestedEnumfactor_typeFilter<$PrismaModel>
  }

  export type NestedEnumfactor_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusWithAggregatesFilter<$PrismaModel> | $Enums.factor_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_statusFilter<$PrismaModel>
    _max?: NestedEnumfactor_statusFilter<$PrismaModel>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumaal_levelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableFilter<$PrismaModel> | $Enums.aal_level | null
  }

  export type NestedEnumaal_levelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableWithAggregatesFilter<$PrismaModel> | $Enums.aal_level | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumaal_levelNullableFilter<$PrismaModel>
    _max?: NestedEnumaal_levelNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type saml_relay_statesCreateWithoutFlow_stateInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    from_ip_address?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    sso_providers: sso_providersCreateNestedOneWithoutSaml_relay_statesInput
  }

  export type saml_relay_statesUncheckedCreateWithoutFlow_stateInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    from_ip_address?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_relay_statesCreateOrConnectWithoutFlow_stateInput = {
    where: saml_relay_statesWhereUniqueInput
    create: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput>
  }

  export type saml_relay_statesCreateManyFlow_stateInputEnvelope = {
    data: saml_relay_statesCreateManyFlow_stateInput | saml_relay_statesCreateManyFlow_stateInput[]
    skipDuplicates?: boolean
  }

  export type saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput = {
    where: saml_relay_statesWhereUniqueInput
    update: XOR<saml_relay_statesUpdateWithoutFlow_stateInput, saml_relay_statesUncheckedUpdateWithoutFlow_stateInput>
    create: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput>
  }

  export type saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput = {
    where: saml_relay_statesWhereUniqueInput
    data: XOR<saml_relay_statesUpdateWithoutFlow_stateInput, saml_relay_statesUncheckedUpdateWithoutFlow_stateInput>
  }

  export type saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput = {
    where: saml_relay_statesScalarWhereInput
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyWithoutFlow_stateInput>
  }

  export type saml_relay_statesScalarWhereInput = {
    AND?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
    OR?: saml_relay_statesScalarWhereInput[]
    NOT?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
    id?: UuidFilter<"saml_relay_states"> | string
    sso_provider_id?: UuidFilter<"saml_relay_states"> | string
    request_id?: StringFilter<"saml_relay_states"> | string
    for_email?: StringNullableFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableFilter<"saml_relay_states"> | string | null
    from_ip_address?: StringNullableFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableFilter<"saml_relay_states"> | string | null
  }

  export type usersCreateWithoutIdentitiesInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    reps?: repsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutIdentitiesInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    reps?: repsUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutIdentitiesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
  }

  export type usersUpsertWithoutIdentitiesInput = {
    update: XOR<usersUpdateWithoutIdentitiesInput, usersUncheckedUpdateWithoutIdentitiesInput>
    create: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutIdentitiesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutIdentitiesInput, usersUncheckedUpdateWithoutIdentitiesInput>
  }

  export type usersUpdateWithoutIdentitiesInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    reps?: repsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutIdentitiesInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    reps?: repsUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type sessionsCreateWithoutMfa_amr_claimsInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutSessionsInput
    users: usersCreateNestedOneWithoutSessionsInput
  }

  export type sessionsUncheckedCreateWithoutMfa_amr_claimsInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsCreateOrConnectWithoutMfa_amr_claimsInput = {
    where: sessionsWhereUniqueInput
    create: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
  }

  export type sessionsUpsertWithoutMfa_amr_claimsInput = {
    update: XOR<sessionsUpdateWithoutMfa_amr_claimsInput, sessionsUncheckedUpdateWithoutMfa_amr_claimsInput>
    create: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
    where?: sessionsWhereInput
  }

  export type sessionsUpdateToOneWithWhereWithoutMfa_amr_claimsInput = {
    where?: sessionsWhereInput
    data: XOR<sessionsUpdateWithoutMfa_amr_claimsInput, sessionsUncheckedUpdateWithoutMfa_amr_claimsInput>
  }

  export type sessionsUpdateWithoutMfa_amr_claimsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_tokens?: refresh_tokensUpdateManyWithoutSessionsNestedInput
    users?: usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateWithoutMfa_amr_claimsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type mfa_factorsCreateWithoutMfa_challengesInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    users: usersCreateNestedOneWithoutMfa_factorsInput
  }

  export type mfa_factorsUncheckedCreateWithoutMfa_challengesInput = {
    id: string
    user_id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
  }

  export type mfa_factorsCreateOrConnectWithoutMfa_challengesInput = {
    where: mfa_factorsWhereUniqueInput
    create: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
  }

  export type mfa_factorsUpsertWithoutMfa_challengesInput = {
    update: XOR<mfa_factorsUpdateWithoutMfa_challengesInput, mfa_factorsUncheckedUpdateWithoutMfa_challengesInput>
    create: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
    where?: mfa_factorsWhereInput
  }

  export type mfa_factorsUpdateToOneWithWhereWithoutMfa_challengesInput = {
    where?: mfa_factorsWhereInput
    data: XOR<mfa_factorsUpdateWithoutMfa_challengesInput, mfa_factorsUncheckedUpdateWithoutMfa_challengesInput>
  }

  export type mfa_factorsUpdateWithoutMfa_challengesInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateWithoutMfa_challengesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mfa_challengesCreateWithoutMfa_factorsInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
  }

  export type mfa_challengesUncheckedCreateWithoutMfa_factorsInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
  }

  export type mfa_challengesCreateOrConnectWithoutMfa_factorsInput = {
    where: mfa_challengesWhereUniqueInput
    create: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput>
  }

  export type mfa_challengesCreateManyMfa_factorsInputEnvelope = {
    data: mfa_challengesCreateManyMfa_factorsInput | mfa_challengesCreateManyMfa_factorsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutMfa_factorsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    identities?: identitiesCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    reps?: repsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutMfa_factorsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    reps?: repsUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutMfa_factorsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput = {
    where: mfa_challengesWhereUniqueInput
    update: XOR<mfa_challengesUpdateWithoutMfa_factorsInput, mfa_challengesUncheckedUpdateWithoutMfa_factorsInput>
    create: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput = {
    where: mfa_challengesWhereUniqueInput
    data: XOR<mfa_challengesUpdateWithoutMfa_factorsInput, mfa_challengesUncheckedUpdateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput = {
    where: mfa_challengesScalarWhereInput
    data: XOR<mfa_challengesUpdateManyMutationInput, mfa_challengesUncheckedUpdateManyWithoutMfa_factorsInput>
  }

  export type mfa_challengesScalarWhereInput = {
    AND?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
    OR?: mfa_challengesScalarWhereInput[]
    NOT?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
    id?: UuidFilter<"mfa_challenges"> | string
    factor_id?: UuidFilter<"mfa_challenges"> | string
    created_at?: DateTimeFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringFilter<"mfa_challenges"> | string
  }

  export type usersUpsertWithoutMfa_factorsInput = {
    update: XOR<usersUpdateWithoutMfa_factorsInput, usersUncheckedUpdateWithoutMfa_factorsInput>
    create: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutMfa_factorsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutMfa_factorsInput, usersUncheckedUpdateWithoutMfa_factorsInput>
  }

  export type usersUpdateWithoutMfa_factorsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    reps?: repsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutMfa_factorsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    reps?: repsUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type sessionsCreateWithoutRefresh_tokensInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsCreateNestedManyWithoutSessionsInput
    users: usersCreateNestedOneWithoutSessionsInput
  }

  export type sessionsUncheckedCreateWithoutRefresh_tokensInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsCreateOrConnectWithoutRefresh_tokensInput = {
    where: sessionsWhereUniqueInput
    create: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
  }

  export type sessionsUpsertWithoutRefresh_tokensInput = {
    update: XOR<sessionsUpdateWithoutRefresh_tokensInput, sessionsUncheckedUpdateWithoutRefresh_tokensInput>
    create: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
    where?: sessionsWhereInput
  }

  export type sessionsUpdateToOneWithWhereWithoutRefresh_tokensInput = {
    where?: sessionsWhereInput
    data: XOR<sessionsUpdateWithoutRefresh_tokensInput, sessionsUncheckedUpdateWithoutRefresh_tokensInput>
  }

  export type sessionsUpdateWithoutRefresh_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUpdateManyWithoutSessionsNestedInput
    users?: usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateWithoutRefresh_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type sso_providersCreateWithoutSaml_providersInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateWithoutSaml_providersInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersCreateOrConnectWithoutSaml_providersInput = {
    where: sso_providersWhereUniqueInput
    create: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
  }

  export type sso_providersUpsertWithoutSaml_providersInput = {
    update: XOR<sso_providersUpdateWithoutSaml_providersInput, sso_providersUncheckedUpdateWithoutSaml_providersInput>
    create: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
    where?: sso_providersWhereInput
  }

  export type sso_providersUpdateToOneWithWhereWithoutSaml_providersInput = {
    where?: sso_providersWhereInput
    data: XOR<sso_providersUpdateWithoutSaml_providersInput, sso_providersUncheckedUpdateWithoutSaml_providersInput>
  }

  export type sso_providersUpdateWithoutSaml_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_relay_states?: saml_relay_statesUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateWithoutSaml_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type flow_stateCreateWithoutSaml_relay_statesInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
  }

  export type flow_stateUncheckedCreateWithoutSaml_relay_statesInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
  }

  export type flow_stateCreateOrConnectWithoutSaml_relay_statesInput = {
    where: flow_stateWhereUniqueInput
    create: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
  }

  export type sso_providersCreateWithoutSaml_relay_statesInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateWithoutSaml_relay_statesInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersUncheckedCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersCreateOrConnectWithoutSaml_relay_statesInput = {
    where: sso_providersWhereUniqueInput
    create: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
  }

  export type flow_stateUpsertWithoutSaml_relay_statesInput = {
    update: XOR<flow_stateUpdateWithoutSaml_relay_statesInput, flow_stateUncheckedUpdateWithoutSaml_relay_statesInput>
    create: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
    where?: flow_stateWhereInput
  }

  export type flow_stateUpdateToOneWithWhereWithoutSaml_relay_statesInput = {
    where?: flow_stateWhereInput
    data: XOR<flow_stateUpdateWithoutSaml_relay_statesInput, flow_stateUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type flow_stateUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
  }

  export type flow_stateUncheckedUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
  }

  export type sso_providersUpsertWithoutSaml_relay_statesInput = {
    update: XOR<sso_providersUpdateWithoutSaml_relay_statesInput, sso_providersUncheckedUpdateWithoutSaml_relay_statesInput>
    create: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
    where?: sso_providersWhereInput
  }

  export type sso_providersUpdateToOneWithWhereWithoutSaml_relay_statesInput = {
    where?: sso_providersWhereInput
    data: XOR<sso_providersUpdateWithoutSaml_relay_statesInput, sso_providersUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type sso_providersUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type mfa_amr_claimsCreateWithoutSessionsInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsUncheckedCreateWithoutSessionsInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsCreateOrConnectWithoutSessionsInput = {
    where: mfa_amr_claimsWhereUniqueInput
    create: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput>
  }

  export type mfa_amr_claimsCreateManySessionsInputEnvelope = {
    data: mfa_amr_claimsCreateManySessionsInput | mfa_amr_claimsCreateManySessionsInput[]
    skipDuplicates?: boolean
  }

  export type refresh_tokensCreateWithoutSessionsInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
  }

  export type refresh_tokensUncheckedCreateWithoutSessionsInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
  }

  export type refresh_tokensCreateOrConnectWithoutSessionsInput = {
    where: refresh_tokensWhereUniqueInput
    create: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput>
  }

  export type refresh_tokensCreateManySessionsInputEnvelope = {
    data: refresh_tokensCreateManySessionsInput | refresh_tokensCreateManySessionsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutSessionsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    identities?: identitiesCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    reps?: repsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSessionsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    reps?: repsUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSessionsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput = {
    where: mfa_amr_claimsWhereUniqueInput
    update: XOR<mfa_amr_claimsUpdateWithoutSessionsInput, mfa_amr_claimsUncheckedUpdateWithoutSessionsInput>
    create: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput = {
    where: mfa_amr_claimsWhereUniqueInput
    data: XOR<mfa_amr_claimsUpdateWithoutSessionsInput, mfa_amr_claimsUncheckedUpdateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput = {
    where: mfa_amr_claimsScalarWhereInput
    data: XOR<mfa_amr_claimsUpdateManyMutationInput, mfa_amr_claimsUncheckedUpdateManyWithoutSessionsInput>
  }

  export type mfa_amr_claimsScalarWhereInput = {
    AND?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
    OR?: mfa_amr_claimsScalarWhereInput[]
    NOT?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
    session_id?: UuidFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringFilter<"mfa_amr_claims"> | string
    id?: UuidFilter<"mfa_amr_claims"> | string
  }

  export type refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput = {
    where: refresh_tokensWhereUniqueInput
    update: XOR<refresh_tokensUpdateWithoutSessionsInput, refresh_tokensUncheckedUpdateWithoutSessionsInput>
    create: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput>
  }

  export type refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput = {
    where: refresh_tokensWhereUniqueInput
    data: XOR<refresh_tokensUpdateWithoutSessionsInput, refresh_tokensUncheckedUpdateWithoutSessionsInput>
  }

  export type refresh_tokensUpdateManyWithWhereWithoutSessionsInput = {
    where: refresh_tokensScalarWhereInput
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyWithoutSessionsInput>
  }

  export type refresh_tokensScalarWhereInput = {
    AND?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
    OR?: refresh_tokensScalarWhereInput[]
    NOT?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
    instance_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    id?: BigIntFilter<"refresh_tokens"> | bigint | number
    token?: StringNullableFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableFilter<"refresh_tokens"> | string | null
  }

  export type usersUpsertWithoutSessionsInput = {
    update: XOR<usersUpdateWithoutSessionsInput, usersUncheckedUpdateWithoutSessionsInput>
    create: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSessionsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSessionsInput, usersUncheckedUpdateWithoutSessionsInput>
  }

  export type usersUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    reps?: repsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    reps?: repsUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type sso_providersCreateWithoutSso_domainsInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateWithoutSso_domainsInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersUncheckedCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersCreateOrConnectWithoutSso_domainsInput = {
    where: sso_providersWhereUniqueInput
    create: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
  }

  export type sso_providersUpsertWithoutSso_domainsInput = {
    update: XOR<sso_providersUpdateWithoutSso_domainsInput, sso_providersUncheckedUpdateWithoutSso_domainsInput>
    create: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
    where?: sso_providersWhereInput
  }

  export type sso_providersUpdateToOneWithWhereWithoutSso_domainsInput = {
    where?: sso_providersWhereInput
    data: XOR<sso_providersUpdateWithoutSso_domainsInput, sso_providersUncheckedUpdateWithoutSso_domainsInput>
  }

  export type sso_providersUpdateWithoutSso_domainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateWithoutSso_domainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type saml_providersCreateWithoutSso_providersInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_providersUncheckedCreateWithoutSso_providersInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_providersCreateOrConnectWithoutSso_providersInput = {
    where: saml_providersWhereUniqueInput
    create: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_providersCreateManySso_providersInputEnvelope = {
    data: saml_providersCreateManySso_providersInput | saml_providersCreateManySso_providersInput[]
    skipDuplicates?: boolean
  }

  export type saml_relay_statesCreateWithoutSso_providersInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    from_ip_address?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state?: flow_stateCreateNestedOneWithoutSaml_relay_statesInput
  }

  export type saml_relay_statesUncheckedCreateWithoutSso_providersInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    from_ip_address?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type saml_relay_statesCreateOrConnectWithoutSso_providersInput = {
    where: saml_relay_statesWhereUniqueInput
    create: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_relay_statesCreateManySso_providersInputEnvelope = {
    data: saml_relay_statesCreateManySso_providersInput | saml_relay_statesCreateManySso_providersInput[]
    skipDuplicates?: boolean
  }

  export type sso_domainsCreateWithoutSso_providersInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsUncheckedCreateWithoutSso_providersInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsCreateOrConnectWithoutSso_providersInput = {
    where: sso_domainsWhereUniqueInput
    create: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput>
  }

  export type sso_domainsCreateManySso_providersInputEnvelope = {
    data: sso_domainsCreateManySso_providersInput | sso_domainsCreateManySso_providersInput[]
    skipDuplicates?: boolean
  }

  export type saml_providersUpsertWithWhereUniqueWithoutSso_providersInput = {
    where: saml_providersWhereUniqueInput
    update: XOR<saml_providersUpdateWithoutSso_providersInput, saml_providersUncheckedUpdateWithoutSso_providersInput>
    create: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_providersUpdateWithWhereUniqueWithoutSso_providersInput = {
    where: saml_providersWhereUniqueInput
    data: XOR<saml_providersUpdateWithoutSso_providersInput, saml_providersUncheckedUpdateWithoutSso_providersInput>
  }

  export type saml_providersUpdateManyWithWhereWithoutSso_providersInput = {
    where: saml_providersScalarWhereInput
    data: XOR<saml_providersUpdateManyMutationInput, saml_providersUncheckedUpdateManyWithoutSso_providersInput>
  }

  export type saml_providersScalarWhereInput = {
    AND?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
    OR?: saml_providersScalarWhereInput[]
    NOT?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
    id?: UuidFilter<"saml_providers"> | string
    sso_provider_id?: UuidFilter<"saml_providers"> | string
    entity_id?: StringFilter<"saml_providers"> | string
    metadata_xml?: StringFilter<"saml_providers"> | string
    metadata_url?: StringNullableFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableFilter<"saml_providers">
    created_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
  }

  export type saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput = {
    where: saml_relay_statesWhereUniqueInput
    update: XOR<saml_relay_statesUpdateWithoutSso_providersInput, saml_relay_statesUncheckedUpdateWithoutSso_providersInput>
    create: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput = {
    where: saml_relay_statesWhereUniqueInput
    data: XOR<saml_relay_statesUpdateWithoutSso_providersInput, saml_relay_statesUncheckedUpdateWithoutSso_providersInput>
  }

  export type saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput = {
    where: saml_relay_statesScalarWhereInput
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyWithoutSso_providersInput>
  }

  export type sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput = {
    where: sso_domainsWhereUniqueInput
    update: XOR<sso_domainsUpdateWithoutSso_providersInput, sso_domainsUncheckedUpdateWithoutSso_providersInput>
    create: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput>
  }

  export type sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput = {
    where: sso_domainsWhereUniqueInput
    data: XOR<sso_domainsUpdateWithoutSso_providersInput, sso_domainsUncheckedUpdateWithoutSso_providersInput>
  }

  export type sso_domainsUpdateManyWithWhereWithoutSso_providersInput = {
    where: sso_domainsScalarWhereInput
    data: XOR<sso_domainsUpdateManyMutationInput, sso_domainsUncheckedUpdateManyWithoutSso_providersInput>
  }

  export type sso_domainsScalarWhereInput = {
    AND?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
    OR?: sso_domainsScalarWhereInput[]
    NOT?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
    id?: UuidFilter<"sso_domains"> | string
    sso_provider_id?: UuidFilter<"sso_domains"> | string
    domain?: StringFilter<"sso_domains"> | string
    created_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
  }

  export type identitiesCreateWithoutUsersInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesUncheckedCreateWithoutUsersInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesCreateOrConnectWithoutUsersInput = {
    where: identitiesWhereUniqueInput
    create: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput>
  }

  export type identitiesCreateManyUsersInputEnvelope = {
    data: identitiesCreateManyUsersInput | identitiesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type mfa_factorsCreateWithoutUsersInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    mfa_challenges?: mfa_challengesCreateNestedManyWithoutMfa_factorsInput
  }

  export type mfa_factorsUncheckedCreateWithoutUsersInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    mfa_challenges?: mfa_challengesUncheckedCreateNestedManyWithoutMfa_factorsInput
  }

  export type mfa_factorsCreateOrConnectWithoutUsersInput = {
    where: mfa_factorsWhereUniqueInput
    create: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput>
  }

  export type mfa_factorsCreateManyUsersInputEnvelope = {
    data: mfa_factorsCreateManyUsersInput | mfa_factorsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type sessionsCreateWithoutUsersInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutSessionsInput
  }

  export type sessionsUncheckedCreateWithoutUsersInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsCreateOrConnectWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    create: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput>
  }

  export type sessionsCreateManyUsersInputEnvelope = {
    data: sessionsCreateManyUsersInput | sessionsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type repsCreateWithoutUsersInput = {
    created_at?: Date | string
    name: string
    role?: string | null
    status: string
    notes?: notesCreateNestedManyWithoutRepsInput
  }

  export type repsUncheckedCreateWithoutUsersInput = {
    created_at?: Date | string
    name: string
    role?: string | null
    status: string
    notes?: notesUncheckedCreateNestedManyWithoutRepsInput
  }

  export type repsCreateOrConnectWithoutUsersInput = {
    where: repsWhereUniqueInput
    create: XOR<repsCreateWithoutUsersInput, repsUncheckedCreateWithoutUsersInput>
  }

  export type identitiesUpsertWithWhereUniqueWithoutUsersInput = {
    where: identitiesWhereUniqueInput
    update: XOR<identitiesUpdateWithoutUsersInput, identitiesUncheckedUpdateWithoutUsersInput>
    create: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput>
  }

  export type identitiesUpdateWithWhereUniqueWithoutUsersInput = {
    where: identitiesWhereUniqueInput
    data: XOR<identitiesUpdateWithoutUsersInput, identitiesUncheckedUpdateWithoutUsersInput>
  }

  export type identitiesUpdateManyWithWhereWithoutUsersInput = {
    where: identitiesScalarWhereInput
    data: XOR<identitiesUpdateManyMutationInput, identitiesUncheckedUpdateManyWithoutUsersInput>
  }

  export type identitiesScalarWhereInput = {
    AND?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
    OR?: identitiesScalarWhereInput[]
    NOT?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
    provider_id?: StringFilter<"identities"> | string
    user_id?: UuidFilter<"identities"> | string
    identity_data?: JsonFilter<"identities">
    provider?: StringFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    email?: StringNullableFilter<"identities"> | string | null
    id?: UuidFilter<"identities"> | string
  }

  export type mfa_factorsUpsertWithWhereUniqueWithoutUsersInput = {
    where: mfa_factorsWhereUniqueInput
    update: XOR<mfa_factorsUpdateWithoutUsersInput, mfa_factorsUncheckedUpdateWithoutUsersInput>
    create: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput>
  }

  export type mfa_factorsUpdateWithWhereUniqueWithoutUsersInput = {
    where: mfa_factorsWhereUniqueInput
    data: XOR<mfa_factorsUpdateWithoutUsersInput, mfa_factorsUncheckedUpdateWithoutUsersInput>
  }

  export type mfa_factorsUpdateManyWithWhereWithoutUsersInput = {
    where: mfa_factorsScalarWhereInput
    data: XOR<mfa_factorsUpdateManyMutationInput, mfa_factorsUncheckedUpdateManyWithoutUsersInput>
  }

  export type mfa_factorsScalarWhereInput = {
    AND?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
    OR?: mfa_factorsScalarWhereInput[]
    NOT?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
    id?: UuidFilter<"mfa_factors"> | string
    user_id?: UuidFilter<"mfa_factors"> | string
    friendly_name?: StringNullableFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeFilter<"mfa_factors"> | Date | string
    secret?: StringNullableFilter<"mfa_factors"> | string | null
  }

  export type sessionsUpsertWithWhereUniqueWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    update: XOR<sessionsUpdateWithoutUsersInput, sessionsUncheckedUpdateWithoutUsersInput>
    create: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput>
  }

  export type sessionsUpdateWithWhereUniqueWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    data: XOR<sessionsUpdateWithoutUsersInput, sessionsUncheckedUpdateWithoutUsersInput>
  }

  export type sessionsUpdateManyWithWhereWithoutUsersInput = {
    where: sessionsScalarWhereInput
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyWithoutUsersInput>
  }

  export type sessionsScalarWhereInput = {
    AND?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
    OR?: sessionsScalarWhereInput[]
    NOT?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
    id?: UuidFilter<"sessions"> | string
    user_id?: UuidFilter<"sessions"> | string
    created_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableFilter<"sessions"> | string | null
    ip?: StringNullableFilter<"sessions"> | string | null
    tag?: StringNullableFilter<"sessions"> | string | null
  }

  export type repsUpsertWithoutUsersInput = {
    update: XOR<repsUpdateWithoutUsersInput, repsUncheckedUpdateWithoutUsersInput>
    create: XOR<repsCreateWithoutUsersInput, repsUncheckedCreateWithoutUsersInput>
    where?: repsWhereInput
  }

  export type repsUpdateToOneWithWhereWithoutUsersInput = {
    where?: repsWhereInput
    data: XOR<repsUpdateWithoutUsersInput, repsUncheckedUpdateWithoutUsersInput>
  }

  export type repsUpdateWithoutUsersInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: notesUpdateManyWithoutRepsNestedInput
  }

  export type repsUncheckedUpdateWithoutUsersInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: notesUncheckedUpdateManyWithoutRepsNestedInput
  }

  export type accountsCreateWithoutAccount_ai_chatInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutAccountsInput
    customer_records: customer_recordsCreateNestedOneWithoutAccountsInput
  }

  export type accountsUncheckedCreateWithoutAccount_ai_chatInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_record_id: string
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type accountsCreateOrConnectWithoutAccount_ai_chatInput = {
    where: accountsWhereUniqueInput
    create: XOR<accountsCreateWithoutAccount_ai_chatInput, accountsUncheckedCreateWithoutAccount_ai_chatInput>
  }

  export type plansCreateWithoutAccount_ai_chatInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutPlansInput
    account_plans?: account_plansCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutPlansInput
  }

  export type plansUncheckedCreateWithoutAccount_ai_chatInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutPlansInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutPlansInput
  }

  export type plansCreateOrConnectWithoutAccount_ai_chatInput = {
    where: plansWhereUniqueInput
    create: XOR<plansCreateWithoutAccount_ai_chatInput, plansUncheckedCreateWithoutAccount_ai_chatInput>
  }

  export type accountsUpsertWithoutAccount_ai_chatInput = {
    update: XOR<accountsUpdateWithoutAccount_ai_chatInput, accountsUncheckedUpdateWithoutAccount_ai_chatInput>
    create: XOR<accountsCreateWithoutAccount_ai_chatInput, accountsUncheckedCreateWithoutAccount_ai_chatInput>
    where?: accountsWhereInput
  }

  export type accountsUpdateToOneWithWhereWithoutAccount_ai_chatInput = {
    where?: accountsWhereInput
    data: XOR<accountsUpdateWithoutAccount_ai_chatInput, accountsUncheckedUpdateWithoutAccount_ai_chatInput>
  }

  export type accountsUpdateWithoutAccount_ai_chatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutAccountsNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type accountsUncheckedUpdateWithoutAccount_ai_chatInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type plansUpsertWithoutAccount_ai_chatInput = {
    update: XOR<plansUpdateWithoutAccount_ai_chatInput, plansUncheckedUpdateWithoutAccount_ai_chatInput>
    create: XOR<plansCreateWithoutAccount_ai_chatInput, plansUncheckedCreateWithoutAccount_ai_chatInput>
    where?: plansWhereInput
  }

  export type plansUpdateToOneWithWhereWithoutAccount_ai_chatInput = {
    where?: plansWhereInput
    data: XOR<plansUpdateWithoutAccount_ai_chatInput, plansUncheckedUpdateWithoutAccount_ai_chatInput>
  }

  export type plansUpdateWithoutAccount_ai_chatInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutPlansNestedInput
  }

  export type plansUncheckedUpdateWithoutAccount_ai_chatInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutPlansNestedInput
  }

  export type accountsCreateWithoutAccount_blog_post_instancesInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutAccountsInput
    customer_records: customer_recordsCreateNestedOneWithoutAccountsInput
  }

  export type accountsUncheckedCreateWithoutAccount_blog_post_instancesInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_record_id: string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type accountsCreateOrConnectWithoutAccount_blog_post_instancesInput = {
    where: accountsWhereUniqueInput
    create: XOR<accountsCreateWithoutAccount_blog_post_instancesInput, accountsUncheckedCreateWithoutAccount_blog_post_instancesInput>
  }

  export type plansCreateWithoutAccount_blog_post_instancesInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutPlansInput
    account_plans?: account_plansCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutPlansInput
  }

  export type plansUncheckedCreateWithoutAccount_blog_post_instancesInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutPlansInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutPlansInput
  }

  export type plansCreateOrConnectWithoutAccount_blog_post_instancesInput = {
    where: plansWhereUniqueInput
    create: XOR<plansCreateWithoutAccount_blog_post_instancesInput, plansUncheckedCreateWithoutAccount_blog_post_instancesInput>
  }

  export type accountsUpsertWithoutAccount_blog_post_instancesInput = {
    update: XOR<accountsUpdateWithoutAccount_blog_post_instancesInput, accountsUncheckedUpdateWithoutAccount_blog_post_instancesInput>
    create: XOR<accountsCreateWithoutAccount_blog_post_instancesInput, accountsUncheckedCreateWithoutAccount_blog_post_instancesInput>
    where?: accountsWhereInput
  }

  export type accountsUpdateToOneWithWhereWithoutAccount_blog_post_instancesInput = {
    where?: accountsWhereInput
    data: XOR<accountsUpdateWithoutAccount_blog_post_instancesInput, accountsUncheckedUpdateWithoutAccount_blog_post_instancesInput>
  }

  export type accountsUpdateWithoutAccount_blog_post_instancesInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    account_ai_chat?: account_ai_chatUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutAccountsNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type accountsUncheckedUpdateWithoutAccount_blog_post_instancesInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type plansUpsertWithoutAccount_blog_post_instancesInput = {
    update: XOR<plansUpdateWithoutAccount_blog_post_instancesInput, plansUncheckedUpdateWithoutAccount_blog_post_instancesInput>
    create: XOR<plansCreateWithoutAccount_blog_post_instancesInput, plansUncheckedCreateWithoutAccount_blog_post_instancesInput>
    where?: plansWhereInput
  }

  export type plansUpdateToOneWithWhereWithoutAccount_blog_post_instancesInput = {
    where?: plansWhereInput
    data: XOR<plansUpdateWithoutAccount_blog_post_instancesInput, plansUncheckedUpdateWithoutAccount_blog_post_instancesInput>
  }

  export type plansUpdateWithoutAccount_blog_post_instancesInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutPlansNestedInput
  }

  export type plansUncheckedUpdateWithoutAccount_blog_post_instancesInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutPlansNestedInput
  }

  export type accountsCreateWithoutAccount_blog_postsInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutAccountsInput
    customer_records: customer_recordsCreateNestedOneWithoutAccountsInput
  }

  export type accountsUncheckedCreateWithoutAccount_blog_postsInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_record_id: string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type accountsCreateOrConnectWithoutAccount_blog_postsInput = {
    where: accountsWhereUniqueInput
    create: XOR<accountsCreateWithoutAccount_blog_postsInput, accountsUncheckedCreateWithoutAccount_blog_postsInput>
  }

  export type plansCreateWithoutAccount_blog_postsInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutPlansInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutPlansInput
    account_plans?: account_plansCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutPlansInput
  }

  export type plansUncheckedCreateWithoutAccount_blog_postsInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutPlansInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutPlansInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutPlansInput
  }

  export type plansCreateOrConnectWithoutAccount_blog_postsInput = {
    where: plansWhereUniqueInput
    create: XOR<plansCreateWithoutAccount_blog_postsInput, plansUncheckedCreateWithoutAccount_blog_postsInput>
  }

  export type accountsUpsertWithoutAccount_blog_postsInput = {
    update: XOR<accountsUpdateWithoutAccount_blog_postsInput, accountsUncheckedUpdateWithoutAccount_blog_postsInput>
    create: XOR<accountsCreateWithoutAccount_blog_postsInput, accountsUncheckedCreateWithoutAccount_blog_postsInput>
    where?: accountsWhereInput
  }

  export type accountsUpdateToOneWithWhereWithoutAccount_blog_postsInput = {
    where?: accountsWhereInput
    data: XOR<accountsUpdateWithoutAccount_blog_postsInput, accountsUncheckedUpdateWithoutAccount_blog_postsInput>
  }

  export type accountsUpdateWithoutAccount_blog_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    account_ai_chat?: account_ai_chatUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutAccountsNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type accountsUncheckedUpdateWithoutAccount_blog_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type plansUpsertWithoutAccount_blog_postsInput = {
    update: XOR<plansUpdateWithoutAccount_blog_postsInput, plansUncheckedUpdateWithoutAccount_blog_postsInput>
    create: XOR<plansCreateWithoutAccount_blog_postsInput, plansUncheckedCreateWithoutAccount_blog_postsInput>
    where?: plansWhereInput
  }

  export type plansUpdateToOneWithWhereWithoutAccount_blog_postsInput = {
    where?: plansWhereInput
    data: XOR<plansUpdateWithoutAccount_blog_postsInput, plansUncheckedUpdateWithoutAccount_blog_postsInput>
  }

  export type plansUpdateWithoutAccount_blog_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUpdateManyWithoutPlansNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutPlansNestedInput
  }

  export type plansUncheckedUpdateWithoutAccount_blog_postsInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutPlansNestedInput
  }

  export type accountsCreateWithoutAccount_plansInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutAccountsInput
    customer_records: customer_recordsCreateNestedOneWithoutAccountsInput
  }

  export type accountsUncheckedCreateWithoutAccount_plansInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_record_id: string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type accountsCreateOrConnectWithoutAccount_plansInput = {
    where: accountsWhereUniqueInput
    create: XOR<accountsCreateWithoutAccount_plansInput, accountsUncheckedCreateWithoutAccount_plansInput>
  }

  export type plansCreateWithoutAccount_plansInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutPlansInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutPlansInput
  }

  export type plansUncheckedCreateWithoutAccount_plansInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutPlansInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutPlansInput
  }

  export type plansCreateOrConnectWithoutAccount_plansInput = {
    where: plansWhereUniqueInput
    create: XOR<plansCreateWithoutAccount_plansInput, plansUncheckedCreateWithoutAccount_plansInput>
  }

  export type accountsUpsertWithoutAccount_plansInput = {
    update: XOR<accountsUpdateWithoutAccount_plansInput, accountsUncheckedUpdateWithoutAccount_plansInput>
    create: XOR<accountsCreateWithoutAccount_plansInput, accountsUncheckedCreateWithoutAccount_plansInput>
    where?: accountsWhereInput
  }

  export type accountsUpdateToOneWithWhereWithoutAccount_plansInput = {
    where?: accountsWhereInput
    data: XOR<accountsUpdateWithoutAccount_plansInput, accountsUncheckedUpdateWithoutAccount_plansInput>
  }

  export type accountsUpdateWithoutAccount_plansInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    account_ai_chat?: account_ai_chatUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutAccountsNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type accountsUncheckedUpdateWithoutAccount_plansInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type plansUpsertWithoutAccount_plansInput = {
    update: XOR<plansUpdateWithoutAccount_plansInput, plansUncheckedUpdateWithoutAccount_plansInput>
    create: XOR<plansCreateWithoutAccount_plansInput, plansUncheckedCreateWithoutAccount_plansInput>
    where?: plansWhereInput
  }

  export type plansUpdateToOneWithWhereWithoutAccount_plansInput = {
    where?: plansWhereInput
    data: XOR<plansUpdateWithoutAccount_plansInput, plansUncheckedUpdateWithoutAccount_plansInput>
  }

  export type plansUpdateWithoutAccount_plansInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUpdateManyWithoutPlansNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutPlansNestedInput
  }

  export type plansUncheckedUpdateWithoutAccount_plansInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutPlansNestedInput
  }

  export type accountsCreateWithoutAccount_review_generatorInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutAccountsInput
    customer_records: customer_recordsCreateNestedOneWithoutAccountsInput
  }

  export type accountsUncheckedCreateWithoutAccount_review_generatorInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_record_id: string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type accountsCreateOrConnectWithoutAccount_review_generatorInput = {
    where: accountsWhereUniqueInput
    create: XOR<accountsCreateWithoutAccount_review_generatorInput, accountsUncheckedCreateWithoutAccount_review_generatorInput>
  }

  export type plansCreateWithoutAccount_review_generatorInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutPlansInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutPlansInput
    account_plans?: account_plansCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutPlansInput
  }

  export type plansUncheckedCreateWithoutAccount_review_generatorInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutPlansInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutPlansInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutPlansInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutPlansInput
  }

  export type plansCreateOrConnectWithoutAccount_review_generatorInput = {
    where: plansWhereUniqueInput
    create: XOR<plansCreateWithoutAccount_review_generatorInput, plansUncheckedCreateWithoutAccount_review_generatorInput>
  }

  export type accountsUpsertWithoutAccount_review_generatorInput = {
    update: XOR<accountsUpdateWithoutAccount_review_generatorInput, accountsUncheckedUpdateWithoutAccount_review_generatorInput>
    create: XOR<accountsCreateWithoutAccount_review_generatorInput, accountsUncheckedCreateWithoutAccount_review_generatorInput>
    where?: accountsWhereInput
  }

  export type accountsUpdateToOneWithWhereWithoutAccount_review_generatorInput = {
    where?: accountsWhereInput
    data: XOR<accountsUpdateWithoutAccount_review_generatorInput, accountsUncheckedUpdateWithoutAccount_review_generatorInput>
  }

  export type accountsUpdateWithoutAccount_review_generatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    account_ai_chat?: account_ai_chatUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutAccountsNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type accountsUncheckedUpdateWithoutAccount_review_generatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type plansUpsertWithoutAccount_review_generatorInput = {
    update: XOR<plansUpdateWithoutAccount_review_generatorInput, plansUncheckedUpdateWithoutAccount_review_generatorInput>
    create: XOR<plansCreateWithoutAccount_review_generatorInput, plansUncheckedCreateWithoutAccount_review_generatorInput>
    where?: plansWhereInput
  }

  export type plansUpdateToOneWithWhereWithoutAccount_review_generatorInput = {
    where?: plansWhereInput
    data: XOR<plansUpdateWithoutAccount_review_generatorInput, plansUncheckedUpdateWithoutAccount_review_generatorInput>
  }

  export type plansUpdateWithoutAccount_review_generatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUpdateManyWithoutPlansNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutPlansNestedInput
  }

  export type plansUncheckedUpdateWithoutAccount_review_generatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutPlansNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutPlansNestedInput
  }

  export type accountsCreateWithoutAccount_social_mediaInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutAccountsInput
    customer_records: customer_recordsCreateNestedOneWithoutAccountsInput
  }

  export type accountsUncheckedCreateWithoutAccount_social_mediaInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    customer_record_id: string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type accountsCreateOrConnectWithoutAccount_social_mediaInput = {
    where: accountsWhereUniqueInput
    create: XOR<accountsCreateWithoutAccount_social_mediaInput, accountsUncheckedCreateWithoutAccount_social_mediaInput>
  }

  export type plansCreateWithoutAccount_social_mediaInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutPlansInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutPlansInput
    account_plans?: account_plansCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutPlansInput
  }

  export type plansUncheckedCreateWithoutAccount_social_mediaInput = {
    id?: string
    plan_name: string
    created_at?: Date | string
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutPlansInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutPlansInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutPlansInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutPlansInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutPlansInput
  }

  export type plansCreateOrConnectWithoutAccount_social_mediaInput = {
    where: plansWhereUniqueInput
    create: XOR<plansCreateWithoutAccount_social_mediaInput, plansUncheckedCreateWithoutAccount_social_mediaInput>
  }

  export type accountsUpsertWithoutAccount_social_mediaInput = {
    update: XOR<accountsUpdateWithoutAccount_social_mediaInput, accountsUncheckedUpdateWithoutAccount_social_mediaInput>
    create: XOR<accountsCreateWithoutAccount_social_mediaInput, accountsUncheckedCreateWithoutAccount_social_mediaInput>
    where?: accountsWhereInput
  }

  export type accountsUpdateToOneWithWhereWithoutAccount_social_mediaInput = {
    where?: accountsWhereInput
    data: XOR<accountsUpdateWithoutAccount_social_mediaInput, accountsUncheckedUpdateWithoutAccount_social_mediaInput>
  }

  export type accountsUpdateWithoutAccount_social_mediaInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    account_ai_chat?: account_ai_chatUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutAccountsNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type accountsUncheckedUpdateWithoutAccount_social_mediaInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    customer_record_id?: StringFieldUpdateOperationsInput | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type plansUpsertWithoutAccount_social_mediaInput = {
    update: XOR<plansUpdateWithoutAccount_social_mediaInput, plansUncheckedUpdateWithoutAccount_social_mediaInput>
    create: XOR<plansCreateWithoutAccount_social_mediaInput, plansUncheckedCreateWithoutAccount_social_mediaInput>
    where?: plansWhereInput
  }

  export type plansUpdateToOneWithWhereWithoutAccount_social_mediaInput = {
    where?: plansWhereInput
    data: XOR<plansUpdateWithoutAccount_social_mediaInput, plansUncheckedUpdateWithoutAccount_social_mediaInput>
  }

  export type plansUpdateWithoutAccount_social_mediaInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUpdateManyWithoutPlansNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutPlansNestedInput
  }

  export type plansUncheckedUpdateWithoutAccount_social_mediaInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan_name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutPlansNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutPlansNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutPlansNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutPlansNestedInput
  }

  export type account_ai_chatCreateWithoutAccountsInput = {
    created_at?: Date | string
    plans: plansCreateNestedOneWithoutAccount_ai_chatInput
  }

  export type account_ai_chatUncheckedCreateWithoutAccountsInput = {
    plan_id: string
    created_at?: Date | string
  }

  export type account_ai_chatCreateOrConnectWithoutAccountsInput = {
    where: account_ai_chatWhereUniqueInput
    create: XOR<account_ai_chatCreateWithoutAccountsInput, account_ai_chatUncheckedCreateWithoutAccountsInput>
  }

  export type account_ai_chatCreateManyAccountsInputEnvelope = {
    data: account_ai_chatCreateManyAccountsInput | account_ai_chatCreateManyAccountsInput[]
    skipDuplicates?: boolean
  }

  export type account_blog_post_instancesCreateWithoutAccountsInput = {
    blog_post_id?: string
    post_content: string
    created_at?: Date | string
    plans: plansCreateNestedOneWithoutAccount_blog_post_instancesInput
  }

  export type account_blog_post_instancesUncheckedCreateWithoutAccountsInput = {
    blog_post_id?: string
    plan_id: string
    post_content: string
    created_at?: Date | string
  }

  export type account_blog_post_instancesCreateOrConnectWithoutAccountsInput = {
    where: account_blog_post_instancesWhereUniqueInput
    create: XOR<account_blog_post_instancesCreateWithoutAccountsInput, account_blog_post_instancesUncheckedCreateWithoutAccountsInput>
  }

  export type account_blog_post_instancesCreateManyAccountsInputEnvelope = {
    data: account_blog_post_instancesCreateManyAccountsInput | account_blog_post_instancesCreateManyAccountsInput[]
    skipDuplicates?: boolean
  }

  export type account_blog_postsCreateWithoutAccountsInput = {
    created_at?: Date | string
    plans: plansCreateNestedOneWithoutAccount_blog_postsInput
  }

  export type account_blog_postsUncheckedCreateWithoutAccountsInput = {
    plan_id: string
    created_at?: Date | string
  }

  export type account_blog_postsCreateOrConnectWithoutAccountsInput = {
    where: account_blog_postsWhereUniqueInput
    create: XOR<account_blog_postsCreateWithoutAccountsInput, account_blog_postsUncheckedCreateWithoutAccountsInput>
  }

  export type account_blog_postsCreateManyAccountsInputEnvelope = {
    data: account_blog_postsCreateManyAccountsInput | account_blog_postsCreateManyAccountsInput[]
    skipDuplicates?: boolean
  }

  export type account_plansCreateWithoutAccountsInput = {
    created_at?: Date | string
    plans: plansCreateNestedOneWithoutAccount_plansInput
  }

  export type account_plansUncheckedCreateWithoutAccountsInput = {
    plan_id: string
    created_at?: Date | string
  }

  export type account_plansCreateOrConnectWithoutAccountsInput = {
    where: account_plansWhereUniqueInput
    create: XOR<account_plansCreateWithoutAccountsInput, account_plansUncheckedCreateWithoutAccountsInput>
  }

  export type account_plansCreateManyAccountsInputEnvelope = {
    data: account_plansCreateManyAccountsInput | account_plansCreateManyAccountsInput[]
    skipDuplicates?: boolean
  }

  export type account_review_generatorCreateWithoutAccountsInput = {
    created_at?: Date | string
    plans: plansCreateNestedOneWithoutAccount_review_generatorInput
  }

  export type account_review_generatorUncheckedCreateWithoutAccountsInput = {
    plan_id: string
    created_at?: Date | string
  }

  export type account_review_generatorCreateOrConnectWithoutAccountsInput = {
    where: account_review_generatorWhereUniqueInput
    create: XOR<account_review_generatorCreateWithoutAccountsInput, account_review_generatorUncheckedCreateWithoutAccountsInput>
  }

  export type account_review_generatorCreateManyAccountsInputEnvelope = {
    data: account_review_generatorCreateManyAccountsInput | account_review_generatorCreateManyAccountsInput[]
    skipDuplicates?: boolean
  }

  export type account_social_mediaCreateWithoutAccountsInput = {
    created_at?: Date | string
    plans: plansCreateNestedOneWithoutAccount_social_mediaInput
  }

  export type account_social_mediaUncheckedCreateWithoutAccountsInput = {
    plan_id: string
    created_at?: Date | string
  }

  export type account_social_mediaCreateOrConnectWithoutAccountsInput = {
    where: account_social_mediaWhereUniqueInput
    create: XOR<account_social_mediaCreateWithoutAccountsInput, account_social_mediaUncheckedCreateWithoutAccountsInput>
  }

  export type account_social_mediaCreateManyAccountsInputEnvelope = {
    data: account_social_mediaCreateManyAccountsInput | account_social_mediaCreateManyAccountsInput[]
    skipDuplicates?: boolean
  }

  export type customer_recordsCreateWithoutAccountsInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    communications?: communicationsCreateNestedManyWithoutCustomer_recordsInput
    contacts?: contactsCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsCreateNestedOneWithoutCustomer_recordsInput
    notes?: notesCreateNestedManyWithoutCustomer_recordsInput
    opportunities?: opportunitiesCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsUncheckedCreateWithoutAccountsInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    communications?: communicationsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    contacts?: contactsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    notes?: notesUncheckedCreateNestedManyWithoutCustomer_recordsInput
    opportunities?: opportunitiesUncheckedCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsCreateOrConnectWithoutAccountsInput = {
    where: customer_recordsWhereUniqueInput
    create: XOR<customer_recordsCreateWithoutAccountsInput, customer_recordsUncheckedCreateWithoutAccountsInput>
  }

  export type account_ai_chatUpsertWithWhereUniqueWithoutAccountsInput = {
    where: account_ai_chatWhereUniqueInput
    update: XOR<account_ai_chatUpdateWithoutAccountsInput, account_ai_chatUncheckedUpdateWithoutAccountsInput>
    create: XOR<account_ai_chatCreateWithoutAccountsInput, account_ai_chatUncheckedCreateWithoutAccountsInput>
  }

  export type account_ai_chatUpdateWithWhereUniqueWithoutAccountsInput = {
    where: account_ai_chatWhereUniqueInput
    data: XOR<account_ai_chatUpdateWithoutAccountsInput, account_ai_chatUncheckedUpdateWithoutAccountsInput>
  }

  export type account_ai_chatUpdateManyWithWhereWithoutAccountsInput = {
    where: account_ai_chatScalarWhereInput
    data: XOR<account_ai_chatUpdateManyMutationInput, account_ai_chatUncheckedUpdateManyWithoutAccountsInput>
  }

  export type account_ai_chatScalarWhereInput = {
    AND?: account_ai_chatScalarWhereInput | account_ai_chatScalarWhereInput[]
    OR?: account_ai_chatScalarWhereInput[]
    NOT?: account_ai_chatScalarWhereInput | account_ai_chatScalarWhereInput[]
    account_id?: UuidFilter<"account_ai_chat"> | string
    plan_id?: UuidFilter<"account_ai_chat"> | string
    created_at?: DateTimeFilter<"account_ai_chat"> | Date | string
  }

  export type account_blog_post_instancesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: account_blog_post_instancesWhereUniqueInput
    update: XOR<account_blog_post_instancesUpdateWithoutAccountsInput, account_blog_post_instancesUncheckedUpdateWithoutAccountsInput>
    create: XOR<account_blog_post_instancesCreateWithoutAccountsInput, account_blog_post_instancesUncheckedCreateWithoutAccountsInput>
  }

  export type account_blog_post_instancesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: account_blog_post_instancesWhereUniqueInput
    data: XOR<account_blog_post_instancesUpdateWithoutAccountsInput, account_blog_post_instancesUncheckedUpdateWithoutAccountsInput>
  }

  export type account_blog_post_instancesUpdateManyWithWhereWithoutAccountsInput = {
    where: account_blog_post_instancesScalarWhereInput
    data: XOR<account_blog_post_instancesUpdateManyMutationInput, account_blog_post_instancesUncheckedUpdateManyWithoutAccountsInput>
  }

  export type account_blog_post_instancesScalarWhereInput = {
    AND?: account_blog_post_instancesScalarWhereInput | account_blog_post_instancesScalarWhereInput[]
    OR?: account_blog_post_instancesScalarWhereInput[]
    NOT?: account_blog_post_instancesScalarWhereInput | account_blog_post_instancesScalarWhereInput[]
    blog_post_id?: UuidFilter<"account_blog_post_instances"> | string
    account_id?: UuidFilter<"account_blog_post_instances"> | string
    plan_id?: UuidFilter<"account_blog_post_instances"> | string
    post_content?: StringFilter<"account_blog_post_instances"> | string
    created_at?: DateTimeFilter<"account_blog_post_instances"> | Date | string
  }

  export type account_blog_postsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: account_blog_postsWhereUniqueInput
    update: XOR<account_blog_postsUpdateWithoutAccountsInput, account_blog_postsUncheckedUpdateWithoutAccountsInput>
    create: XOR<account_blog_postsCreateWithoutAccountsInput, account_blog_postsUncheckedCreateWithoutAccountsInput>
  }

  export type account_blog_postsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: account_blog_postsWhereUniqueInput
    data: XOR<account_blog_postsUpdateWithoutAccountsInput, account_blog_postsUncheckedUpdateWithoutAccountsInput>
  }

  export type account_blog_postsUpdateManyWithWhereWithoutAccountsInput = {
    where: account_blog_postsScalarWhereInput
    data: XOR<account_blog_postsUpdateManyMutationInput, account_blog_postsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type account_blog_postsScalarWhereInput = {
    AND?: account_blog_postsScalarWhereInput | account_blog_postsScalarWhereInput[]
    OR?: account_blog_postsScalarWhereInput[]
    NOT?: account_blog_postsScalarWhereInput | account_blog_postsScalarWhereInput[]
    account_id?: UuidFilter<"account_blog_posts"> | string
    plan_id?: UuidFilter<"account_blog_posts"> | string
    created_at?: DateTimeFilter<"account_blog_posts"> | Date | string
  }

  export type account_plansUpsertWithWhereUniqueWithoutAccountsInput = {
    where: account_plansWhereUniqueInput
    update: XOR<account_plansUpdateWithoutAccountsInput, account_plansUncheckedUpdateWithoutAccountsInput>
    create: XOR<account_plansCreateWithoutAccountsInput, account_plansUncheckedCreateWithoutAccountsInput>
  }

  export type account_plansUpdateWithWhereUniqueWithoutAccountsInput = {
    where: account_plansWhereUniqueInput
    data: XOR<account_plansUpdateWithoutAccountsInput, account_plansUncheckedUpdateWithoutAccountsInput>
  }

  export type account_plansUpdateManyWithWhereWithoutAccountsInput = {
    where: account_plansScalarWhereInput
    data: XOR<account_plansUpdateManyMutationInput, account_plansUncheckedUpdateManyWithoutAccountsInput>
  }

  export type account_plansScalarWhereInput = {
    AND?: account_plansScalarWhereInput | account_plansScalarWhereInput[]
    OR?: account_plansScalarWhereInput[]
    NOT?: account_plansScalarWhereInput | account_plansScalarWhereInput[]
    account_id?: UuidFilter<"account_plans"> | string
    plan_id?: UuidFilter<"account_plans"> | string
    created_at?: DateTimeFilter<"account_plans"> | Date | string
  }

  export type account_review_generatorUpsertWithWhereUniqueWithoutAccountsInput = {
    where: account_review_generatorWhereUniqueInput
    update: XOR<account_review_generatorUpdateWithoutAccountsInput, account_review_generatorUncheckedUpdateWithoutAccountsInput>
    create: XOR<account_review_generatorCreateWithoutAccountsInput, account_review_generatorUncheckedCreateWithoutAccountsInput>
  }

  export type account_review_generatorUpdateWithWhereUniqueWithoutAccountsInput = {
    where: account_review_generatorWhereUniqueInput
    data: XOR<account_review_generatorUpdateWithoutAccountsInput, account_review_generatorUncheckedUpdateWithoutAccountsInput>
  }

  export type account_review_generatorUpdateManyWithWhereWithoutAccountsInput = {
    where: account_review_generatorScalarWhereInput
    data: XOR<account_review_generatorUpdateManyMutationInput, account_review_generatorUncheckedUpdateManyWithoutAccountsInput>
  }

  export type account_review_generatorScalarWhereInput = {
    AND?: account_review_generatorScalarWhereInput | account_review_generatorScalarWhereInput[]
    OR?: account_review_generatorScalarWhereInput[]
    NOT?: account_review_generatorScalarWhereInput | account_review_generatorScalarWhereInput[]
    account_id?: UuidFilter<"account_review_generator"> | string
    plan_id?: UuidFilter<"account_review_generator"> | string
    created_at?: DateTimeFilter<"account_review_generator"> | Date | string
  }

  export type account_social_mediaUpsertWithWhereUniqueWithoutAccountsInput = {
    where: account_social_mediaWhereUniqueInput
    update: XOR<account_social_mediaUpdateWithoutAccountsInput, account_social_mediaUncheckedUpdateWithoutAccountsInput>
    create: XOR<account_social_mediaCreateWithoutAccountsInput, account_social_mediaUncheckedCreateWithoutAccountsInput>
  }

  export type account_social_mediaUpdateWithWhereUniqueWithoutAccountsInput = {
    where: account_social_mediaWhereUniqueInput
    data: XOR<account_social_mediaUpdateWithoutAccountsInput, account_social_mediaUncheckedUpdateWithoutAccountsInput>
  }

  export type account_social_mediaUpdateManyWithWhereWithoutAccountsInput = {
    where: account_social_mediaScalarWhereInput
    data: XOR<account_social_mediaUpdateManyMutationInput, account_social_mediaUncheckedUpdateManyWithoutAccountsInput>
  }

  export type account_social_mediaScalarWhereInput = {
    AND?: account_social_mediaScalarWhereInput | account_social_mediaScalarWhereInput[]
    OR?: account_social_mediaScalarWhereInput[]
    NOT?: account_social_mediaScalarWhereInput | account_social_mediaScalarWhereInput[]
    account_id?: UuidFilter<"account_social_media"> | string
    plan_id?: UuidFilter<"account_social_media"> | string
    created_at?: DateTimeFilter<"account_social_media"> | Date | string
  }

  export type customer_recordsUpsertWithoutAccountsInput = {
    update: XOR<customer_recordsUpdateWithoutAccountsInput, customer_recordsUncheckedUpdateWithoutAccountsInput>
    create: XOR<customer_recordsCreateWithoutAccountsInput, customer_recordsUncheckedCreateWithoutAccountsInput>
    where?: customer_recordsWhereInput
  }

  export type customer_recordsUpdateToOneWithWhereWithoutAccountsInput = {
    where?: customer_recordsWhereInput
    data: XOR<customer_recordsUpdateWithoutAccountsInput, customer_recordsUncheckedUpdateWithoutAccountsInput>
  }

  export type customer_recordsUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    communications?: communicationsUpdateManyWithoutCustomer_recordsNestedInput
    contacts?: contactsUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUpdateOneWithoutCustomer_recordsNestedInput
    notes?: notesUpdateManyWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type customer_recordsUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    communications?: communicationsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    contacts?: contactsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    notes?: notesUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUncheckedUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type customer_recordsCreateWithoutCommunicationsInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsCreateNestedOneWithoutCustomer_recordsInput
    contacts?: contactsCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsCreateNestedOneWithoutCustomer_recordsInput
    notes?: notesCreateNestedManyWithoutCustomer_recordsInput
    opportunities?: opportunitiesCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsUncheckedCreateWithoutCommunicationsInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    contacts?: contactsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    notes?: notesUncheckedCreateNestedManyWithoutCustomer_recordsInput
    opportunities?: opportunitiesUncheckedCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsCreateOrConnectWithoutCommunicationsInput = {
    where: customer_recordsWhereUniqueInput
    create: XOR<customer_recordsCreateWithoutCommunicationsInput, customer_recordsUncheckedCreateWithoutCommunicationsInput>
  }

  export type marketing_campaignsCreateWithoutCommunicationsInput = {
    id?: string
    created_at?: Date | string
  }

  export type marketing_campaignsUncheckedCreateWithoutCommunicationsInput = {
    id?: string
    created_at?: Date | string
  }

  export type marketing_campaignsCreateOrConnectWithoutCommunicationsInput = {
    where: marketing_campaignsWhereUniqueInput
    create: XOR<marketing_campaignsCreateWithoutCommunicationsInput, marketing_campaignsUncheckedCreateWithoutCommunicationsInput>
  }

  export type communications_emailsCreateWithoutCommunicationsInput = {
    id?: string
    created_at?: Date | string
    email_id: string
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emails_status_updatesCreateNestedManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput
  }

  export type communications_emailsUncheckedCreateWithoutCommunicationsInput = {
    id?: string
    created_at?: Date | string
    email_id: string
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emails_status_updatesUncheckedCreateNestedManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput
  }

  export type communications_emailsCreateOrConnectWithoutCommunicationsInput = {
    where: communications_emailsWhereUniqueInput
    create: XOR<communications_emailsCreateWithoutCommunicationsInput, communications_emailsUncheckedCreateWithoutCommunicationsInput>
  }

  export type communications_textsCreateWithoutCommunicationsInput = {
    id?: string
    status: string
    created_at?: Date | string
  }

  export type communications_textsUncheckedCreateWithoutCommunicationsInput = {
    id?: string
    status: string
    created_at?: Date | string
  }

  export type communications_textsCreateOrConnectWithoutCommunicationsInput = {
    where: communications_textsWhereUniqueInput
    create: XOR<communications_textsCreateWithoutCommunicationsInput, communications_textsUncheckedCreateWithoutCommunicationsInput>
  }

  export type customer_recordsUpsertWithoutCommunicationsInput = {
    update: XOR<customer_recordsUpdateWithoutCommunicationsInput, customer_recordsUncheckedUpdateWithoutCommunicationsInput>
    create: XOR<customer_recordsCreateWithoutCommunicationsInput, customer_recordsUncheckedCreateWithoutCommunicationsInput>
    where?: customer_recordsWhereInput
  }

  export type customer_recordsUpdateToOneWithWhereWithoutCommunicationsInput = {
    where?: customer_recordsWhereInput
    data: XOR<customer_recordsUpdateWithoutCommunicationsInput, customer_recordsUncheckedUpdateWithoutCommunicationsInput>
  }

  export type customer_recordsUpdateWithoutCommunicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUpdateOneWithoutCustomer_recordsNestedInput
    contacts?: contactsUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUpdateOneWithoutCustomer_recordsNestedInput
    notes?: notesUpdateManyWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type customer_recordsUncheckedUpdateWithoutCommunicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    contacts?: contactsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    notes?: notesUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUncheckedUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type marketing_campaignsUpsertWithoutCommunicationsInput = {
    update: XOR<marketing_campaignsUpdateWithoutCommunicationsInput, marketing_campaignsUncheckedUpdateWithoutCommunicationsInput>
    create: XOR<marketing_campaignsCreateWithoutCommunicationsInput, marketing_campaignsUncheckedCreateWithoutCommunicationsInput>
    where?: marketing_campaignsWhereInput
  }

  export type marketing_campaignsUpdateToOneWithWhereWithoutCommunicationsInput = {
    where?: marketing_campaignsWhereInput
    data: XOR<marketing_campaignsUpdateWithoutCommunicationsInput, marketing_campaignsUncheckedUpdateWithoutCommunicationsInput>
  }

  export type marketing_campaignsUpdateWithoutCommunicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type marketing_campaignsUncheckedUpdateWithoutCommunicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communications_emailsUpsertWithoutCommunicationsInput = {
    update: XOR<communications_emailsUpdateWithoutCommunicationsInput, communications_emailsUncheckedUpdateWithoutCommunicationsInput>
    create: XOR<communications_emailsCreateWithoutCommunicationsInput, communications_emailsUncheckedCreateWithoutCommunicationsInput>
    where?: communications_emailsWhereInput
  }

  export type communications_emailsUpdateToOneWithWhereWithoutCommunicationsInput = {
    where?: communications_emailsWhereInput
    data: XOR<communications_emailsUpdateWithoutCommunicationsInput, communications_emailsUncheckedUpdateWithoutCommunicationsInput>
  }

  export type communications_emailsUpdateWithoutCommunicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emails_status_updatesUpdateManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsNestedInput
  }

  export type communications_emailsUncheckedUpdateWithoutCommunicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
    communications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emails?: communications_emails_status_updatesUncheckedUpdateManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsNestedInput
  }

  export type communications_textsUpsertWithoutCommunicationsInput = {
    update: XOR<communications_textsUpdateWithoutCommunicationsInput, communications_textsUncheckedUpdateWithoutCommunicationsInput>
    create: XOR<communications_textsCreateWithoutCommunicationsInput, communications_textsUncheckedCreateWithoutCommunicationsInput>
    where?: communications_textsWhereInput
  }

  export type communications_textsUpdateToOneWithWhereWithoutCommunicationsInput = {
    where?: communications_textsWhereInput
    data: XOR<communications_textsUpdateWithoutCommunicationsInput, communications_textsUncheckedUpdateWithoutCommunicationsInput>
  }

  export type communications_textsUpdateWithoutCommunicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communications_textsUncheckedUpdateWithoutCommunicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communicationsCreateWithoutCommunications_emailsInput = {
    id?: string
    type: string
    created_at?: Date | string
    customer_records?: customer_recordsCreateNestedOneWithoutCommunicationsInput
    marketing_campaigns?: marketing_campaignsCreateNestedOneWithoutCommunicationsInput
    communications_texts?: communications_textsCreateNestedOneWithoutCommunicationsInput
  }

  export type communicationsUncheckedCreateWithoutCommunications_emailsInput = {
    id?: string
    customer_record_id?: string | null
    type: string
    created_at?: Date | string
    marketing_campaign_id?: string | null
    communications_texts?: communications_textsUncheckedCreateNestedOneWithoutCommunicationsInput
  }

  export type communicationsCreateOrConnectWithoutCommunications_emailsInput = {
    where: communicationsWhereUniqueInput
    create: XOR<communicationsCreateWithoutCommunications_emailsInput, communicationsUncheckedCreateWithoutCommunications_emailsInput>
  }

  export type communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    id?: string
    status: string
    created_at?: Date | string
  }

  export type communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    id?: string
    status: string
    created_at?: Date | string
  }

  export type communications_emails_status_updatesCreateOrConnectWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    where: communications_emails_status_updatesWhereUniqueInput
    create: XOR<communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
  }

  export type communications_emails_status_updatesCreateManyCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInputEnvelope = {
    data: communications_emails_status_updatesCreateManyCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput | communications_emails_status_updatesCreateManyCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput[]
    skipDuplicates?: boolean
  }

  export type communicationsUpsertWithoutCommunications_emailsInput = {
    update: XOR<communicationsUpdateWithoutCommunications_emailsInput, communicationsUncheckedUpdateWithoutCommunications_emailsInput>
    create: XOR<communicationsCreateWithoutCommunications_emailsInput, communicationsUncheckedCreateWithoutCommunications_emailsInput>
    where?: communicationsWhereInput
  }

  export type communicationsUpdateToOneWithWhereWithoutCommunications_emailsInput = {
    where?: communicationsWhereInput
    data: XOR<communicationsUpdateWithoutCommunications_emailsInput, communicationsUncheckedUpdateWithoutCommunications_emailsInput>
  }

  export type communicationsUpdateWithoutCommunications_emailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_records?: customer_recordsUpdateOneWithoutCommunicationsNestedInput
    marketing_campaigns?: marketing_campaignsUpdateOneWithoutCommunicationsNestedInput
    communications_texts?: communications_textsUpdateOneWithoutCommunicationsNestedInput
  }

  export type communicationsUncheckedUpdateWithoutCommunications_emailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    customer_record_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    marketing_campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    communications_texts?: communications_textsUncheckedUpdateOneWithoutCommunicationsNestedInput
  }

  export type communications_emails_status_updatesUpsertWithWhereUniqueWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    where: communications_emails_status_updatesWhereUniqueInput
    update: XOR<communications_emails_status_updatesUpdateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emails_status_updatesUncheckedUpdateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
    create: XOR<communications_emails_status_updatesCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emails_status_updatesUncheckedCreateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
  }

  export type communications_emails_status_updatesUpdateWithWhereUniqueWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    where: communications_emails_status_updatesWhereUniqueInput
    data: XOR<communications_emails_status_updatesUpdateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emails_status_updatesUncheckedUpdateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
  }

  export type communications_emails_status_updatesUpdateManyWithWhereWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    where: communications_emails_status_updatesScalarWhereInput
    data: XOR<communications_emails_status_updatesUpdateManyMutationInput, communications_emails_status_updatesUncheckedUpdateManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
  }

  export type communications_emails_status_updatesScalarWhereInput = {
    AND?: communications_emails_status_updatesScalarWhereInput | communications_emails_status_updatesScalarWhereInput[]
    OR?: communications_emails_status_updatesScalarWhereInput[]
    NOT?: communications_emails_status_updatesScalarWhereInput | communications_emails_status_updatesScalarWhereInput[]
    id?: UuidFilter<"communications_emails_status_updates"> | string
    communications_emails?: UuidFilter<"communications_emails_status_updates"> | string
    status?: StringFilter<"communications_emails_status_updates"> | string
    created_at?: DateTimeFilter<"communications_emails_status_updates"> | Date | string
  }

  export type communications_emailsCreateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    id?: string
    created_at?: Date | string
    email_id: string
    communications: communicationsCreateNestedOneWithoutCommunications_emailsInput
  }

  export type communications_emailsUncheckedCreateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    id?: string
    communications_id: string
    created_at?: Date | string
    email_id: string
  }

  export type communications_emailsCreateOrConnectWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    where: communications_emailsWhereUniqueInput
    create: XOR<communications_emailsCreateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emailsUncheckedCreateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
  }

  export type communications_emailsUpsertWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    update: XOR<communications_emailsUpdateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emailsUncheckedUpdateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
    create: XOR<communications_emailsCreateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emailsUncheckedCreateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
    where?: communications_emailsWhereInput
  }

  export type communications_emailsUpdateToOneWithWhereWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    where?: communications_emailsWhereInput
    data: XOR<communications_emailsUpdateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput, communications_emailsUncheckedUpdateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput>
  }

  export type communications_emailsUpdateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
    communications?: communicationsUpdateOneRequiredWithoutCommunications_emailsNestedInput
  }

  export type communications_emailsUncheckedUpdateWithoutCommunications_emails_status_updates_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    communications_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
  }

  export type communicationsCreateWithoutCommunications_textsInput = {
    id?: string
    type: string
    created_at?: Date | string
    customer_records?: customer_recordsCreateNestedOneWithoutCommunicationsInput
    marketing_campaigns?: marketing_campaignsCreateNestedOneWithoutCommunicationsInput
    communications_emails?: communications_emailsCreateNestedOneWithoutCommunicationsInput
  }

  export type communicationsUncheckedCreateWithoutCommunications_textsInput = {
    id?: string
    customer_record_id?: string | null
    type: string
    created_at?: Date | string
    marketing_campaign_id?: string | null
    communications_emails?: communications_emailsUncheckedCreateNestedOneWithoutCommunicationsInput
  }

  export type communicationsCreateOrConnectWithoutCommunications_textsInput = {
    where: communicationsWhereUniqueInput
    create: XOR<communicationsCreateWithoutCommunications_textsInput, communicationsUncheckedCreateWithoutCommunications_textsInput>
  }

  export type communicationsUpsertWithoutCommunications_textsInput = {
    update: XOR<communicationsUpdateWithoutCommunications_textsInput, communicationsUncheckedUpdateWithoutCommunications_textsInput>
    create: XOR<communicationsCreateWithoutCommunications_textsInput, communicationsUncheckedCreateWithoutCommunications_textsInput>
    where?: communicationsWhereInput
  }

  export type communicationsUpdateToOneWithWhereWithoutCommunications_textsInput = {
    where?: communicationsWhereInput
    data: XOR<communicationsUpdateWithoutCommunications_textsInput, communicationsUncheckedUpdateWithoutCommunications_textsInput>
  }

  export type communicationsUpdateWithoutCommunications_textsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_records?: customer_recordsUpdateOneWithoutCommunicationsNestedInput
    marketing_campaigns?: marketing_campaignsUpdateOneWithoutCommunicationsNestedInput
    communications_emails?: communications_emailsUpdateOneWithoutCommunicationsNestedInput
  }

  export type communicationsUncheckedUpdateWithoutCommunications_textsInput = {
    id?: StringFieldUpdateOperationsInput | string
    customer_record_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    marketing_campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    communications_emails?: communications_emailsUncheckedUpdateOneWithoutCommunicationsNestedInput
  }

  export type contactsCreateWithoutContact_info_emailsInput = {
    id?: string
    name: string
    position: string
    priority: number
    created_at?: Date | string
    contact_info_phones?: contact_info_phonesCreateNestedManyWithoutContactsInput
    customer_records: customer_recordsCreateNestedOneWithoutContactsInput
  }

  export type contactsUncheckedCreateWithoutContact_info_emailsInput = {
    id?: string
    name: string
    position: string
    priority: number
    created_at?: Date | string
    customer_record_id: string
    contact_info_phones?: contact_info_phonesUncheckedCreateNestedManyWithoutContactsInput
  }

  export type contactsCreateOrConnectWithoutContact_info_emailsInput = {
    where: contactsWhereUniqueInput
    create: XOR<contactsCreateWithoutContact_info_emailsInput, contactsUncheckedCreateWithoutContact_info_emailsInput>
  }

  export type contactsUpsertWithoutContact_info_emailsInput = {
    update: XOR<contactsUpdateWithoutContact_info_emailsInput, contactsUncheckedUpdateWithoutContact_info_emailsInput>
    create: XOR<contactsCreateWithoutContact_info_emailsInput, contactsUncheckedCreateWithoutContact_info_emailsInput>
    where?: contactsWhereInput
  }

  export type contactsUpdateToOneWithWhereWithoutContact_info_emailsInput = {
    where?: contactsWhereInput
    data: XOR<contactsUpdateWithoutContact_info_emailsInput, contactsUncheckedUpdateWithoutContact_info_emailsInput>
  }

  export type contactsUpdateWithoutContact_info_emailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    contact_info_phones?: contact_info_phonesUpdateManyWithoutContactsNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutContactsNestedInput
  }

  export type contactsUncheckedUpdateWithoutContact_info_emailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_record_id?: StringFieldUpdateOperationsInput | string
    contact_info_phones?: contact_info_phonesUncheckedUpdateManyWithoutContactsNestedInput
  }

  export type contactsCreateWithoutContact_info_phonesInput = {
    id?: string
    name: string
    position: string
    priority: number
    created_at?: Date | string
    contact_info_emails?: contact_info_emailsCreateNestedManyWithoutContactsInput
    customer_records: customer_recordsCreateNestedOneWithoutContactsInput
  }

  export type contactsUncheckedCreateWithoutContact_info_phonesInput = {
    id?: string
    name: string
    position: string
    priority: number
    created_at?: Date | string
    customer_record_id: string
    contact_info_emails?: contact_info_emailsUncheckedCreateNestedManyWithoutContactsInput
  }

  export type contactsCreateOrConnectWithoutContact_info_phonesInput = {
    where: contactsWhereUniqueInput
    create: XOR<contactsCreateWithoutContact_info_phonesInput, contactsUncheckedCreateWithoutContact_info_phonesInput>
  }

  export type contactsUpsertWithoutContact_info_phonesInput = {
    update: XOR<contactsUpdateWithoutContact_info_phonesInput, contactsUncheckedUpdateWithoutContact_info_phonesInput>
    create: XOR<contactsCreateWithoutContact_info_phonesInput, contactsUncheckedCreateWithoutContact_info_phonesInput>
    where?: contactsWhereInput
  }

  export type contactsUpdateToOneWithWhereWithoutContact_info_phonesInput = {
    where?: contactsWhereInput
    data: XOR<contactsUpdateWithoutContact_info_phonesInput, contactsUncheckedUpdateWithoutContact_info_phonesInput>
  }

  export type contactsUpdateWithoutContact_info_phonesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    contact_info_emails?: contact_info_emailsUpdateManyWithoutContactsNestedInput
    customer_records?: customer_recordsUpdateOneRequiredWithoutContactsNestedInput
  }

  export type contactsUncheckedUpdateWithoutContact_info_phonesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_record_id?: StringFieldUpdateOperationsInput | string
    contact_info_emails?: contact_info_emailsUncheckedUpdateManyWithoutContactsNestedInput
  }

  export type contact_info_emailsCreateWithoutContactsInput = {
    id?: string
    value: string
    priority: number
    created_at?: Date | string
    email_id?: string
  }

  export type contact_info_emailsUncheckedCreateWithoutContactsInput = {
    id?: string
    value: string
    priority: number
    created_at?: Date | string
    email_id?: string
  }

  export type contact_info_emailsCreateOrConnectWithoutContactsInput = {
    where: contact_info_emailsWhereUniqueInput
    create: XOR<contact_info_emailsCreateWithoutContactsInput, contact_info_emailsUncheckedCreateWithoutContactsInput>
  }

  export type contact_info_emailsCreateManyContactsInputEnvelope = {
    data: contact_info_emailsCreateManyContactsInput | contact_info_emailsCreateManyContactsInput[]
    skipDuplicates?: boolean
  }

  export type contact_info_phonesCreateWithoutContactsInput = {
    id?: string
    type: string
    value: string
    priority: number
    created_at?: Date | string
  }

  export type contact_info_phonesUncheckedCreateWithoutContactsInput = {
    id?: string
    type: string
    value: string
    priority: number
    created_at?: Date | string
  }

  export type contact_info_phonesCreateOrConnectWithoutContactsInput = {
    where: contact_info_phonesWhereUniqueInput
    create: XOR<contact_info_phonesCreateWithoutContactsInput, contact_info_phonesUncheckedCreateWithoutContactsInput>
  }

  export type contact_info_phonesCreateManyContactsInputEnvelope = {
    data: contact_info_phonesCreateManyContactsInput | contact_info_phonesCreateManyContactsInput[]
    skipDuplicates?: boolean
  }

  export type customer_recordsCreateWithoutContactsInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsCreateNestedOneWithoutCustomer_recordsInput
    communications?: communicationsCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsCreateNestedOneWithoutCustomer_recordsInput
    notes?: notesCreateNestedManyWithoutCustomer_recordsInput
    opportunities?: opportunitiesCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsUncheckedCreateWithoutContactsInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    communications?: communicationsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    notes?: notesUncheckedCreateNestedManyWithoutCustomer_recordsInput
    opportunities?: opportunitiesUncheckedCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsCreateOrConnectWithoutContactsInput = {
    where: customer_recordsWhereUniqueInput
    create: XOR<customer_recordsCreateWithoutContactsInput, customer_recordsUncheckedCreateWithoutContactsInput>
  }

  export type contact_info_emailsUpsertWithWhereUniqueWithoutContactsInput = {
    where: contact_info_emailsWhereUniqueInput
    update: XOR<contact_info_emailsUpdateWithoutContactsInput, contact_info_emailsUncheckedUpdateWithoutContactsInput>
    create: XOR<contact_info_emailsCreateWithoutContactsInput, contact_info_emailsUncheckedCreateWithoutContactsInput>
  }

  export type contact_info_emailsUpdateWithWhereUniqueWithoutContactsInput = {
    where: contact_info_emailsWhereUniqueInput
    data: XOR<contact_info_emailsUpdateWithoutContactsInput, contact_info_emailsUncheckedUpdateWithoutContactsInput>
  }

  export type contact_info_emailsUpdateManyWithWhereWithoutContactsInput = {
    where: contact_info_emailsScalarWhereInput
    data: XOR<contact_info_emailsUpdateManyMutationInput, contact_info_emailsUncheckedUpdateManyWithoutContactsInput>
  }

  export type contact_info_emailsScalarWhereInput = {
    AND?: contact_info_emailsScalarWhereInput | contact_info_emailsScalarWhereInput[]
    OR?: contact_info_emailsScalarWhereInput[]
    NOT?: contact_info_emailsScalarWhereInput | contact_info_emailsScalarWhereInput[]
    id?: UuidFilter<"contact_info_emails"> | string
    contact_id?: UuidFilter<"contact_info_emails"> | string
    value?: StringFilter<"contact_info_emails"> | string
    priority?: IntFilter<"contact_info_emails"> | number
    created_at?: DateTimeFilter<"contact_info_emails"> | Date | string
    email_id?: UuidFilter<"contact_info_emails"> | string
  }

  export type contact_info_phonesUpsertWithWhereUniqueWithoutContactsInput = {
    where: contact_info_phonesWhereUniqueInput
    update: XOR<contact_info_phonesUpdateWithoutContactsInput, contact_info_phonesUncheckedUpdateWithoutContactsInput>
    create: XOR<contact_info_phonesCreateWithoutContactsInput, contact_info_phonesUncheckedCreateWithoutContactsInput>
  }

  export type contact_info_phonesUpdateWithWhereUniqueWithoutContactsInput = {
    where: contact_info_phonesWhereUniqueInput
    data: XOR<contact_info_phonesUpdateWithoutContactsInput, contact_info_phonesUncheckedUpdateWithoutContactsInput>
  }

  export type contact_info_phonesUpdateManyWithWhereWithoutContactsInput = {
    where: contact_info_phonesScalarWhereInput
    data: XOR<contact_info_phonesUpdateManyMutationInput, contact_info_phonesUncheckedUpdateManyWithoutContactsInput>
  }

  export type contact_info_phonesScalarWhereInput = {
    AND?: contact_info_phonesScalarWhereInput | contact_info_phonesScalarWhereInput[]
    OR?: contact_info_phonesScalarWhereInput[]
    NOT?: contact_info_phonesScalarWhereInput | contact_info_phonesScalarWhereInput[]
    id?: UuidFilter<"contact_info_phones"> | string
    contact_id?: UuidFilter<"contact_info_phones"> | string
    type?: StringFilter<"contact_info_phones"> | string
    value?: StringFilter<"contact_info_phones"> | string
    priority?: IntFilter<"contact_info_phones"> | number
    created_at?: DateTimeFilter<"contact_info_phones"> | Date | string
  }

  export type customer_recordsUpsertWithoutContactsInput = {
    update: XOR<customer_recordsUpdateWithoutContactsInput, customer_recordsUncheckedUpdateWithoutContactsInput>
    create: XOR<customer_recordsCreateWithoutContactsInput, customer_recordsUncheckedCreateWithoutContactsInput>
    where?: customer_recordsWhereInput
  }

  export type customer_recordsUpdateToOneWithWhereWithoutContactsInput = {
    where?: customer_recordsWhereInput
    data: XOR<customer_recordsUpdateWithoutContactsInput, customer_recordsUncheckedUpdateWithoutContactsInput>
  }

  export type customer_recordsUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUpdateOneWithoutCustomer_recordsNestedInput
    communications?: communicationsUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUpdateOneWithoutCustomer_recordsNestedInput
    notes?: notesUpdateManyWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type customer_recordsUncheckedUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    communications?: communicationsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    notes?: notesUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUncheckedUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type accountsCreateWithoutCustomer_recordsInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    account_ai_chat?: account_ai_chatCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaCreateNestedManyWithoutAccountsInput
  }

  export type accountsUncheckedCreateWithoutCustomer_recordsInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
    account_ai_chat?: account_ai_chatUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedCreateNestedManyWithoutAccountsInput
    account_blog_posts?: account_blog_postsUncheckedCreateNestedManyWithoutAccountsInput
    account_plans?: account_plansUncheckedCreateNestedManyWithoutAccountsInput
    account_review_generator?: account_review_generatorUncheckedCreateNestedManyWithoutAccountsInput
    account_social_media?: account_social_mediaUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type accountsCreateOrConnectWithoutCustomer_recordsInput = {
    where: accountsWhereUniqueInput
    create: XOR<accountsCreateWithoutCustomer_recordsInput, accountsUncheckedCreateWithoutCustomer_recordsInput>
  }

  export type communicationsCreateWithoutCustomer_recordsInput = {
    id?: string
    type: string
    created_at?: Date | string
    marketing_campaigns?: marketing_campaignsCreateNestedOneWithoutCommunicationsInput
    communications_emails?: communications_emailsCreateNestedOneWithoutCommunicationsInput
    communications_texts?: communications_textsCreateNestedOneWithoutCommunicationsInput
  }

  export type communicationsUncheckedCreateWithoutCustomer_recordsInput = {
    id?: string
    type: string
    created_at?: Date | string
    marketing_campaign_id?: string | null
    communications_emails?: communications_emailsUncheckedCreateNestedOneWithoutCommunicationsInput
    communications_texts?: communications_textsUncheckedCreateNestedOneWithoutCommunicationsInput
  }

  export type communicationsCreateOrConnectWithoutCustomer_recordsInput = {
    where: communicationsWhereUniqueInput
    create: XOR<communicationsCreateWithoutCustomer_recordsInput, communicationsUncheckedCreateWithoutCustomer_recordsInput>
  }

  export type communicationsCreateManyCustomer_recordsInputEnvelope = {
    data: communicationsCreateManyCustomer_recordsInput | communicationsCreateManyCustomer_recordsInput[]
    skipDuplicates?: boolean
  }

  export type contactsCreateWithoutCustomer_recordsInput = {
    id?: string
    name: string
    position: string
    priority: number
    created_at?: Date | string
    contact_info_emails?: contact_info_emailsCreateNestedManyWithoutContactsInput
    contact_info_phones?: contact_info_phonesCreateNestedManyWithoutContactsInput
  }

  export type contactsUncheckedCreateWithoutCustomer_recordsInput = {
    id?: string
    name: string
    position: string
    priority: number
    created_at?: Date | string
    contact_info_emails?: contact_info_emailsUncheckedCreateNestedManyWithoutContactsInput
    contact_info_phones?: contact_info_phonesUncheckedCreateNestedManyWithoutContactsInput
  }

  export type contactsCreateOrConnectWithoutCustomer_recordsInput = {
    where: contactsWhereUniqueInput
    create: XOR<contactsCreateWithoutCustomer_recordsInput, contactsUncheckedCreateWithoutCustomer_recordsInput>
  }

  export type contactsCreateManyCustomer_recordsInputEnvelope = {
    data: contactsCreateManyCustomer_recordsInput | contactsCreateManyCustomer_recordsInput[]
    skipDuplicates?: boolean
  }

  export type leadsCreateWithoutCustomer_recordsInput = {
    id?: string
    created_at?: Date | string
    stage: string
    active?: boolean
  }

  export type leadsUncheckedCreateWithoutCustomer_recordsInput = {
    id?: string
    created_at?: Date | string
    stage: string
    active?: boolean
  }

  export type leadsCreateOrConnectWithoutCustomer_recordsInput = {
    where: leadsWhereUniqueInput
    create: XOR<leadsCreateWithoutCustomer_recordsInput, leadsUncheckedCreateWithoutCustomer_recordsInput>
  }

  export type notesCreateWithoutCustomer_recordsInput = {
    id?: string
    note: string
    created_at?: Date | string
    reps?: repsCreateNestedOneWithoutNotesInput
  }

  export type notesUncheckedCreateWithoutCustomer_recordsInput = {
    id?: string
    author?: string | null
    note: string
    created_at?: Date | string
  }

  export type notesCreateOrConnectWithoutCustomer_recordsInput = {
    where: notesWhereUniqueInput
    create: XOR<notesCreateWithoutCustomer_recordsInput, notesUncheckedCreateWithoutCustomer_recordsInput>
  }

  export type notesCreateManyCustomer_recordsInputEnvelope = {
    data: notesCreateManyCustomer_recordsInput | notesCreateManyCustomer_recordsInput[]
    skipDuplicates?: boolean
  }

  export type opportunitiesCreateWithoutCustomer_recordsInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
  }

  export type opportunitiesUncheckedCreateWithoutCustomer_recordsInput = {
    id?: string
    created_at?: Date | string
    stage?: string
    active?: boolean
  }

  export type opportunitiesCreateOrConnectWithoutCustomer_recordsInput = {
    where: opportunitiesWhereUniqueInput
    create: XOR<opportunitiesCreateWithoutCustomer_recordsInput, opportunitiesUncheckedCreateWithoutCustomer_recordsInput>
  }

  export type accountsUpsertWithoutCustomer_recordsInput = {
    update: XOR<accountsUpdateWithoutCustomer_recordsInput, accountsUncheckedUpdateWithoutCustomer_recordsInput>
    create: XOR<accountsCreateWithoutCustomer_recordsInput, accountsUncheckedCreateWithoutCustomer_recordsInput>
    where?: accountsWhereInput
  }

  export type accountsUpdateToOneWithWhereWithoutCustomer_recordsInput = {
    where?: accountsWhereInput
    data: XOR<accountsUpdateWithoutCustomer_recordsInput, accountsUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type accountsUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    account_ai_chat?: account_ai_chatUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUpdateManyWithoutAccountsNestedInput
  }

  export type accountsUncheckedUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    account_ai_chat?: account_ai_chatUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_post_instances?: account_blog_post_instancesUncheckedUpdateManyWithoutAccountsNestedInput
    account_blog_posts?: account_blog_postsUncheckedUpdateManyWithoutAccountsNestedInput
    account_plans?: account_plansUncheckedUpdateManyWithoutAccountsNestedInput
    account_review_generator?: account_review_generatorUncheckedUpdateManyWithoutAccountsNestedInput
    account_social_media?: account_social_mediaUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type communicationsUpsertWithWhereUniqueWithoutCustomer_recordsInput = {
    where: communicationsWhereUniqueInput
    update: XOR<communicationsUpdateWithoutCustomer_recordsInput, communicationsUncheckedUpdateWithoutCustomer_recordsInput>
    create: XOR<communicationsCreateWithoutCustomer_recordsInput, communicationsUncheckedCreateWithoutCustomer_recordsInput>
  }

  export type communicationsUpdateWithWhereUniqueWithoutCustomer_recordsInput = {
    where: communicationsWhereUniqueInput
    data: XOR<communicationsUpdateWithoutCustomer_recordsInput, communicationsUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type communicationsUpdateManyWithWhereWithoutCustomer_recordsInput = {
    where: communicationsScalarWhereInput
    data: XOR<communicationsUpdateManyMutationInput, communicationsUncheckedUpdateManyWithoutCustomer_recordsInput>
  }

  export type communicationsScalarWhereInput = {
    AND?: communicationsScalarWhereInput | communicationsScalarWhereInput[]
    OR?: communicationsScalarWhereInput[]
    NOT?: communicationsScalarWhereInput | communicationsScalarWhereInput[]
    id?: UuidFilter<"communications"> | string
    customer_record_id?: UuidNullableFilter<"communications"> | string | null
    type?: StringFilter<"communications"> | string
    created_at?: DateTimeFilter<"communications"> | Date | string
    marketing_campaign_id?: UuidNullableFilter<"communications"> | string | null
  }

  export type contactsUpsertWithWhereUniqueWithoutCustomer_recordsInput = {
    where: contactsWhereUniqueInput
    update: XOR<contactsUpdateWithoutCustomer_recordsInput, contactsUncheckedUpdateWithoutCustomer_recordsInput>
    create: XOR<contactsCreateWithoutCustomer_recordsInput, contactsUncheckedCreateWithoutCustomer_recordsInput>
  }

  export type contactsUpdateWithWhereUniqueWithoutCustomer_recordsInput = {
    where: contactsWhereUniqueInput
    data: XOR<contactsUpdateWithoutCustomer_recordsInput, contactsUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type contactsUpdateManyWithWhereWithoutCustomer_recordsInput = {
    where: contactsScalarWhereInput
    data: XOR<contactsUpdateManyMutationInput, contactsUncheckedUpdateManyWithoutCustomer_recordsInput>
  }

  export type contactsScalarWhereInput = {
    AND?: contactsScalarWhereInput | contactsScalarWhereInput[]
    OR?: contactsScalarWhereInput[]
    NOT?: contactsScalarWhereInput | contactsScalarWhereInput[]
    id?: UuidFilter<"contacts"> | string
    name?: StringFilter<"contacts"> | string
    position?: StringFilter<"contacts"> | string
    priority?: IntFilter<"contacts"> | number
    created_at?: DateTimeFilter<"contacts"> | Date | string
    customer_record_id?: UuidFilter<"contacts"> | string
  }

  export type leadsUpsertWithoutCustomer_recordsInput = {
    update: XOR<leadsUpdateWithoutCustomer_recordsInput, leadsUncheckedUpdateWithoutCustomer_recordsInput>
    create: XOR<leadsCreateWithoutCustomer_recordsInput, leadsUncheckedCreateWithoutCustomer_recordsInput>
    where?: leadsWhereInput
  }

  export type leadsUpdateToOneWithWhereWithoutCustomer_recordsInput = {
    where?: leadsWhereInput
    data: XOR<leadsUpdateWithoutCustomer_recordsInput, leadsUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type leadsUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type leadsUncheckedUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type notesUpsertWithWhereUniqueWithoutCustomer_recordsInput = {
    where: notesWhereUniqueInput
    update: XOR<notesUpdateWithoutCustomer_recordsInput, notesUncheckedUpdateWithoutCustomer_recordsInput>
    create: XOR<notesCreateWithoutCustomer_recordsInput, notesUncheckedCreateWithoutCustomer_recordsInput>
  }

  export type notesUpdateWithWhereUniqueWithoutCustomer_recordsInput = {
    where: notesWhereUniqueInput
    data: XOR<notesUpdateWithoutCustomer_recordsInput, notesUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type notesUpdateManyWithWhereWithoutCustomer_recordsInput = {
    where: notesScalarWhereInput
    data: XOR<notesUpdateManyMutationInput, notesUncheckedUpdateManyWithoutCustomer_recordsInput>
  }

  export type notesScalarWhereInput = {
    AND?: notesScalarWhereInput | notesScalarWhereInput[]
    OR?: notesScalarWhereInput[]
    NOT?: notesScalarWhereInput | notesScalarWhereInput[]
    id?: UuidFilter<"notes"> | string
    author?: UuidNullableFilter<"notes"> | string | null
    note?: StringFilter<"notes"> | string
    created_at?: DateTimeFilter<"notes"> | Date | string
    customer_record_id?: UuidFilter<"notes"> | string
  }

  export type opportunitiesUpsertWithoutCustomer_recordsInput = {
    update: XOR<opportunitiesUpdateWithoutCustomer_recordsInput, opportunitiesUncheckedUpdateWithoutCustomer_recordsInput>
    create: XOR<opportunitiesCreateWithoutCustomer_recordsInput, opportunitiesUncheckedCreateWithoutCustomer_recordsInput>
    where?: opportunitiesWhereInput
  }

  export type opportunitiesUpdateToOneWithWhereWithoutCustomer_recordsInput = {
    where?: opportunitiesWhereInput
    data: XOR<opportunitiesUpdateWithoutCustomer_recordsInput, opportunitiesUncheckedUpdateWithoutCustomer_recordsInput>
  }

  export type opportunitiesUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type opportunitiesUncheckedUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    stage?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type customer_recordsCreateWithoutLeadsInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsCreateNestedOneWithoutCustomer_recordsInput
    communications?: communicationsCreateNestedManyWithoutCustomer_recordsInput
    contacts?: contactsCreateNestedManyWithoutCustomer_recordsInput
    notes?: notesCreateNestedManyWithoutCustomer_recordsInput
    opportunities?: opportunitiesCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsUncheckedCreateWithoutLeadsInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    communications?: communicationsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    contacts?: contactsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    notes?: notesUncheckedCreateNestedManyWithoutCustomer_recordsInput
    opportunities?: opportunitiesUncheckedCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsCreateOrConnectWithoutLeadsInput = {
    where: customer_recordsWhereUniqueInput
    create: XOR<customer_recordsCreateWithoutLeadsInput, customer_recordsUncheckedCreateWithoutLeadsInput>
  }

  export type customer_recordsUpsertWithoutLeadsInput = {
    update: XOR<customer_recordsUpdateWithoutLeadsInput, customer_recordsUncheckedUpdateWithoutLeadsInput>
    create: XOR<customer_recordsCreateWithoutLeadsInput, customer_recordsUncheckedCreateWithoutLeadsInput>
    where?: customer_recordsWhereInput
  }

  export type customer_recordsUpdateToOneWithWhereWithoutLeadsInput = {
    where?: customer_recordsWhereInput
    data: XOR<customer_recordsUpdateWithoutLeadsInput, customer_recordsUncheckedUpdateWithoutLeadsInput>
  }

  export type customer_recordsUpdateWithoutLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUpdateOneWithoutCustomer_recordsNestedInput
    communications?: communicationsUpdateManyWithoutCustomer_recordsNestedInput
    contacts?: contactsUpdateManyWithoutCustomer_recordsNestedInput
    notes?: notesUpdateManyWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type customer_recordsUncheckedUpdateWithoutLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    communications?: communicationsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    contacts?: contactsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    notes?: notesUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUncheckedUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type communicationsCreateWithoutMarketing_campaignsInput = {
    id?: string
    type: string
    created_at?: Date | string
    customer_records?: customer_recordsCreateNestedOneWithoutCommunicationsInput
    communications_emails?: communications_emailsCreateNestedOneWithoutCommunicationsInput
    communications_texts?: communications_textsCreateNestedOneWithoutCommunicationsInput
  }

  export type communicationsUncheckedCreateWithoutMarketing_campaignsInput = {
    id?: string
    customer_record_id?: string | null
    type: string
    created_at?: Date | string
    communications_emails?: communications_emailsUncheckedCreateNestedOneWithoutCommunicationsInput
    communications_texts?: communications_textsUncheckedCreateNestedOneWithoutCommunicationsInput
  }

  export type communicationsCreateOrConnectWithoutMarketing_campaignsInput = {
    where: communicationsWhereUniqueInput
    create: XOR<communicationsCreateWithoutMarketing_campaignsInput, communicationsUncheckedCreateWithoutMarketing_campaignsInput>
  }

  export type communicationsCreateManyMarketing_campaignsInputEnvelope = {
    data: communicationsCreateManyMarketing_campaignsInput | communicationsCreateManyMarketing_campaignsInput[]
    skipDuplicates?: boolean
  }

  export type communicationsUpsertWithWhereUniqueWithoutMarketing_campaignsInput = {
    where: communicationsWhereUniqueInput
    update: XOR<communicationsUpdateWithoutMarketing_campaignsInput, communicationsUncheckedUpdateWithoutMarketing_campaignsInput>
    create: XOR<communicationsCreateWithoutMarketing_campaignsInput, communicationsUncheckedCreateWithoutMarketing_campaignsInput>
  }

  export type communicationsUpdateWithWhereUniqueWithoutMarketing_campaignsInput = {
    where: communicationsWhereUniqueInput
    data: XOR<communicationsUpdateWithoutMarketing_campaignsInput, communicationsUncheckedUpdateWithoutMarketing_campaignsInput>
  }

  export type communicationsUpdateManyWithWhereWithoutMarketing_campaignsInput = {
    where: communicationsScalarWhereInput
    data: XOR<communicationsUpdateManyMutationInput, communicationsUncheckedUpdateManyWithoutMarketing_campaignsInput>
  }

  export type repsCreateWithoutNotesInput = {
    created_at?: Date | string
    name: string
    role?: string | null
    status: string
    users: usersCreateNestedOneWithoutRepsInput
  }

  export type repsUncheckedCreateWithoutNotesInput = {
    id: string
    created_at?: Date | string
    name: string
    role?: string | null
    status: string
  }

  export type repsCreateOrConnectWithoutNotesInput = {
    where: repsWhereUniqueInput
    create: XOR<repsCreateWithoutNotesInput, repsUncheckedCreateWithoutNotesInput>
  }

  export type customer_recordsCreateWithoutNotesInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsCreateNestedOneWithoutCustomer_recordsInput
    communications?: communicationsCreateNestedManyWithoutCustomer_recordsInput
    contacts?: contactsCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsCreateNestedOneWithoutCustomer_recordsInput
    opportunities?: opportunitiesCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsUncheckedCreateWithoutNotesInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    communications?: communicationsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    contacts?: contactsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    opportunities?: opportunitiesUncheckedCreateNestedOneWithoutCustomer_recordsInput
  }

  export type customer_recordsCreateOrConnectWithoutNotesInput = {
    where: customer_recordsWhereUniqueInput
    create: XOR<customer_recordsCreateWithoutNotesInput, customer_recordsUncheckedCreateWithoutNotesInput>
  }

  export type repsUpsertWithoutNotesInput = {
    update: XOR<repsUpdateWithoutNotesInput, repsUncheckedUpdateWithoutNotesInput>
    create: XOR<repsCreateWithoutNotesInput, repsUncheckedCreateWithoutNotesInput>
    where?: repsWhereInput
  }

  export type repsUpdateToOneWithWhereWithoutNotesInput = {
    where?: repsWhereInput
    data: XOR<repsUpdateWithoutNotesInput, repsUncheckedUpdateWithoutNotesInput>
  }

  export type repsUpdateWithoutNotesInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    users?: usersUpdateOneRequiredWithoutRepsNestedInput
  }

  export type repsUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type customer_recordsUpsertWithoutNotesInput = {
    update: XOR<customer_recordsUpdateWithoutNotesInput, customer_recordsUncheckedUpdateWithoutNotesInput>
    create: XOR<customer_recordsCreateWithoutNotesInput, customer_recordsUncheckedCreateWithoutNotesInput>
    where?: customer_recordsWhereInput
  }

  export type customer_recordsUpdateToOneWithWhereWithoutNotesInput = {
    where?: customer_recordsWhereInput
    data: XOR<customer_recordsUpdateWithoutNotesInput, customer_recordsUncheckedUpdateWithoutNotesInput>
  }

  export type customer_recordsUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUpdateOneWithoutCustomer_recordsNestedInput
    communications?: communicationsUpdateManyWithoutCustomer_recordsNestedInput
    contacts?: contactsUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUpdateOneWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type customer_recordsUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    communications?: communicationsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    contacts?: contactsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    opportunities?: opportunitiesUncheckedUpdateOneWithoutCustomer_recordsNestedInput
  }

  export type customer_recordsCreateWithoutOpportunitiesInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsCreateNestedOneWithoutCustomer_recordsInput
    communications?: communicationsCreateNestedManyWithoutCustomer_recordsInput
    contacts?: contactsCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsCreateNestedOneWithoutCustomer_recordsInput
    notes?: notesCreateNestedManyWithoutCustomer_recordsInput
  }

  export type customer_recordsUncheckedCreateWithoutOpportunitiesInput = {
    id?: string
    business_name: string
    active: boolean
    stage: string
    created_at?: Date | string
    business_owner_name: string
    accounts?: accountsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    communications?: communicationsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    contacts?: contactsUncheckedCreateNestedManyWithoutCustomer_recordsInput
    leads?: leadsUncheckedCreateNestedOneWithoutCustomer_recordsInput
    notes?: notesUncheckedCreateNestedManyWithoutCustomer_recordsInput
  }

  export type customer_recordsCreateOrConnectWithoutOpportunitiesInput = {
    where: customer_recordsWhereUniqueInput
    create: XOR<customer_recordsCreateWithoutOpportunitiesInput, customer_recordsUncheckedCreateWithoutOpportunitiesInput>
  }

  export type customer_recordsUpsertWithoutOpportunitiesInput = {
    update: XOR<customer_recordsUpdateWithoutOpportunitiesInput, customer_recordsUncheckedUpdateWithoutOpportunitiesInput>
    create: XOR<customer_recordsCreateWithoutOpportunitiesInput, customer_recordsUncheckedCreateWithoutOpportunitiesInput>
    where?: customer_recordsWhereInput
  }

  export type customer_recordsUpdateToOneWithWhereWithoutOpportunitiesInput = {
    where?: customer_recordsWhereInput
    data: XOR<customer_recordsUpdateWithoutOpportunitiesInput, customer_recordsUncheckedUpdateWithoutOpportunitiesInput>
  }

  export type customer_recordsUpdateWithoutOpportunitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUpdateOneWithoutCustomer_recordsNestedInput
    communications?: communicationsUpdateManyWithoutCustomer_recordsNestedInput
    contacts?: contactsUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUpdateOneWithoutCustomer_recordsNestedInput
    notes?: notesUpdateManyWithoutCustomer_recordsNestedInput
  }

  export type customer_recordsUncheckedUpdateWithoutOpportunitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    business_name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    stage?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    business_owner_name?: StringFieldUpdateOperationsInput | string
    accounts?: accountsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    communications?: communicationsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    contacts?: contactsUncheckedUpdateManyWithoutCustomer_recordsNestedInput
    leads?: leadsUncheckedUpdateOneWithoutCustomer_recordsNestedInput
    notes?: notesUncheckedUpdateManyWithoutCustomer_recordsNestedInput
  }

  export type account_ai_chatCreateWithoutPlansInput = {
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_ai_chatInput
  }

  export type account_ai_chatUncheckedCreateWithoutPlansInput = {
    account_id: string
    created_at?: Date | string
  }

  export type account_ai_chatCreateOrConnectWithoutPlansInput = {
    where: account_ai_chatWhereUniqueInput
    create: XOR<account_ai_chatCreateWithoutPlansInput, account_ai_chatUncheckedCreateWithoutPlansInput>
  }

  export type account_ai_chatCreateManyPlansInputEnvelope = {
    data: account_ai_chatCreateManyPlansInput | account_ai_chatCreateManyPlansInput[]
    skipDuplicates?: boolean
  }

  export type account_blog_post_instancesCreateWithoutPlansInput = {
    blog_post_id?: string
    post_content: string
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_blog_post_instancesInput
  }

  export type account_blog_post_instancesUncheckedCreateWithoutPlansInput = {
    blog_post_id?: string
    account_id: string
    post_content: string
    created_at?: Date | string
  }

  export type account_blog_post_instancesCreateOrConnectWithoutPlansInput = {
    where: account_blog_post_instancesWhereUniqueInput
    create: XOR<account_blog_post_instancesCreateWithoutPlansInput, account_blog_post_instancesUncheckedCreateWithoutPlansInput>
  }

  export type account_blog_post_instancesCreateManyPlansInputEnvelope = {
    data: account_blog_post_instancesCreateManyPlansInput | account_blog_post_instancesCreateManyPlansInput[]
    skipDuplicates?: boolean
  }

  export type account_blog_postsCreateWithoutPlansInput = {
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_blog_postsInput
  }

  export type account_blog_postsUncheckedCreateWithoutPlansInput = {
    account_id: string
    created_at?: Date | string
  }

  export type account_blog_postsCreateOrConnectWithoutPlansInput = {
    where: account_blog_postsWhereUniqueInput
    create: XOR<account_blog_postsCreateWithoutPlansInput, account_blog_postsUncheckedCreateWithoutPlansInput>
  }

  export type account_blog_postsCreateManyPlansInputEnvelope = {
    data: account_blog_postsCreateManyPlansInput | account_blog_postsCreateManyPlansInput[]
    skipDuplicates?: boolean
  }

  export type account_plansCreateWithoutPlansInput = {
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_plansInput
  }

  export type account_plansUncheckedCreateWithoutPlansInput = {
    account_id: string
    created_at?: Date | string
  }

  export type account_plansCreateOrConnectWithoutPlansInput = {
    where: account_plansWhereUniqueInput
    create: XOR<account_plansCreateWithoutPlansInput, account_plansUncheckedCreateWithoutPlansInput>
  }

  export type account_plansCreateManyPlansInputEnvelope = {
    data: account_plansCreateManyPlansInput | account_plansCreateManyPlansInput[]
    skipDuplicates?: boolean
  }

  export type account_review_generatorCreateWithoutPlansInput = {
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_review_generatorInput
  }

  export type account_review_generatorUncheckedCreateWithoutPlansInput = {
    account_id: string
    created_at?: Date | string
  }

  export type account_review_generatorCreateOrConnectWithoutPlansInput = {
    where: account_review_generatorWhereUniqueInput
    create: XOR<account_review_generatorCreateWithoutPlansInput, account_review_generatorUncheckedCreateWithoutPlansInput>
  }

  export type account_review_generatorCreateManyPlansInputEnvelope = {
    data: account_review_generatorCreateManyPlansInput | account_review_generatorCreateManyPlansInput[]
    skipDuplicates?: boolean
  }

  export type account_social_mediaCreateWithoutPlansInput = {
    created_at?: Date | string
    accounts: accountsCreateNestedOneWithoutAccount_social_mediaInput
  }

  export type account_social_mediaUncheckedCreateWithoutPlansInput = {
    account_id: string
    created_at?: Date | string
  }

  export type account_social_mediaCreateOrConnectWithoutPlansInput = {
    where: account_social_mediaWhereUniqueInput
    create: XOR<account_social_mediaCreateWithoutPlansInput, account_social_mediaUncheckedCreateWithoutPlansInput>
  }

  export type account_social_mediaCreateManyPlansInputEnvelope = {
    data: account_social_mediaCreateManyPlansInput | account_social_mediaCreateManyPlansInput[]
    skipDuplicates?: boolean
  }

  export type account_ai_chatUpsertWithWhereUniqueWithoutPlansInput = {
    where: account_ai_chatWhereUniqueInput
    update: XOR<account_ai_chatUpdateWithoutPlansInput, account_ai_chatUncheckedUpdateWithoutPlansInput>
    create: XOR<account_ai_chatCreateWithoutPlansInput, account_ai_chatUncheckedCreateWithoutPlansInput>
  }

  export type account_ai_chatUpdateWithWhereUniqueWithoutPlansInput = {
    where: account_ai_chatWhereUniqueInput
    data: XOR<account_ai_chatUpdateWithoutPlansInput, account_ai_chatUncheckedUpdateWithoutPlansInput>
  }

  export type account_ai_chatUpdateManyWithWhereWithoutPlansInput = {
    where: account_ai_chatScalarWhereInput
    data: XOR<account_ai_chatUpdateManyMutationInput, account_ai_chatUncheckedUpdateManyWithoutPlansInput>
  }

  export type account_blog_post_instancesUpsertWithWhereUniqueWithoutPlansInput = {
    where: account_blog_post_instancesWhereUniqueInput
    update: XOR<account_blog_post_instancesUpdateWithoutPlansInput, account_blog_post_instancesUncheckedUpdateWithoutPlansInput>
    create: XOR<account_blog_post_instancesCreateWithoutPlansInput, account_blog_post_instancesUncheckedCreateWithoutPlansInput>
  }

  export type account_blog_post_instancesUpdateWithWhereUniqueWithoutPlansInput = {
    where: account_blog_post_instancesWhereUniqueInput
    data: XOR<account_blog_post_instancesUpdateWithoutPlansInput, account_blog_post_instancesUncheckedUpdateWithoutPlansInput>
  }

  export type account_blog_post_instancesUpdateManyWithWhereWithoutPlansInput = {
    where: account_blog_post_instancesScalarWhereInput
    data: XOR<account_blog_post_instancesUpdateManyMutationInput, account_blog_post_instancesUncheckedUpdateManyWithoutPlansInput>
  }

  export type account_blog_postsUpsertWithWhereUniqueWithoutPlansInput = {
    where: account_blog_postsWhereUniqueInput
    update: XOR<account_blog_postsUpdateWithoutPlansInput, account_blog_postsUncheckedUpdateWithoutPlansInput>
    create: XOR<account_blog_postsCreateWithoutPlansInput, account_blog_postsUncheckedCreateWithoutPlansInput>
  }

  export type account_blog_postsUpdateWithWhereUniqueWithoutPlansInput = {
    where: account_blog_postsWhereUniqueInput
    data: XOR<account_blog_postsUpdateWithoutPlansInput, account_blog_postsUncheckedUpdateWithoutPlansInput>
  }

  export type account_blog_postsUpdateManyWithWhereWithoutPlansInput = {
    where: account_blog_postsScalarWhereInput
    data: XOR<account_blog_postsUpdateManyMutationInput, account_blog_postsUncheckedUpdateManyWithoutPlansInput>
  }

  export type account_plansUpsertWithWhereUniqueWithoutPlansInput = {
    where: account_plansWhereUniqueInput
    update: XOR<account_plansUpdateWithoutPlansInput, account_plansUncheckedUpdateWithoutPlansInput>
    create: XOR<account_plansCreateWithoutPlansInput, account_plansUncheckedCreateWithoutPlansInput>
  }

  export type account_plansUpdateWithWhereUniqueWithoutPlansInput = {
    where: account_plansWhereUniqueInput
    data: XOR<account_plansUpdateWithoutPlansInput, account_plansUncheckedUpdateWithoutPlansInput>
  }

  export type account_plansUpdateManyWithWhereWithoutPlansInput = {
    where: account_plansScalarWhereInput
    data: XOR<account_plansUpdateManyMutationInput, account_plansUncheckedUpdateManyWithoutPlansInput>
  }

  export type account_review_generatorUpsertWithWhereUniqueWithoutPlansInput = {
    where: account_review_generatorWhereUniqueInput
    update: XOR<account_review_generatorUpdateWithoutPlansInput, account_review_generatorUncheckedUpdateWithoutPlansInput>
    create: XOR<account_review_generatorCreateWithoutPlansInput, account_review_generatorUncheckedCreateWithoutPlansInput>
  }

  export type account_review_generatorUpdateWithWhereUniqueWithoutPlansInput = {
    where: account_review_generatorWhereUniqueInput
    data: XOR<account_review_generatorUpdateWithoutPlansInput, account_review_generatorUncheckedUpdateWithoutPlansInput>
  }

  export type account_review_generatorUpdateManyWithWhereWithoutPlansInput = {
    where: account_review_generatorScalarWhereInput
    data: XOR<account_review_generatorUpdateManyMutationInput, account_review_generatorUncheckedUpdateManyWithoutPlansInput>
  }

  export type account_social_mediaUpsertWithWhereUniqueWithoutPlansInput = {
    where: account_social_mediaWhereUniqueInput
    update: XOR<account_social_mediaUpdateWithoutPlansInput, account_social_mediaUncheckedUpdateWithoutPlansInput>
    create: XOR<account_social_mediaCreateWithoutPlansInput, account_social_mediaUncheckedCreateWithoutPlansInput>
  }

  export type account_social_mediaUpdateWithWhereUniqueWithoutPlansInput = {
    where: account_social_mediaWhereUniqueInput
    data: XOR<account_social_mediaUpdateWithoutPlansInput, account_social_mediaUncheckedUpdateWithoutPlansInput>
  }

  export type account_social_mediaUpdateManyWithWhereWithoutPlansInput = {
    where: account_social_mediaScalarWhereInput
    data: XOR<account_social_mediaUpdateManyMutationInput, account_social_mediaUncheckedUpdateManyWithoutPlansInput>
  }

  export type notesCreateWithoutRepsInput = {
    id?: string
    note: string
    created_at?: Date | string
    customer_records: customer_recordsCreateNestedOneWithoutNotesInput
  }

  export type notesUncheckedCreateWithoutRepsInput = {
    id?: string
    note: string
    created_at?: Date | string
    customer_record_id: string
  }

  export type notesCreateOrConnectWithoutRepsInput = {
    where: notesWhereUniqueInput
    create: XOR<notesCreateWithoutRepsInput, notesUncheckedCreateWithoutRepsInput>
  }

  export type notesCreateManyRepsInputEnvelope = {
    data: notesCreateManyRepsInput | notesCreateManyRepsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutRepsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    identities?: identitiesCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutRepsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutRepsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutRepsInput, usersUncheckedCreateWithoutRepsInput>
  }

  export type notesUpsertWithWhereUniqueWithoutRepsInput = {
    where: notesWhereUniqueInput
    update: XOR<notesUpdateWithoutRepsInput, notesUncheckedUpdateWithoutRepsInput>
    create: XOR<notesCreateWithoutRepsInput, notesUncheckedCreateWithoutRepsInput>
  }

  export type notesUpdateWithWhereUniqueWithoutRepsInput = {
    where: notesWhereUniqueInput
    data: XOR<notesUpdateWithoutRepsInput, notesUncheckedUpdateWithoutRepsInput>
  }

  export type notesUpdateManyWithWhereWithoutRepsInput = {
    where: notesScalarWhereInput
    data: XOR<notesUpdateManyMutationInput, notesUncheckedUpdateManyWithoutRepsInput>
  }

  export type usersUpsertWithoutRepsInput = {
    update: XOR<usersUpdateWithoutRepsInput, usersUncheckedUpdateWithoutRepsInput>
    create: XOR<usersCreateWithoutRepsInput, usersUncheckedCreateWithoutRepsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutRepsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutRepsInput, usersUncheckedUpdateWithoutRepsInput>
  }

  export type usersUpdateWithoutRepsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutRepsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type saml_relay_statesCreateManyFlow_stateInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    from_ip_address?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_relay_statesUpdateWithoutFlow_stateInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    from_ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sso_providers?: sso_providersUpdateOneRequiredWithoutSaml_relay_statesNestedInput
  }

  export type saml_relay_statesUncheckedUpdateWithoutFlow_stateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    from_ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutFlow_stateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    from_ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mfa_challengesCreateManyMfa_factorsInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
  }

  export type mfa_challengesUpdateWithoutMfa_factorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_challengesUncheckedUpdateWithoutMfa_factorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_challengesUncheckedUpdateManyWithoutMfa_factorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsCreateManySessionsInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type refresh_tokensCreateManySessionsInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
  }

  export type mfa_amr_claimsUpdateWithoutSessionsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsUncheckedUpdateWithoutSessionsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsUncheckedUpdateManyWithoutSessionsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type refresh_tokensUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensUncheckedUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensUncheckedUpdateManyWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersCreateManySso_providersInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_relay_statesCreateManySso_providersInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    from_ip_address?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type sso_domainsCreateManySso_providersInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_providersUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_providersUncheckedUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_providersUncheckedUpdateManyWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_relay_statesUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    from_ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state?: flow_stateUpdateOneWithoutSaml_relay_statesNestedInput
  }

  export type saml_relay_statesUncheckedUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    from_ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    from_ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sso_domainsUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsUncheckedUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsUncheckedUpdateManyWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type identitiesCreateManyUsersInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type mfa_factorsCreateManyUsersInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
  }

  export type sessionsCreateManyUsersInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
  }

  export type identitiesUpdateWithoutUsersInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesUncheckedUpdateWithoutUsersInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesUncheckedUpdateManyWithoutUsersInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_factorsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUpdateManyWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUncheckedUpdateManyWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sessionsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUpdateManyWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type account_ai_chatCreateManyAccountsInput = {
    plan_id: string
    created_at?: Date | string
  }

  export type account_blog_post_instancesCreateManyAccountsInput = {
    blog_post_id?: string
    plan_id: string
    post_content: string
    created_at?: Date | string
  }

  export type account_blog_postsCreateManyAccountsInput = {
    plan_id: string
    created_at?: Date | string
  }

  export type account_plansCreateManyAccountsInput = {
    plan_id: string
    created_at?: Date | string
  }

  export type account_review_generatorCreateManyAccountsInput = {
    plan_id: string
    created_at?: Date | string
  }

  export type account_social_mediaCreateManyAccountsInput = {
    plan_id: string
    created_at?: Date | string
  }

  export type account_ai_chatUpdateWithoutAccountsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    plans?: plansUpdateOneRequiredWithoutAccount_ai_chatNestedInput
  }

  export type account_ai_chatUncheckedUpdateWithoutAccountsInput = {
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_ai_chatUncheckedUpdateManyWithoutAccountsInput = {
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_post_instancesUpdateWithoutAccountsInput = {
    blog_post_id?: StringFieldUpdateOperationsInput | string
    post_content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    plans?: plansUpdateOneRequiredWithoutAccount_blog_post_instancesNestedInput
  }

  export type account_blog_post_instancesUncheckedUpdateWithoutAccountsInput = {
    blog_post_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    post_content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_post_instancesUncheckedUpdateManyWithoutAccountsInput = {
    blog_post_id?: StringFieldUpdateOperationsInput | string
    plan_id?: StringFieldUpdateOperationsInput | string
    post_content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_postsUpdateWithoutAccountsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    plans?: plansUpdateOneRequiredWithoutAccount_blog_postsNestedInput
  }

  export type account_blog_postsUncheckedUpdateWithoutAccountsInput = {
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_postsUncheckedUpdateManyWithoutAccountsInput = {
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_plansUpdateWithoutAccountsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    plans?: plansUpdateOneRequiredWithoutAccount_plansNestedInput
  }

  export type account_plansUncheckedUpdateWithoutAccountsInput = {
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_plansUncheckedUpdateManyWithoutAccountsInput = {
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_review_generatorUpdateWithoutAccountsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    plans?: plansUpdateOneRequiredWithoutAccount_review_generatorNestedInput
  }

  export type account_review_generatorUncheckedUpdateWithoutAccountsInput = {
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_review_generatorUncheckedUpdateManyWithoutAccountsInput = {
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_social_mediaUpdateWithoutAccountsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    plans?: plansUpdateOneRequiredWithoutAccount_social_mediaNestedInput
  }

  export type account_social_mediaUncheckedUpdateWithoutAccountsInput = {
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_social_mediaUncheckedUpdateManyWithoutAccountsInput = {
    plan_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communications_emails_status_updatesCreateManyCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    id?: string
    status: string
    created_at?: Date | string
  }

  export type communications_emails_status_updatesUpdateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communications_emails_status_updatesUncheckedUpdateWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communications_emails_status_updatesUncheckedUpdateManyWithoutCommunications_emails_communications_emails_status_updates_communications_emailsTocommunications_emailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type contact_info_emailsCreateManyContactsInput = {
    id?: string
    value: string
    priority: number
    created_at?: Date | string
    email_id?: string
  }

  export type contact_info_phonesCreateManyContactsInput = {
    id?: string
    type: string
    value: string
    priority: number
    created_at?: Date | string
  }

  export type contact_info_emailsUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
  }

  export type contact_info_emailsUncheckedUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
  }

  export type contact_info_emailsUncheckedUpdateManyWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_id?: StringFieldUpdateOperationsInput | string
  }

  export type contact_info_phonesUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type contact_info_phonesUncheckedUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type contact_info_phonesUncheckedUpdateManyWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communicationsCreateManyCustomer_recordsInput = {
    id?: string
    type: string
    created_at?: Date | string
    marketing_campaign_id?: string | null
  }

  export type contactsCreateManyCustomer_recordsInput = {
    id?: string
    name: string
    position: string
    priority: number
    created_at?: Date | string
  }

  export type notesCreateManyCustomer_recordsInput = {
    id?: string
    author?: string | null
    note: string
    created_at?: Date | string
  }

  export type communicationsUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    marketing_campaigns?: marketing_campaignsUpdateOneWithoutCommunicationsNestedInput
    communications_emails?: communications_emailsUpdateOneWithoutCommunicationsNestedInput
    communications_texts?: communications_textsUpdateOneWithoutCommunicationsNestedInput
  }

  export type communicationsUncheckedUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    marketing_campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    communications_emails?: communications_emailsUncheckedUpdateOneWithoutCommunicationsNestedInput
    communications_texts?: communications_textsUncheckedUpdateOneWithoutCommunicationsNestedInput
  }

  export type communicationsUncheckedUpdateManyWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    marketing_campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type contactsUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    contact_info_emails?: contact_info_emailsUpdateManyWithoutContactsNestedInput
    contact_info_phones?: contact_info_phonesUpdateManyWithoutContactsNestedInput
  }

  export type contactsUncheckedUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    contact_info_emails?: contact_info_emailsUncheckedUpdateManyWithoutContactsNestedInput
    contact_info_phones?: contact_info_phonesUncheckedUpdateManyWithoutContactsNestedInput
  }

  export type contactsUncheckedUpdateManyWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    priority?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notesUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    reps?: repsUpdateOneWithoutNotesNestedInput
  }

  export type notesUncheckedUpdateWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    note?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notesUncheckedUpdateManyWithoutCustomer_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    note?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communicationsCreateManyMarketing_campaignsInput = {
    id?: string
    customer_record_id?: string | null
    type: string
    created_at?: Date | string
  }

  export type communicationsUpdateWithoutMarketing_campaignsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_records?: customer_recordsUpdateOneWithoutCommunicationsNestedInput
    communications_emails?: communications_emailsUpdateOneWithoutCommunicationsNestedInput
    communications_texts?: communications_textsUpdateOneWithoutCommunicationsNestedInput
  }

  export type communicationsUncheckedUpdateWithoutMarketing_campaignsInput = {
    id?: StringFieldUpdateOperationsInput | string
    customer_record_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    communications_emails?: communications_emailsUncheckedUpdateOneWithoutCommunicationsNestedInput
    communications_texts?: communications_textsUncheckedUpdateOneWithoutCommunicationsNestedInput
  }

  export type communicationsUncheckedUpdateManyWithoutMarketing_campaignsInput = {
    id?: StringFieldUpdateOperationsInput | string
    customer_record_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_ai_chatCreateManyPlansInput = {
    account_id: string
    created_at?: Date | string
  }

  export type account_blog_post_instancesCreateManyPlansInput = {
    blog_post_id?: string
    account_id: string
    post_content: string
    created_at?: Date | string
  }

  export type account_blog_postsCreateManyPlansInput = {
    account_id: string
    created_at?: Date | string
  }

  export type account_plansCreateManyPlansInput = {
    account_id: string
    created_at?: Date | string
  }

  export type account_review_generatorCreateManyPlansInput = {
    account_id: string
    created_at?: Date | string
  }

  export type account_social_mediaCreateManyPlansInput = {
    account_id: string
    created_at?: Date | string
  }

  export type account_ai_chatUpdateWithoutPlansInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_ai_chatNestedInput
  }

  export type account_ai_chatUncheckedUpdateWithoutPlansInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_ai_chatUncheckedUpdateManyWithoutPlansInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_post_instancesUpdateWithoutPlansInput = {
    blog_post_id?: StringFieldUpdateOperationsInput | string
    post_content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_blog_post_instancesNestedInput
  }

  export type account_blog_post_instancesUncheckedUpdateWithoutPlansInput = {
    blog_post_id?: StringFieldUpdateOperationsInput | string
    account_id?: StringFieldUpdateOperationsInput | string
    post_content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_post_instancesUncheckedUpdateManyWithoutPlansInput = {
    blog_post_id?: StringFieldUpdateOperationsInput | string
    account_id?: StringFieldUpdateOperationsInput | string
    post_content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_postsUpdateWithoutPlansInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_blog_postsNestedInput
  }

  export type account_blog_postsUncheckedUpdateWithoutPlansInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_blog_postsUncheckedUpdateManyWithoutPlansInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_plansUpdateWithoutPlansInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_plansNestedInput
  }

  export type account_plansUncheckedUpdateWithoutPlansInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_plansUncheckedUpdateManyWithoutPlansInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_review_generatorUpdateWithoutPlansInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_review_generatorNestedInput
  }

  export type account_review_generatorUncheckedUpdateWithoutPlansInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_review_generatorUncheckedUpdateManyWithoutPlansInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_social_mediaUpdateWithoutPlansInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: accountsUpdateOneRequiredWithoutAccount_social_mediaNestedInput
  }

  export type account_social_mediaUncheckedUpdateWithoutPlansInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type account_social_mediaUncheckedUpdateManyWithoutPlansInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notesCreateManyRepsInput = {
    id?: string
    note: string
    created_at?: Date | string
    customer_record_id: string
  }

  export type notesUpdateWithoutRepsInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_records?: customer_recordsUpdateOneRequiredWithoutNotesNestedInput
  }

  export type notesUncheckedUpdateWithoutRepsInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_record_id?: StringFieldUpdateOperationsInput | string
  }

  export type notesUncheckedUpdateManyWithoutRepsInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_record_id?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use Flow_stateCountOutputTypeDefaultArgs instead
     */
    export type Flow_stateCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Flow_stateCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Mfa_factorsCountOutputTypeDefaultArgs instead
     */
    export type Mfa_factorsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Mfa_factorsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SessionsCountOutputTypeDefaultArgs instead
     */
    export type SessionsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SessionsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Sso_providersCountOutputTypeDefaultArgs instead
     */
    export type Sso_providersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Sso_providersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsersCountOutputTypeDefaultArgs instead
     */
    export type UsersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AccountsCountOutputTypeDefaultArgs instead
     */
    export type AccountsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AccountsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Communications_emailsCountOutputTypeDefaultArgs instead
     */
    export type Communications_emailsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Communications_emailsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ContactsCountOutputTypeDefaultArgs instead
     */
    export type ContactsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ContactsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Customer_recordsCountOutputTypeDefaultArgs instead
     */
    export type Customer_recordsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Customer_recordsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Marketing_campaignsCountOutputTypeDefaultArgs instead
     */
    export type Marketing_campaignsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Marketing_campaignsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PlansCountOutputTypeDefaultArgs instead
     */
    export type PlansCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PlansCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RepsCountOutputTypeDefaultArgs instead
     */
    export type RepsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RepsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use audit_log_entriesDefaultArgs instead
     */
    export type audit_log_entriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = audit_log_entriesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use flow_stateDefaultArgs instead
     */
    export type flow_stateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = flow_stateDefaultArgs<ExtArgs>
    /**
     * @deprecated Use identitiesDefaultArgs instead
     */
    export type identitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = identitiesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use instancesDefaultArgs instead
     */
    export type instancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = instancesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use mfa_amr_claimsDefaultArgs instead
     */
    export type mfa_amr_claimsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = mfa_amr_claimsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use mfa_challengesDefaultArgs instead
     */
    export type mfa_challengesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = mfa_challengesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use mfa_factorsDefaultArgs instead
     */
    export type mfa_factorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = mfa_factorsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use refresh_tokensDefaultArgs instead
     */
    export type refresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = refresh_tokensDefaultArgs<ExtArgs>
    /**
     * @deprecated Use saml_providersDefaultArgs instead
     */
    export type saml_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = saml_providersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use saml_relay_statesDefaultArgs instead
     */
    export type saml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = saml_relay_statesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use schema_migrationsDefaultArgs instead
     */
    export type schema_migrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = schema_migrationsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sessionsDefaultArgs instead
     */
    export type sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sessionsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sso_domainsDefaultArgs instead
     */
    export type sso_domainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sso_domainsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sso_providersDefaultArgs instead
     */
    export type sso_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sso_providersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usersDefaultArgs instead
     */
    export type usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use account_ai_chatDefaultArgs instead
     */
    export type account_ai_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = account_ai_chatDefaultArgs<ExtArgs>
    /**
     * @deprecated Use account_blog_post_instancesDefaultArgs instead
     */
    export type account_blog_post_instancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = account_blog_post_instancesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use account_blog_postsDefaultArgs instead
     */
    export type account_blog_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = account_blog_postsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use account_plansDefaultArgs instead
     */
    export type account_plansArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = account_plansDefaultArgs<ExtArgs>
    /**
     * @deprecated Use account_review_generatorDefaultArgs instead
     */
    export type account_review_generatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = account_review_generatorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use account_social_mediaDefaultArgs instead
     */
    export type account_social_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = account_social_mediaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use accountsDefaultArgs instead
     */
    export type accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = accountsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use communicationsDefaultArgs instead
     */
    export type communicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = communicationsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use communications_emailsDefaultArgs instead
     */
    export type communications_emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = communications_emailsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use communications_emails_status_updatesDefaultArgs instead
     */
    export type communications_emails_status_updatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = communications_emails_status_updatesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use communications_textsDefaultArgs instead
     */
    export type communications_textsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = communications_textsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use contact_info_emailsDefaultArgs instead
     */
    export type contact_info_emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = contact_info_emailsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use contact_info_phonesDefaultArgs instead
     */
    export type contact_info_phonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = contact_info_phonesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use contactsDefaultArgs instead
     */
    export type contactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = contactsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use customer_recordsDefaultArgs instead
     */
    export type customer_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = customer_recordsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use email_templatesDefaultArgs instead
     */
    export type email_templatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = email_templatesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use leadsDefaultArgs instead
     */
    export type leadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = leadsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use marketing_campaignsDefaultArgs instead
     */
    export type marketing_campaignsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = marketing_campaignsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use notesDefaultArgs instead
     */
    export type notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = notesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use opportunitiesDefaultArgs instead
     */
    export type opportunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = opportunitiesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use plansDefaultArgs instead
     */
    export type plansArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = plansDefaultArgs<ExtArgs>
    /**
     * @deprecated Use repsDefaultArgs instead
     */
    export type repsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = repsDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}